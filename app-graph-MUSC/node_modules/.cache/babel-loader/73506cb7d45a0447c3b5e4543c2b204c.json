{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/CustomDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Neo4jContext } from 'use-neo4j';\nimport { loadDisease, loadGene, loadOrgan, loadSyndrome } from '../tools/graphdata';\nimport { Dropdown } from './Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CustomDropdown = _ref => {\n  _s();\n\n  let {\n    name,\n    selected,\n    onChange\n  } = _ref;\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (name === 'gene') {\n      loadGene(driver, handleData);\n    } else if (name === 'organ') {\n      loadOrgan(driver, handleData);\n    } else if (name == 'disease') {\n      loadDisease(driver, handleData);\n    } else if (name == 'syndrome') {\n      console.log('before');\n      loadSyndrome(driver, handleData);\n      console.log('after');\n    }\n\n    console.log('loading data');\n  }, []);\n\n  const handleData = data => {\n    setData(data);\n  };\n\n  const handleChange = selection => {\n    if (onChange) {\n      onChange(selection);\n    }\n  };\n\n  const getLabelName = name => {\n    if (name === 'gene') return 'Filter Gene';else if (name === 'organ') return 'Filter Organ';else if (name === 'disease') return 'Filter disease';else if (name === 'syndrome') return 'Filter syndrome';else return 'Filter nor defined';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    label: getLabelName(name),\n    options: data,\n    selected: selected,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomDropdown, \"EPYKzCT80m/2irlKpmLB1+s6nqc=\");\n\n_c = CustomDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Neo4jContext","loadDisease","loadGene","loadOrgan","loadSyndrome","Dropdown","CustomDropdown","name","selected","onChange","context","driver","data","setData","handleData","console","log","handleChange","selection","getLabelName"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/CustomDropdown.tsx"],"sourcesContent":["\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Neo4jContext } from 'use-neo4j'\nimport { loadDisease, loadGene, loadOrgan, loadSyndrome } from '../tools/graphdata'\nimport { GraphName } from '../tools/graphtools'\nimport { Dropdown } from './Dropdown'\n\ntype CustomDropdownProps = {\n    name: GraphName \n    selected: string[]\n    onChange?: (selected: string[]) => void \n}\n\nexport const CustomDropdown = ( {name, selected, onChange }: CustomDropdownProps) => {\n    \n    const context = useContext(Neo4jContext), driver = context.driver\n\n    const [data, setData] = useState<string[]>([])\n\n    useEffect(()=> {\n        if (name === 'gene') {\n            loadGene(driver, handleData)\n        } else if (name === 'organ') {\n            loadOrgan(driver, handleData)\n        } else if ( name == 'disease') {\n            loadDisease(driver, handleData)\n        } else if ( name == 'syndrome') {\n            console.log('before')\n            loadSyndrome(driver, handleData)\n            console.log('after')\n        }\n        console.log('loading data')\n    },[])\n\n    const handleData = (data: string[]) => {\n        setData(data)\n    }\n\n    const handleChange = (selection: string[] ) =>  {\n        if (onChange) {\n           onChange(selection)\n        }\n    }\n\n    const getLabelName = (name: string) => {\n        if (name === 'gene')\n            return 'Filter Gene'\n        else if (name === 'organ') \n            return 'Filter Organ'\n        else if (name === 'disease')\n            return 'Filter disease'\n        else if (name === 'syndrome')\n            return 'Filter syndrome'\n        else return 'Filter nor defined'\n    }\n\n    return (\n        <Dropdown \n            label={getLabelName(name)}\n            options={data} \n            selected={selected}\n            onChange={handleChange}\n        />\n    )\n}\n\n\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,EAA2CC,YAA3C,QAA+D,oBAA/D;AAEA,SAASC,QAAT,QAAyB,YAAzB;;AAQA,OAAO,MAAMC,cAAc,GAAG,QAAuD;EAAA;;EAAA,IAArD;IAACC,IAAD;IAAOC,QAAP;IAAiBC;EAAjB,CAAqD;EAEjF,MAAMC,OAAO,GAAGb,UAAU,CAACG,YAAD,CAA1B;EAAA,MAA0CW,MAAM,GAAGD,OAAO,CAACC,MAA3D;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAW,EAAX,CAAhC;EAEAD,SAAS,CAAC,MAAK;IACX,IAAIS,IAAI,KAAK,MAAb,EAAqB;MACjBL,QAAQ,CAACS,MAAD,EAASG,UAAT,CAAR;IACH,CAFD,MAEO,IAAIP,IAAI,KAAK,OAAb,EAAsB;MACzBJ,SAAS,CAACQ,MAAD,EAASG,UAAT,CAAT;IACH,CAFM,MAEA,IAAKP,IAAI,IAAI,SAAb,EAAwB;MAC3BN,WAAW,CAACU,MAAD,EAASG,UAAT,CAAX;IACH,CAFM,MAEA,IAAKP,IAAI,IAAI,UAAb,EAAyB;MAC5BQ,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAZ,YAAY,CAACO,MAAD,EAASG,UAAT,CAAZ;MACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;IACH;;IACDD,OAAO,CAACC,GAAR,CAAY,cAAZ;EACH,CAbQ,EAaP,EAbO,CAAT;;EAeA,MAAMF,UAAU,GAAIF,IAAD,IAAoB;IACnCC,OAAO,CAACD,IAAD,CAAP;EACH,CAFD;;EAIA,MAAMK,YAAY,GAAIC,SAAD,IAA2B;IAC5C,IAAIT,QAAJ,EAAc;MACXA,QAAQ,CAACS,SAAD,CAAR;IACF;EACJ,CAJD;;EAMA,MAAMC,YAAY,GAAIZ,IAAD,IAAkB;IACnC,IAAIA,IAAI,KAAK,MAAb,EACI,OAAO,aAAP,CADJ,KAEK,IAAIA,IAAI,KAAK,OAAb,EACD,OAAO,cAAP,CADC,KAEA,IAAIA,IAAI,KAAK,SAAb,EACD,OAAO,gBAAP,CADC,KAEA,IAAIA,IAAI,KAAK,UAAb,EACD,OAAO,iBAAP,CADC,KAEA,OAAO,oBAAP;EACR,CAVD;;EAYA,oBACI,QAAC,QAAD;IACI,KAAK,EAAEY,YAAY,CAACZ,IAAD,CADvB;IAEI,OAAO,EAAEK,IAFb;IAGI,QAAQ,EAAEJ,QAHd;IAII,QAAQ,EAAES;EAJd;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CAnDM;;GAAMX,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}