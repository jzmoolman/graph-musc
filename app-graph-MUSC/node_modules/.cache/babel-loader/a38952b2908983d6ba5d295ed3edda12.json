{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene3/src/views/OrganSelector.tsx\",\n    _s = $RefreshSig$();\n\nimport { useReadCypher } from \"use-neo4j\";\nimport { Dropdown } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrganSelector = _ref => {\n  _s();\n\n  let {\n    onChange\n  } = _ref;\n  console.log('enter - OrganSelector');\n\n  const onChangeDropDown = data => {\n    console.log('enter - onChange.Dropdown ');\n    const selectedOrgan = data.value.map(value => {\n      return {\n        text: value,\n        value: value\n      };\n    });\n    onChange(selectedOrgan);\n    console.log('exit - onChange.Dropdown');\n  };\n\n  const {\n    loading,\n    error,\n    records\n  } = useReadCypher(`MATCH (o:Organ) RETURN DISTINCT o.name as name ORDER BY name`);\n\n  if (loading) {\n    console.log('loading organ');\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      placeholder: \"Loading orgran\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this);\n  }\n\n  if (error) {\n    console.log(error.message);\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      placeholder: \"Error loading genes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }, this);\n  }\n\n  const organs = records === null || records === void 0 ? void 0 : records.map(row => {\n    return {\n      value: row.get('name'),\n      text: row.get('name')\n    };\n  });\n  console.log('exit - Orgran');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      placeholder: \"Select organ\",\n      options: organs,\n      multiple: true,\n      onChange: (e, data) => {\n        onChangeDropDown(data);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrganSelector, \"UevUCZ3iuEqipiWfECNFtczV+XM=\", false, function () {\n  return [useReadCypher];\n});\n\n_c = OrganSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganSelector\");","map":{"version":3,"names":["useReadCypher","Dropdown","OrganSelector","onChange","console","log","onChangeDropDown","data","selectedOrgan","value","map","text","loading","error","records","message","organs","row","get","e"],"sources":["/Users/zack/src/gene3/src/views/OrganSelector.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useReadCypher  } from \"use-neo4j\";\nimport { Dropdown, DropdownProps } from 'semantic-ui-react'\n\nexport type OrganDataType = {\n    value: string\n    text: string\n}\n\ntype OrganSelectorProps = {\n    onChange: (genes: OrganDataType[]) => void \n}\n\nexport const OrganSelector = ({onChange}: OrganSelectorProps )  => {\n    \n    console.log('enter - OrganSelector')\n\n    const onChangeDropDown = (data: DropdownProps) =>  {\n        console.log('enter - onChange.Dropdown ')\n        const selectedOrgan = (data.value as string[]).map(value => { return {text: value ,value: value} })\n        onChange(selectedOrgan)\n        console.log('exit - onChange.Dropdown')        \n    }\n\n    const { loading, error, records} = useReadCypher(\n            `MATCH (o:Organ) RETURN DISTINCT o.name as name ORDER BY name`)\n\n    if ( loading ) { \n        console.log('loading organ')\n        return ( <Dropdown placeholder='Loading orgran'  /> )\n    }\n\n    if ( error ) {\n        console.log(error.message)\n        return ( <Dropdown placeholder='Error loading genes'  /> )\n    }\n\n    const organs = records?.map( row => {\n        return  {value: row.get('name'), text: row.get('name')}\n    })\n    console.log('exit - Orgran')\n\n    return (\n        <div>\n            <Dropdown placeholder='Select organ' options={organs} \n                multiple={true} \n                onChange={ (e,data)=>{ onChangeDropDown(data) } }\n            />\n       </div>\n    )\n}"],"mappings":";;;AACA,SAASA,aAAT,QAA+B,WAA/B;AACA,SAASC,QAAT,QAAwC,mBAAxC;;AAWA,OAAO,MAAMC,aAAa,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAACC;EAAD,CAAqC;EAE/DC,OAAO,CAACC,GAAR,CAAY,uBAAZ;;EAEA,MAAMC,gBAAgB,GAAIC,IAAD,IAA0B;IAC/CH,OAAO,CAACC,GAAR,CAAY,4BAAZ;IACA,MAAMG,aAAa,GAAID,IAAI,CAACE,KAAN,CAAyBC,GAAzB,CAA6BD,KAAK,IAAI;MAAE,OAAO;QAACE,IAAI,EAAEF,KAAP;QAAcA,KAAK,EAAEA;MAArB,CAAP;IAAoC,CAA5E,CAAtB;IACAN,QAAQ,CAACK,aAAD,CAAR;IACAJ,OAAO,CAACC,GAAR,CAAY,0BAAZ;EACH,CALD;;EAOA,MAAM;IAAEO,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA6Bd,aAAa,CACvC,8DADuC,CAAhD;;EAGA,IAAKY,OAAL,EAAe;IACXR,OAAO,CAACC,GAAR,CAAY,eAAZ;IACA,oBAAS,QAAC,QAAD;MAAU,WAAW,EAAC;IAAtB;MAAA;MAAA;MAAA;IAAA,QAAT;EACH;;EAED,IAAKQ,KAAL,EAAa;IACTT,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACE,OAAlB;IACA,oBAAS,QAAC,QAAD;MAAU,WAAW,EAAC;IAAtB;MAAA;MAAA;MAAA;IAAA,QAAT;EACH;;EAED,MAAMC,MAAM,GAAGF,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEJ,GAAT,CAAcO,GAAG,IAAI;IAChC,OAAQ;MAACR,KAAK,EAAEQ,GAAG,CAACC,GAAJ,CAAQ,MAAR,CAAR;MAAyBP,IAAI,EAAEM,GAAG,CAACC,GAAJ,CAAQ,MAAR;IAA/B,CAAR;EACH,CAFc,CAAf;EAGAd,OAAO,CAACC,GAAR,CAAY,eAAZ;EAEA,oBACI;IAAA,uBACI,QAAC,QAAD;MAAU,WAAW,EAAC,cAAtB;MAAqC,OAAO,EAAEW,MAA9C;MACI,QAAQ,EAAE,IADd;MAEI,QAAQ,EAAG,CAACG,CAAD,EAAGZ,IAAH,KAAU;QAAED,gBAAgB,CAACC,IAAD,CAAhB;MAAwB;IAFnD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CArCM;;GAAML,a;UAW0BF,a;;;KAX1BE,a"},"metadata":{},"sourceType":"module"}