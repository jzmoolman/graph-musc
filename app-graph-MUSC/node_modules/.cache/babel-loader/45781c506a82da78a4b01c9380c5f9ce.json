{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar bolt_protocol_v1_1 = __importDefault(require(\"./bolt-protocol-v1\"));\n\nvar bolt_protocol_v2_1 = __importDefault(require(\"./bolt-protocol-v2\"));\n\nvar bolt_protocol_v3_1 = __importDefault(require(\"./bolt-protocol-v3\"));\n\nvar bolt_protocol_v4x0_1 = __importDefault(require(\"./bolt-protocol-v4x0\"));\n\nvar bolt_protocol_v4x1_1 = __importDefault(require(\"./bolt-protocol-v4x1\"));\n\nvar bolt_protocol_v4x2_1 = __importDefault(require(\"./bolt-protocol-v4x2\"));\n\nvar bolt_protocol_v4x3_1 = __importDefault(require(\"./bolt-protocol-v4x3\"));\n\nvar bolt_protocol_v4x4_1 = __importDefault(require(\"./bolt-protocol-v4x4\"));\n\nvar response_handler_1 = __importDefault(require(\"./response-handler\"));\n/**\n * Creates a protocol with a given version\n *\n * @param {object} config\n * @param {number} config.version The version of the protocol\n * @param {channel} config.channel The channel\n * @param {Chunker} config.chunker The chunker\n * @param {Dechunker} config.dechunker The dechunker\n * @param {Logger} config.log The logger\n * @param {ResponseHandler~Observer} config.observer Observer\n * @param {boolean} config.disableLosslessIntegers Disable the lossless integers\n * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n * @param {boolean} config.serversideRouting It's using server side routing\n */\n\n\nfunction create(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      version = _b.version,\n      chunker = _b.chunker,\n      dechunker = _b.dechunker,\n      channel = _b.channel,\n      disableLosslessIntegers = _b.disableLosslessIntegers,\n      useBigInt = _b.useBigInt,\n      serversideRouting = _b.serversideRouting,\n      server = _b.server,\n      // server info\n  log = _b.log,\n      observer = _b.observer;\n\n  var createResponseHandler = function (protocol) {\n    var responseHandler = new response_handler_1.default({\n      transformMetadata: protocol.transformMetadata.bind(protocol),\n      log: log,\n      observer: observer\n    }); // reset the error handler to just handle errors and forget about the handshake promise\n\n    channel.onerror = observer.onError.bind(observer); // Ok, protocol running. Simply forward all messages to the dechunker\n\n    channel.onmessage = function (buf) {\n      return dechunker.write(buf);\n    }; // setup dechunker to dechunk messages and forward them to the message handler\n\n\n    dechunker.onmessage = function (buf) {\n      responseHandler.handleResponse(protocol.unpacker().unpack(buf));\n    };\n\n    return responseHandler;\n  };\n\n  return createProtocol(version, server, chunker, {\n    disableLosslessIntegers: disableLosslessIntegers,\n    useBigInt: useBigInt\n  }, serversideRouting, createResponseHandler, observer.onProtocolError.bind(observer), log);\n}\n\nexports.default = create;\n\nfunction createProtocol(version, server, chunker, packingConfig, serversideRouting, createResponseHandler, onProtocolError, log) {\n  switch (version) {\n    case 1:\n      return new bolt_protocol_v1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n\n    case 2:\n      return new bolt_protocol_v2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n\n    case 3:\n      return new bolt_protocol_v3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n\n    case 4.0:\n      return new bolt_protocol_v4x0_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n\n    case 4.1:\n      return new bolt_protocol_v4x1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n\n    case 4.2:\n      return new bolt_protocol_v4x2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n\n    case 4.3:\n      return new bolt_protocol_v4x3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n\n    case 4.4:\n      return new bolt_protocol_v4x4_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n\n    default:\n      throw (0, neo4j_driver_core_1.newError)('Unknown Bolt protocol version: ' + version);\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","neo4j_driver_core_1","require","bolt_protocol_v1_1","bolt_protocol_v2_1","bolt_protocol_v3_1","bolt_protocol_v4x0_1","bolt_protocol_v4x1_1","bolt_protocol_v4x2_1","bolt_protocol_v4x3_1","bolt_protocol_v4x4_1","response_handler_1","create","_a","_b","version","chunker","dechunker","channel","disableLosslessIntegers","useBigInt","serversideRouting","server","log","observer","createResponseHandler","protocol","responseHandler","default","transformMetadata","bind","onerror","onError","onmessage","buf","write","handleResponse","unpacker","unpack","createProtocol","onProtocolError","packingConfig","newError"],"sources":["/Users/zack/src/gene3/node_modules/neo4j-driver-bolt-connection/lib/bolt/create.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar bolt_protocol_v1_1 = __importDefault(require(\"./bolt-protocol-v1\"));\nvar bolt_protocol_v2_1 = __importDefault(require(\"./bolt-protocol-v2\"));\nvar bolt_protocol_v3_1 = __importDefault(require(\"./bolt-protocol-v3\"));\nvar bolt_protocol_v4x0_1 = __importDefault(require(\"./bolt-protocol-v4x0\"));\nvar bolt_protocol_v4x1_1 = __importDefault(require(\"./bolt-protocol-v4x1\"));\nvar bolt_protocol_v4x2_1 = __importDefault(require(\"./bolt-protocol-v4x2\"));\nvar bolt_protocol_v4x3_1 = __importDefault(require(\"./bolt-protocol-v4x3\"));\nvar bolt_protocol_v4x4_1 = __importDefault(require(\"./bolt-protocol-v4x4\"));\nvar response_handler_1 = __importDefault(require(\"./response-handler\"));\n/**\n * Creates a protocol with a given version\n *\n * @param {object} config\n * @param {number} config.version The version of the protocol\n * @param {channel} config.channel The channel\n * @param {Chunker} config.chunker The chunker\n * @param {Dechunker} config.dechunker The dechunker\n * @param {Logger} config.log The logger\n * @param {ResponseHandler~Observer} config.observer Observer\n * @param {boolean} config.disableLosslessIntegers Disable the lossless integers\n * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n * @param {boolean} config.serversideRouting It's using server side routing\n */\nfunction create(_a) {\n    var _b = _a === void 0 ? {} : _a, version = _b.version, chunker = _b.chunker, dechunker = _b.dechunker, channel = _b.channel, disableLosslessIntegers = _b.disableLosslessIntegers, useBigInt = _b.useBigInt, serversideRouting = _b.serversideRouting, server = _b.server, // server info\n    log = _b.log, observer = _b.observer;\n    var createResponseHandler = function (protocol) {\n        var responseHandler = new response_handler_1.default({\n            transformMetadata: protocol.transformMetadata.bind(protocol),\n            log: log,\n            observer: observer\n        });\n        // reset the error handler to just handle errors and forget about the handshake promise\n        channel.onerror = observer.onError.bind(observer);\n        // Ok, protocol running. Simply forward all messages to the dechunker\n        channel.onmessage = function (buf) { return dechunker.write(buf); };\n        // setup dechunker to dechunk messages and forward them to the message handler\n        dechunker.onmessage = function (buf) {\n            responseHandler.handleResponse(protocol.unpacker().unpack(buf));\n        };\n        return responseHandler;\n    };\n    return createProtocol(version, server, chunker, { disableLosslessIntegers: disableLosslessIntegers, useBigInt: useBigInt }, serversideRouting, createResponseHandler, observer.onProtocolError.bind(observer), log);\n}\nexports.default = create;\nfunction createProtocol(version, server, chunker, packingConfig, serversideRouting, createResponseHandler, onProtocolError, log) {\n    switch (version) {\n        case 1:\n            return new bolt_protocol_v1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 2:\n            return new bolt_protocol_v2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 3:\n            return new bolt_protocol_v3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 4.0:\n            return new bolt_protocol_v4x0_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 4.1:\n            return new bolt_protocol_v4x1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.2:\n            return new bolt_protocol_v4x2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.3:\n            return new bolt_protocol_v4x3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.4:\n            return new bolt_protocol_v4x4_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        default:\n            throw (0, neo4j_driver_core_1.newError)('Unknown Bolt protocol version: ' + version);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}