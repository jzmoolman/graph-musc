{"ast":null,"code":"import Half from \"./half\";\nexport default function (callback) {\n  var halves = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      x1;\n  if (node) halves.push(new Half(node, this._x0, this._x1));\n\n  while (q = halves.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, x1 = q.x1) && node.length) {\n      var xm = (x0 + x1) / 2;\n      if (child = node[1]) halves.push(new Half(child, xm, x1));\n      if (child = node[0]) halves.push(new Half(child, x0, xm));\n    }\n  }\n\n  return this;\n}","map":{"version":3,"names":["Half","callback","halves","q","node","_root","child","x0","x1","push","_x0","_x1","pop","length","xm"],"sources":["/Users/zack/src/gene3/node_modules/d3-binarytree/src/visit.js"],"sourcesContent":["import Half from \"./half\";\n\nexport default function(callback) {\n  var halves = [], q, node = this._root, child, x0, x1;\n  if (node) halves.push(new Half(node, this._x0, this._x1));\n  while (q = halves.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, x1 = q.x1) && node.length) {\n      var xm = (x0 + x1) / 2;\n      if (child = node[1]) halves.push(new Half(child, xm, x1));\n      if (child = node[0]) halves.push(new Half(child, x0, xm));\n    }\n  }\n  return this;\n}\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,eAAe,UAASC,QAAT,EAAmB;EAChC,IAAIC,MAAM,GAAG,EAAb;EAAA,IAAiBC,CAAjB;EAAA,IAAoBC,IAAI,GAAG,KAAKC,KAAhC;EAAA,IAAuCC,KAAvC;EAAA,IAA8CC,EAA9C;EAAA,IAAkDC,EAAlD;EACA,IAAIJ,IAAJ,EAAUF,MAAM,CAACO,IAAP,CAAY,IAAIT,IAAJ,CAASI,IAAT,EAAe,KAAKM,GAApB,EAAyB,KAAKC,GAA9B,CAAZ;;EACV,OAAOR,CAAC,GAAGD,MAAM,CAACU,GAAP,EAAX,EAAyB;IACvB,IAAI,CAACX,QAAQ,CAACG,IAAI,GAAGD,CAAC,CAACC,IAAV,EAAgBG,EAAE,GAAGJ,CAAC,CAACI,EAAvB,EAA2BC,EAAE,GAAGL,CAAC,CAACK,EAAlC,CAAT,IAAkDJ,IAAI,CAACS,MAA3D,EAAmE;MACjE,IAAIC,EAAE,GAAG,CAACP,EAAE,GAAGC,EAAN,IAAY,CAArB;MACA,IAAIF,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAhB,EAAqBF,MAAM,CAACO,IAAP,CAAY,IAAIT,IAAJ,CAASM,KAAT,EAAgBQ,EAAhB,EAAoBN,EAApB,CAAZ;MACrB,IAAIF,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAhB,EAAqBF,MAAM,CAACO,IAAP,CAAY,IAAIT,IAAJ,CAASM,KAAT,EAAgBC,EAAhB,EAAoBO,EAApB,CAAZ;IACtB;EACF;;EACD,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}