{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/Filters.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport { GeneDropdown } from './GeneDropdown';\nimport { CustomSelect } from './CustomSelect';\nimport { OrganDropdown } from './OrganDropdown';\nimport { DiseaseDropdown } from './DiseaseDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Filters = _ref => {\n  _s();\n\n  let {\n    name,\n    genes,\n    organs,\n    diseases\n  } = _ref;\n  const [finalVerdict, setFinalVerdict] = useState('Confirmed');\n\n  const handleGeneChange = selection => {};\n\n  const handleOrganChange = selection => {};\n\n  const handleDiseaseChange = selection => {};\n\n  const handleFinalVerdictChange = finalVerdict => {\n    setFinalVerdict(finalVerdict);\n  };\n\n  const DisplayPanel = () => {\n    if (name === 'gene') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(GeneDropdown, {\n          onChange: handleGeneChange,\n          selected: genes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          options: [//Do not know how to get the key value yet\n          {\n            key: '1',\n            value: 'Confirmed'\n          }, {\n            key: '9',\n            value: 'Maybe'\n          }] // {key:'0', value:  'Unknown'}]\n          ,\n          label: \"Final verdict\",\n          defaultSelected: finalVerdict,\n          onChange: handleFinalVerdictChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else if (name === 'organ') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(OrganDropdown, {\n          onChange: handleOrganChange,\n          selected: organs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          options: [//Do not know how to get the key value yet\n          {\n            key: '1',\n            value: 'Confirmed'\n          }, {\n            key: '9',\n            value: 'Maybe'\n          }] // {key:'0', value:  'Unknown'}]\n          ,\n          label: \"Final verdict\",\n          defaultSelected: finalVerdict,\n          onChange: handleFinalVerdictChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else if (name === 'disease') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DiseaseDropdown, {\n          onChange: handleDiseaseChange,\n          selected: diseases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          options: [//Do not know how to get the key value yet\n          {\n            key: '1',\n            value: 'Confirmed'\n          }, {\n            key: '9',\n            value: 'Maybe'\n          }] // {key:'0', value:  'Unknown'}]\n          ,\n          label: \"Final verdict\",\n          defaultSelected: finalVerdict,\n          onChange: handleFinalVerdictChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(DisplayPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Filters, \"tv5VLl1l/38ngl4TRePjFY7cfZ8=\");\n\n_c = Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","Box","GeneDropdown","CustomSelect","OrganDropdown","DiseaseDropdown","Filters","name","genes","organs","diseases","finalVerdict","setFinalVerdict","handleGeneChange","selection","handleOrganChange","handleDiseaseChange","handleFinalVerdictChange","DisplayPanel","key","value"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/Filters.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport  { Box } from '@mui/material'\nimport { GeneDropdown } from './GeneDropdown'\nimport { CustomSelect } from './CustomSelect'\nimport { OrganDropdown } from './OrganDropdown'\nimport { DiseaseDropdown } from './DiseaseDropdown'\n\ntype FiltersProps = {\n    name: string\n    genes: string[]\n    organs: string[]\n    diseases: string[]\n\n}\n\n\nexport const Filters = ( {name, genes, organs, diseases} : FiltersProps ) => {\n    const [finalVerdict, setFinalVerdict] = useState('Confirmed') \n\n    const handleGeneChange = (selection: string[]) => {\n    }\n\n    const handleOrganChange = (selection: string[]) => {\n    }\n\n    const handleDiseaseChange = (selection: string[]) => {\n    }\n    const handleFinalVerdictChange = (finalVerdict: string) => {\n        setFinalVerdict(finalVerdict)\n\n    }\n\n    const DisplayPanel = () => {\n        if (name === 'gene' )  {\n            return (\n                <>\n                    <GeneDropdown onChange={handleGeneChange} selected={genes}/>\n                    <CustomSelect \n                            options={\n                                [\n                                    //Do not know how to get the key value yet\n                                    {key:'1', value: 'Confirmed'},\n                                    {key:'9', value: 'Maybe'}]\n                                    // {key:'0', value:  'Unknown'}]\n                            }\n                            label='Final verdict' \n                            defaultSelected={finalVerdict}\n                            onChange={handleFinalVerdictChange}\n                    />\n\n                </>\n            )     \n        } else if (name === 'organ') {\n            return (\n                <>\n                    <OrganDropdown onChange={handleOrganChange} selected={organs}/>\n                    <CustomSelect \n                        options={\n                            [\n                                //Do not know how to get the key value yet\n                                {key:'1', value: 'Confirmed'},\n                                {key:'9', value: 'Maybe'}]\n                                // {key:'0', value:  'Unknown'}]\n                        }\n                        label='Final verdict' \n                        defaultSelected={finalVerdict}\n                        onChange={handleFinalVerdictChange}\n                    />\n                </>\n            )\n        } else if (name === 'disease') {\n            return (\n                <>\n                    <DiseaseDropdown onChange={handleDiseaseChange} selected={diseases}/>\n                    <CustomSelect \n                        options={\n                            [\n                                //Do not know how to get the key value yet\n                                {key:'1', value: 'Confirmed'},\n                                {key:'9', value: 'Maybe'}]\n                                // {key:'0', value:  'Unknown'}]\n                        }\n                        label='Final verdict' \n                        defaultSelected={finalVerdict}\n                        onChange={handleFinalVerdictChange}\n                    />\n                </>\n            )\n        }\n        return ( <></>)\n    }\n\n\n    return (\n        <Box >\n            <DisplayPanel />\n        </Box>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAUC,GAAV,QAAqB,eAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;AAWA,OAAO,MAAMC,OAAO,GAAG,QAAsD;EAAA;;EAAA,IAApD;IAACC,IAAD;IAAOC,KAAP;IAAcC,MAAd;IAAsBC;EAAtB,CAAoD;EACzE,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,WAAD,CAAhD;;EAEA,MAAMa,gBAAgB,GAAIC,SAAD,IAAyB,CACjD,CADD;;EAGA,MAAMC,iBAAiB,GAAID,SAAD,IAAyB,CAClD,CADD;;EAGA,MAAME,mBAAmB,GAAIF,SAAD,IAAyB,CACpD,CADD;;EAEA,MAAMG,wBAAwB,GAAIN,YAAD,IAA0B;IACvDC,eAAe,CAACD,YAAD,CAAf;EAEH,CAHD;;EAKA,MAAMO,YAAY,GAAG,MAAM;IACvB,IAAIX,IAAI,KAAK,MAAb,EAAuB;MACnB,oBACI;QAAA,wBACI,QAAC,YAAD;UAAc,QAAQ,EAAEM,gBAAxB;UAA0C,QAAQ,EAAEL;QAApD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,YAAD;UACQ,OAAO,EACH,CACI;UACA;YAACW,GAAG,EAAC,GAAL;YAAUC,KAAK,EAAE;UAAjB,CAFJ,EAGI;YAACD,GAAG,EAAC,GAAL;YAAUC,KAAK,EAAE;UAAjB,CAHJ,CADG,CAKC;UANhB;UAQQ,KAAK,EAAC,eARd;UASQ,eAAe,EAAET,YATzB;UAUQ,QAAQ,EAAEM;QAVlB;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,gBADJ;IAkBH,CAnBD,MAmBO,IAAIV,IAAI,KAAK,OAAb,EAAsB;MACzB,oBACI;QAAA,wBACI,QAAC,aAAD;UAAe,QAAQ,EAAEQ,iBAAzB;UAA4C,QAAQ,EAAEN;QAAtD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,YAAD;UACI,OAAO,EACH,CACI;UACA;YAACU,GAAG,EAAC,GAAL;YAAUC,KAAK,EAAE;UAAjB,CAFJ,EAGI;YAACD,GAAG,EAAC,GAAL;YAAUC,KAAK,EAAE;UAAjB,CAHJ,CADG,CAKC;UANZ;UAQI,KAAK,EAAC,eARV;UASI,eAAe,EAAET,YATrB;UAUI,QAAQ,EAAEM;QAVd;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,gBADJ;IAiBH,CAlBM,MAkBA,IAAIV,IAAI,KAAK,SAAb,EAAwB;MAC3B,oBACI;QAAA,wBACI,QAAC,eAAD;UAAiB,QAAQ,EAAES,mBAA3B;UAAgD,QAAQ,EAAEN;QAA1D;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,YAAD;UACI,OAAO,EACH,CACI;UACA;YAACS,GAAG,EAAC,GAAL;YAAUC,KAAK,EAAE;UAAjB,CAFJ,EAGI;YAACD,GAAG,EAAC,GAAL;YAAUC,KAAK,EAAE;UAAjB,CAHJ,CADG,CAKC;UANZ;UAQI,KAAK,EAAC,eARV;UASI,eAAe,EAAET,YATrB;UAUI,QAAQ,EAAEM;QAVd;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,gBADJ;IAiBH;;IACD,oBAAS,qCAAT;EACH,CA1DD;;EA6DA,oBACI,QAAC,GAAD;IAAA,uBACI,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAlFM;;GAAMX,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}