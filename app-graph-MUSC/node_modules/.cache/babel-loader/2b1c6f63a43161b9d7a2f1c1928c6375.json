{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/HomeGraph.tsx\";\nimport React from 'react';\nimport { Box, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomeGraph = () => {\n  console.log('enter - HomeGraph');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    bgcolor: \"primary.main\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        display: 'flex',\n        margin: '2px',\n        width: '100%',\n        height: '100%',\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        display: 'flex',\n        margin: '2px',\n        width: '100%',\n        height: '100%',\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        display: 'flex',\n        margin: '2px',\n        width: '100%',\n        height: '100%',\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = HomeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGraph\");","map":{"version":3,"names":["React","Box","Paper","HomeGraph","console","log","display","margin","width","height","color"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/HomeGraph.tsx"],"sourcesContent":["import React, { useState, memo } from 'react'\nimport  { Box, Grid, Paper } from '@mui/material'\nimport { BaseGraph } from './BaseGraph';\nimport { defaultGraphScheme } from '../tools/graphtools';\n\n\nexport const HomeGraph = () => {\n    console.log('enter - HomeGraph')\n\n    return (\n        <Box display='flex' flex-direction='row' bgcolor='primary.main'>\n            <Paper \n                elevation={4}         \n                sx={{ \n                    display: 'flex',\n                    margin: '2px',\n                    width:'100%',\n                    height: '100%',\n                    color: 'white',\n                }}\n            >\n                {/* <BaseGraph \n                    drawerOpen={false}\n                    name={'gene'}\n                    genes={['BRCA1','BRCA2']}\n                    organs={[]}\n                    syndromes={[]}\n                    diseases={[]}\n                    finalVerdict='Confimred'\n                    graphScheme={defaultGraphScheme}\n                /> */}\n            </Paper>\n            <Paper \n                elevation={4}         \n                sx={{ \n                    display: 'flex',\n                    margin: '2px',\n                    width:'100%',\n                    height: '100%',\n                    color: 'white',\n                }}\n            >\n                {/* <BaseGraph \n                    drawerOpen={false}\n                    name={'organ'}\n                    genes={['BRCA1','BRCA2']}\n                    organs={[]}\n                    syndromes={[]}\n                    diseases={[]}\n                    finalVerdict='Confimred'\n                    graphScheme={defaultGraphScheme}\n                /> */}\n            </Paper>\n            <Paper \n                elevation={4}         \n                sx={{ \n                    display: 'flex',\n                    margin: '2px',\n                    width:'100%',\n                    height: '100%',\n                    color: 'white',\n                }}\n            >\n                {/* <BaseGraph \n                    drawerOpen={false}\n                    name={'syndome-organ'}\n                    genes={['BRCA1','BRCA2']}\n                    organs={[]}\n                    syndromes={[]}\n                    diseases={[]}\n                    finalVerdict='Confimred'\n                    graphScheme={defaultGraphScheme}\n                /> */}\n            </Paper>\n        </Box>\n    )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAsC,OAAtC;AACA,SAAUC,GAAV,EAAqBC,KAArB,QAAkC,eAAlC;;AAKA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAC3BC,OAAO,CAACC,GAAR,CAAY,mBAAZ;EAEA,oBACI,QAAC,GAAD;IAAK,OAAO,EAAC,MAAb;IAAoB,kBAAe,KAAnC;IAAyC,OAAO,EAAC,cAAjD;IAAA,wBACI,QAAC,KAAD;MACI,SAAS,EAAE,CADf;MAEI,EAAE,EAAE;QACAC,OAAO,EAAE,MADT;QAEAC,MAAM,EAAE,KAFR;QAGAC,KAAK,EAAC,MAHN;QAIAC,MAAM,EAAE,MAJR;QAKAC,KAAK,EAAE;MALP;IAFR;MAAA;MAAA;MAAA;IAAA,QADJ,eAsBI,QAAC,KAAD;MACI,SAAS,EAAE,CADf;MAEI,EAAE,EAAE;QACAJ,OAAO,EAAE,MADT;QAEAC,MAAM,EAAE,KAFR;QAGAC,KAAK,EAAC,MAHN;QAIAC,MAAM,EAAE,MAJR;QAKAC,KAAK,EAAE;MALP;IAFR;MAAA;MAAA;MAAA;IAAA,QAtBJ,eA2CI,QAAC,KAAD;MACI,SAAS,EAAE,CADf;MAEI,EAAE,EAAE;QACAJ,OAAO,EAAE,MADT;QAEAC,MAAM,EAAE,KAFR;QAGAC,KAAK,EAAC,MAHN;QAIAC,MAAM,EAAE,MAJR;QAKAC,KAAK,EAAE;MALP;IAFR;MAAA;MAAA;MAAA;IAAA,QA3CJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmEH,CAtEM;KAAMP,S"},"metadata":{},"sourceType":"module"}