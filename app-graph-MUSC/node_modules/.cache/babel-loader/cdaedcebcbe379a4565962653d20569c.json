{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Common base with default implementation for most buffer methods.\n * Buffers are stateful - they track a current \"position\", this helps greatly\n * when reading and writing from them incrementally. You can also ignore the\n * stateful read/write methods.\n * readXXX and writeXXX-methods move the inner position of the buffer.\n * putXXX and getXXX-methods do not.\n * @access private\n */\n\nvar BaseBuffer =\n/** @class */\nfunction () {\n  /**\n   * Create a instance with the injected size.\n   * @constructor\n   * @param {Integer} size\n   */\n  function BaseBuffer(size) {\n    this.position = 0;\n    this.length = size;\n  }\n\n  BaseBuffer.prototype.getUInt8 = function (position) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.getInt8 = function (position) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.getFloat64 = function (position) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.putUInt8 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.putInt8 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.putFloat64 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n  /**\n   * @param p\n   */\n\n\n  BaseBuffer.prototype.getInt16 = function (p) {\n    return this.getInt8(p) << 8 | this.getUInt8(p + 1);\n  };\n  /**\n   * @param p\n   */\n\n\n  BaseBuffer.prototype.getUInt16 = function (p) {\n    return this.getUInt8(p) << 8 | this.getUInt8(p + 1);\n  };\n  /**\n   * @param p\n   */\n\n\n  BaseBuffer.prototype.getInt32 = function (p) {\n    return this.getInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\n  };\n  /**\n   * @param p\n   */\n\n\n  BaseBuffer.prototype.getUInt32 = function (p) {\n    return this.getUInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\n  };\n  /**\n   * @param p\n   */\n\n\n  BaseBuffer.prototype.getInt64 = function (p) {\n    return this.getInt8(p) << 56 | this.getUInt8(p + 1) << 48 | this.getUInt8(p + 2) << 40 | this.getUInt8(p + 3) << 32 | this.getUInt8(p + 4) << 24 | this.getUInt8(p + 5) << 16 | this.getUInt8(p + 6) << 8 | this.getUInt8(p + 7);\n  };\n  /**\n   * Get a slice of this buffer. This method does not copy any data,\n   * but simply provides a slice view of this buffer\n   * @param start\n   * @param length\n   */\n\n\n  BaseBuffer.prototype.getSlice = function (start, length) {\n    return new SliceBuffer(start, length, this);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.putInt16 = function (p, val) {\n    this.putInt8(p, val >> 8);\n    this.putUInt8(p + 1, val & 0xff);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.putUInt16 = function (p, val) {\n    this.putUInt8(p, val >> 8 & 0xff);\n    this.putUInt8(p + 1, val & 0xff);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.putInt32 = function (p, val) {\n    this.putInt8(p, val >> 24);\n    this.putUInt8(p + 1, val >> 16 & 0xff);\n    this.putUInt8(p + 2, val >> 8 & 0xff);\n    this.putUInt8(p + 3, val & 0xff);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.putUInt32 = function (p, val) {\n    this.putUInt8(p, val >> 24 & 0xff);\n    this.putUInt8(p + 1, val >> 16 & 0xff);\n    this.putUInt8(p + 2, val >> 8 & 0xff);\n    this.putUInt8(p + 3, val & 0xff);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.putInt64 = function (p, val) {\n    this.putInt8(p, val >> 48);\n    this.putUInt8(p + 1, val >> 42 & 0xff);\n    this.putUInt8(p + 2, val >> 36 & 0xff);\n    this.putUInt8(p + 3, val >> 30 & 0xff);\n    this.putUInt8(p + 4, val >> 24 & 0xff);\n    this.putUInt8(p + 5, val >> 16 & 0xff);\n    this.putUInt8(p + 6, val >> 8 & 0xff);\n    this.putUInt8(p + 7, val & 0xff);\n  };\n  /**\n   * @param position\n   * @param other\n   */\n\n\n  BaseBuffer.prototype.putBytes = function (position, other) {\n    for (var i = 0, end = other.remaining(); i < end; i++) {\n      this.putUInt8(position + i, other.readUInt8());\n    }\n  };\n  /**\n   * Read from state position.\n   */\n\n\n  BaseBuffer.prototype.readUInt8 = function () {\n    return this.getUInt8(this._updatePos(1));\n  };\n  /**\n   * Read from state position.\n   */\n\n\n  BaseBuffer.prototype.readInt8 = function () {\n    return this.getInt8(this._updatePos(1));\n  };\n  /**\n   * Read from state position.\n   */\n\n\n  BaseBuffer.prototype.readUInt16 = function () {\n    return this.getUInt16(this._updatePos(2));\n  };\n  /**\n   * Read from state position.\n   */\n\n\n  BaseBuffer.prototype.readUInt32 = function () {\n    return this.getUInt32(this._updatePos(4));\n  };\n  /**\n   * Read from state position.\n   */\n\n\n  BaseBuffer.prototype.readInt16 = function () {\n    return this.getInt16(this._updatePos(2));\n  };\n  /**\n   * Read from state position.\n   */\n\n\n  BaseBuffer.prototype.readInt32 = function () {\n    return this.getInt32(this._updatePos(4));\n  };\n  /**\n   * Read from state position.\n   */\n\n\n  BaseBuffer.prototype.readInt64 = function () {\n    return this.getInt32(this._updatePos(8));\n  };\n  /**\n   * Read from state position.\n   */\n\n\n  BaseBuffer.prototype.readFloat64 = function () {\n    return this.getFloat64(this._updatePos(8));\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.writeUInt8 = function (val) {\n    this.putUInt8(this._updatePos(1), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.writeInt8 = function (val) {\n    this.putInt8(this._updatePos(1), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.writeInt16 = function (val) {\n    this.putInt16(this._updatePos(2), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.writeInt32 = function (val) {\n    this.putInt32(this._updatePos(4), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.writeUInt32 = function (val) {\n    this.putUInt32(this._updatePos(4), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.writeInt64 = function (val) {\n    this.putInt64(this._updatePos(8), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.writeFloat64 = function (val) {\n    this.putFloat64(this._updatePos(8), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n\n\n  BaseBuffer.prototype.writeBytes = function (val) {\n    this.putBytes(this._updatePos(val.remaining()), val);\n  };\n  /**\n   * Get a slice of this buffer. This method does not copy any data,\n   * but simply provides a slice view of this buffer\n   * @param length\n   */\n\n\n  BaseBuffer.prototype.readSlice = function (length) {\n    return this.getSlice(this._updatePos(length), length);\n  };\n\n  BaseBuffer.prototype._updatePos = function (length) {\n    var p = this.position;\n    this.position += length;\n    return p;\n  };\n  /**\n   * Get remaining\n   */\n\n\n  BaseBuffer.prototype.remaining = function () {\n    return this.length - this.position;\n  };\n  /**\n   * Has remaining\n   */\n\n\n  BaseBuffer.prototype.hasRemaining = function () {\n    return this.remaining() > 0;\n  };\n  /**\n   * Reset position state\n   */\n\n\n  BaseBuffer.prototype.reset = function () {\n    this.position = 0;\n  };\n  /**\n   * Get string representation of buffer and it's state.\n   * @return {string} Buffer as a string\n   */\n\n\n  BaseBuffer.prototype.toString = function () {\n    return this.constructor.name + '( position=' + this.position + ' )\\n  ' + this.toHex();\n  };\n  /**\n   * Get string representation of buffer.\n   * @return {string} Buffer as a string\n   */\n\n\n  BaseBuffer.prototype.toHex = function () {\n    var out = '';\n\n    for (var i = 0; i < this.length; i++) {\n      var hexByte = this.getUInt8(i).toString(16);\n\n      if (hexByte.length === 1) {\n        hexByte = '0' + hexByte;\n      }\n\n      out += hexByte;\n\n      if (i !== this.length - 1) {\n        out += ' ';\n      }\n    }\n\n    return out;\n  };\n\n  return BaseBuffer;\n}();\n\nexports.default = BaseBuffer;\n/**\n * Represents a view as slice of another buffer.\n * @access private\n */\n\nvar SliceBuffer =\n/** @class */\nfunction (_super) {\n  __extends(SliceBuffer, _super);\n\n  function SliceBuffer(start, length, inner) {\n    var _this = _super.call(this, length) || this;\n\n    _this._start = start;\n    _this._inner = inner;\n    return _this;\n  }\n\n  SliceBuffer.prototype.putUInt8 = function (position, val) {\n    this._inner.putUInt8(this._start + position, val);\n  };\n\n  SliceBuffer.prototype.getUInt8 = function (position) {\n    return this._inner.getUInt8(this._start + position);\n  };\n\n  SliceBuffer.prototype.putInt8 = function (position, val) {\n    this._inner.putInt8(this._start + position, val);\n  };\n\n  SliceBuffer.prototype.putFloat64 = function (position, val) {\n    this._inner.putFloat64(this._start + position, val);\n  };\n\n  SliceBuffer.prototype.getInt8 = function (position) {\n    return this._inner.getInt8(this._start + position);\n  };\n\n  SliceBuffer.prototype.getFloat64 = function (position) {\n    return this._inner.getFloat64(this._start + position);\n  };\n\n  return SliceBuffer;\n}(BaseBuffer);","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","BaseBuffer","size","position","length","getUInt8","Error","getInt8","getFloat64","putUInt8","val","putInt8","putFloat64","getInt16","getUInt16","getInt32","getUInt32","getInt64","getSlice","start","SliceBuffer","putInt16","putUInt16","putInt32","putUInt32","putInt64","putBytes","other","i","end","remaining","readUInt8","_updatePos","readInt8","readUInt16","readUInt32","readInt16","readInt32","readInt64","readFloat64","writeUInt8","writeInt8","writeInt16","writeInt32","writeUInt32","writeInt64","writeFloat64","writeBytes","readSlice","hasRemaining","reset","toString","name","toHex","out","hexByte","default","_super","inner","_this","_start","_inner"],"sources":["/Users/zack/src/gene3/node_modules/neo4j-driver-bolt-connection/lib/buf/base-buf.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Common base with default implementation for most buffer methods.\n * Buffers are stateful - they track a current \"position\", this helps greatly\n * when reading and writing from them incrementally. You can also ignore the\n * stateful read/write methods.\n * readXXX and writeXXX-methods move the inner position of the buffer.\n * putXXX and getXXX-methods do not.\n * @access private\n */\nvar BaseBuffer = /** @class */ (function () {\n    /**\n     * Create a instance with the injected size.\n     * @constructor\n     * @param {Integer} size\n     */\n    function BaseBuffer(size) {\n        this.position = 0;\n        this.length = size;\n    }\n    BaseBuffer.prototype.getUInt8 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.getInt8 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.getFloat64 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putUInt8 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putInt8 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putFloat64 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt16 = function (p) {\n        return (this.getInt8(p) << 8) | this.getUInt8(p + 1);\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getUInt16 = function (p) {\n        return (this.getUInt8(p) << 8) | this.getUInt8(p + 1);\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt32 = function (p) {\n        return ((this.getInt8(p) << 24) |\n            (this.getUInt8(p + 1) << 16) |\n            (this.getUInt8(p + 2) << 8) |\n            this.getUInt8(p + 3));\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getUInt32 = function (p) {\n        return ((this.getUInt8(p) << 24) |\n            (this.getUInt8(p + 1) << 16) |\n            (this.getUInt8(p + 2) << 8) |\n            this.getUInt8(p + 3));\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt64 = function (p) {\n        return ((this.getInt8(p) << 56) |\n            (this.getUInt8(p + 1) << 48) |\n            (this.getUInt8(p + 2) << 40) |\n            (this.getUInt8(p + 3) << 32) |\n            (this.getUInt8(p + 4) << 24) |\n            (this.getUInt8(p + 5) << 16) |\n            (this.getUInt8(p + 6) << 8) |\n            this.getUInt8(p + 7));\n    };\n    /**\n     * Get a slice of this buffer. This method does not copy any data,\n     * but simply provides a slice view of this buffer\n     * @param start\n     * @param length\n     */\n    BaseBuffer.prototype.getSlice = function (start, length) {\n        return new SliceBuffer(start, length, this);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt16 = function (p, val) {\n        this.putInt8(p, val >> 8);\n        this.putUInt8(p + 1, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putUInt16 = function (p, val) {\n        this.putUInt8(p, (val >> 8) & 0xff);\n        this.putUInt8(p + 1, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt32 = function (p, val) {\n        this.putInt8(p, val >> 24);\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\n        this.putUInt8(p + 3, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putUInt32 = function (p, val) {\n        this.putUInt8(p, (val >> 24) & 0xff);\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\n        this.putUInt8(p + 3, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt64 = function (p, val) {\n        this.putInt8(p, val >> 48);\n        this.putUInt8(p + 1, (val >> 42) & 0xff);\n        this.putUInt8(p + 2, (val >> 36) & 0xff);\n        this.putUInt8(p + 3, (val >> 30) & 0xff);\n        this.putUInt8(p + 4, (val >> 24) & 0xff);\n        this.putUInt8(p + 5, (val >> 16) & 0xff);\n        this.putUInt8(p + 6, (val >> 8) & 0xff);\n        this.putUInt8(p + 7, val & 0xff);\n    };\n    /**\n     * @param position\n     * @param other\n     */\n    BaseBuffer.prototype.putBytes = function (position, other) {\n        for (var i = 0, end = other.remaining(); i < end; i++) {\n            this.putUInt8(position + i, other.readUInt8());\n        }\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt8 = function () {\n        return this.getUInt8(this._updatePos(1));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt8 = function () {\n        return this.getInt8(this._updatePos(1));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt16 = function () {\n        return this.getUInt16(this._updatePos(2));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt32 = function () {\n        return this.getUInt32(this._updatePos(4));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt16 = function () {\n        return this.getInt16(this._updatePos(2));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt32 = function () {\n        return this.getInt32(this._updatePos(4));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt64 = function () {\n        return this.getInt32(this._updatePos(8));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readFloat64 = function () {\n        return this.getFloat64(this._updatePos(8));\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeUInt8 = function (val) {\n        this.putUInt8(this._updatePos(1), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt8 = function (val) {\n        this.putInt8(this._updatePos(1), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt16 = function (val) {\n        this.putInt16(this._updatePos(2), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt32 = function (val) {\n        this.putInt32(this._updatePos(4), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeUInt32 = function (val) {\n        this.putUInt32(this._updatePos(4), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt64 = function (val) {\n        this.putInt64(this._updatePos(8), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeFloat64 = function (val) {\n        this.putFloat64(this._updatePos(8), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeBytes = function (val) {\n        this.putBytes(this._updatePos(val.remaining()), val);\n    };\n    /**\n     * Get a slice of this buffer. This method does not copy any data,\n     * but simply provides a slice view of this buffer\n     * @param length\n     */\n    BaseBuffer.prototype.readSlice = function (length) {\n        return this.getSlice(this._updatePos(length), length);\n    };\n    BaseBuffer.prototype._updatePos = function (length) {\n        var p = this.position;\n        this.position += length;\n        return p;\n    };\n    /**\n     * Get remaining\n     */\n    BaseBuffer.prototype.remaining = function () {\n        return this.length - this.position;\n    };\n    /**\n     * Has remaining\n     */\n    BaseBuffer.prototype.hasRemaining = function () {\n        return this.remaining() > 0;\n    };\n    /**\n     * Reset position state\n     */\n    BaseBuffer.prototype.reset = function () {\n        this.position = 0;\n    };\n    /**\n     * Get string representation of buffer and it's state.\n     * @return {string} Buffer as a string\n     */\n    BaseBuffer.prototype.toString = function () {\n        return (this.constructor.name +\n            '( position=' +\n            this.position +\n            ' )\\n  ' +\n            this.toHex());\n    };\n    /**\n     * Get string representation of buffer.\n     * @return {string} Buffer as a string\n     */\n    BaseBuffer.prototype.toHex = function () {\n        var out = '';\n        for (var i = 0; i < this.length; i++) {\n            var hexByte = this.getUInt8(i).toString(16);\n            if (hexByte.length === 1) {\n                hexByte = '0' + hexByte;\n            }\n            out += hexByte;\n            if (i !== this.length - 1) {\n                out += ' ';\n            }\n        }\n        return out;\n    };\n    return BaseBuffer;\n}());\nexports.default = BaseBuffer;\n/**\n * Represents a view as slice of another buffer.\n * @access private\n */\nvar SliceBuffer = /** @class */ (function (_super) {\n    __extends(SliceBuffer, _super);\n    function SliceBuffer(start, length, inner) {\n        var _this = _super.call(this, length) || this;\n        _this._start = start;\n        _this._inner = inner;\n        return _this;\n    }\n    SliceBuffer.prototype.putUInt8 = function (position, val) {\n        this._inner.putUInt8(this._start + position, val);\n    };\n    SliceBuffer.prototype.getUInt8 = function (position) {\n        return this._inner.getUInt8(this._start + position);\n    };\n    SliceBuffer.prototype.putInt8 = function (position, val) {\n        this._inner.putInt8(this._start + position, val);\n    };\n    SliceBuffer.prototype.putFloat64 = function (position, val) {\n        this._inner.putFloat64(this._start + position, val);\n    };\n    SliceBuffer.prototype.getInt8 = function (position) {\n        return this._inner.getInt8(this._start + position);\n    };\n    SliceBuffer.prototype.getFloat64 = function (position) {\n        return this._inner.getFloat64(this._start + position);\n    };\n    return SliceBuffer;\n}(BaseBuffer));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}