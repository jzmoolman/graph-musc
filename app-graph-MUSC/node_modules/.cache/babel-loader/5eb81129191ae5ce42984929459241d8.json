{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectivityVerifier = void 0;\n\nvar connection_holder_1 = require(\"./connection-holder\");\n\nvar constants_1 = require(\"./constants\");\n\nvar error_1 = require(\"../error\");\n/**\n * Verifies connectivity using the given connection provider.\n */\n\n\nvar ConnectivityVerifier =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param {ConnectionProvider} connectionProvider the provider to obtain connections from.\n   */\n  function ConnectivityVerifier(connectionProvider) {\n    this._connectionProvider = connectionProvider;\n  }\n  /**\n   * Try to obtain a working connection from the connection provider.\n   * @returns {Promise<object>} promise resolved with server info or rejected with error.\n   */\n\n\n  ConnectivityVerifier.prototype.verify = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.database,\n        database = _c === void 0 ? '' : _c;\n\n    return acquireAndReleaseDummyConnection(this._connectionProvider, database);\n  };\n\n  return ConnectivityVerifier;\n}();\n\nexports.ConnectivityVerifier = ConnectivityVerifier;\n/**\n * @private\n * @param {ConnectionProvider} connectionProvider the provider to obtain connections from.\n * @param {string|undefined} database The database name\n * @return {Promise<object>} promise resolved with server info or rejected with error.\n */\n\nfunction acquireAndReleaseDummyConnection(connectionProvider, database) {\n  var connectionHolder = new connection_holder_1.ConnectionHolder({\n    mode: constants_1.ACCESS_MODE_READ,\n    database: database,\n    connectionProvider: connectionProvider\n  });\n  connectionHolder.initializeConnection();\n  return connectionHolder.getConnection().then(function (connection) {\n    // able to establish a connection\n    if (!connection) {\n      throw (0, error_1.newError)('Unexpected error acquiring transaction');\n    }\n\n    return connectionHolder.close().then(function () {\n      return connection.server;\n    });\n  }).catch(function (error) {\n    // failed to establish a connection\n    return connectionHolder.close().catch(function (ignoredError) {// ignore connection release error\n    }).then(function () {\n      return Promise.reject(error);\n    });\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","ConnectivityVerifier","connection_holder_1","require","constants_1","error_1","connectionProvider","_connectionProvider","prototype","verify","_a","_b","_c","database","acquireAndReleaseDummyConnection","connectionHolder","ConnectionHolder","mode","ACCESS_MODE_READ","initializeConnection","getConnection","then","connection","newError","close","server","catch","error","ignoredError","Promise","reject"],"sources":["/Users/zack/src/gene-graph-MUSC/node_modules/neo4j-driver-core/lib/internal/connectivity-verifier.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectivityVerifier = void 0;\nvar connection_holder_1 = require(\"./connection-holder\");\nvar constants_1 = require(\"./constants\");\nvar error_1 = require(\"../error\");\n/**\n * Verifies connectivity using the given connection provider.\n */\nvar ConnectivityVerifier = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {ConnectionProvider} connectionProvider the provider to obtain connections from.\n     */\n    function ConnectivityVerifier(connectionProvider) {\n        this._connectionProvider = connectionProvider;\n    }\n    /**\n     * Try to obtain a working connection from the connection provider.\n     * @returns {Promise<object>} promise resolved with server info or rejected with error.\n     */\n    ConnectivityVerifier.prototype.verify = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.database, database = _c === void 0 ? '' : _c;\n        return acquireAndReleaseDummyConnection(this._connectionProvider, database);\n    };\n    return ConnectivityVerifier;\n}());\nexports.ConnectivityVerifier = ConnectivityVerifier;\n/**\n * @private\n * @param {ConnectionProvider} connectionProvider the provider to obtain connections from.\n * @param {string|undefined} database The database name\n * @return {Promise<object>} promise resolved with server info or rejected with error.\n */\nfunction acquireAndReleaseDummyConnection(connectionProvider, database) {\n    var connectionHolder = new connection_holder_1.ConnectionHolder({\n        mode: constants_1.ACCESS_MODE_READ,\n        database: database,\n        connectionProvider: connectionProvider\n    });\n    connectionHolder.initializeConnection();\n    return connectionHolder\n        .getConnection()\n        .then(function (connection) {\n        // able to establish a connection\n        if (!connection) {\n            throw (0, error_1.newError)('Unexpected error acquiring transaction');\n        }\n        return connectionHolder.close().then(function () { return connection.server; });\n    })\n        .catch(function (error) {\n        // failed to establish a connection\n        return connectionHolder\n            .close()\n            .catch(function (ignoredError) {\n            // ignore connection release error\n        })\n            .then(function () {\n            return Promise.reject(error);\n        });\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,IAAIC,mBAAmB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,UAAD,CAArB;AACA;AACA;AACA;;;AACA,IAAIF,oBAAoB;AAAG;AAAe,YAAY;EAClD;AACJ;AACA;AACA;EACI,SAASA,oBAAT,CAA8BK,kBAA9B,EAAkD;IAC9C,KAAKC,mBAAL,GAA2BD,kBAA3B;EACH;EACD;AACJ;AACA;AACA;;;EACIL,oBAAoB,CAACO,SAArB,CAA+BC,MAA/B,GAAwC,UAAUC,EAAV,EAAc;IAClD,IAAIC,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9B;IAAA,IAAkCE,EAAE,GAAGD,EAAE,CAACE,QAA1C;IAAA,IAAoDA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAApF;;IACA,OAAOE,gCAAgC,CAAC,KAAKP,mBAAN,EAA2BM,QAA3B,CAAvC;EACH,CAHD;;EAIA,OAAOZ,oBAAP;AACH,CAjByC,EAA1C;;AAkBAF,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASa,gCAAT,CAA0CR,kBAA1C,EAA8DO,QAA9D,EAAwE;EACpE,IAAIE,gBAAgB,GAAG,IAAIb,mBAAmB,CAACc,gBAAxB,CAAyC;IAC5DC,IAAI,EAAEb,WAAW,CAACc,gBAD0C;IAE5DL,QAAQ,EAAEA,QAFkD;IAG5DP,kBAAkB,EAAEA;EAHwC,CAAzC,CAAvB;EAKAS,gBAAgB,CAACI,oBAAjB;EACA,OAAOJ,gBAAgB,CAClBK,aADE,GAEFC,IAFE,CAEG,UAAUC,UAAV,EAAsB;IAC5B;IACA,IAAI,CAACA,UAAL,EAAiB;MACb,MAAM,CAAC,GAAGjB,OAAO,CAACkB,QAAZ,EAAsB,wCAAtB,CAAN;IACH;;IACD,OAAOR,gBAAgB,CAACS,KAAjB,GAAyBH,IAAzB,CAA8B,YAAY;MAAE,OAAOC,UAAU,CAACG,MAAlB;IAA2B,CAAvE,CAAP;EACH,CARM,EASFC,KATE,CASI,UAAUC,KAAV,EAAiB;IACxB;IACA,OAAOZ,gBAAgB,CAClBS,KADE,GAEFE,KAFE,CAEI,UAAUE,YAAV,EAAwB,CAC/B;IACH,CAJM,EAKFP,IALE,CAKG,YAAY;MAClB,OAAOQ,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;IACH,CAPM,CAAP;EAQH,CAnBM,CAAP;AAoBH"},"metadata":{},"sourceType":"script"}