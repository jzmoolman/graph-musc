{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/HomeGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomeGraph = () => {\n  _s();\n\n  console.log('enter - HomeGraph');\n  const [dim, setDim] = useState({\n    width: 200,\n    height: 200\n  });\n  const box1Ref = useRef(null);\n  useEffect(() => {\n    console.log('HomeGraph mounted');\n    window.addEventListener(\"resize\", handleResize);\n    setDim({\n      width: getWidth(),\n      height: 200\n    });\n  }, []);\n\n  const handleResize = () => {\n    console.log('onResize');\n    setDim(() => ({\n      width: getWidth(),\n      height: 200\n    }));\n  };\n\n  const getWidth = () => {\n    var _document$getElementB;\n\n    return 200;\n    let number = Number((_document$getElementB = document.getElementById('graph-box1')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.offsetWidth);\n\n    if (typeof number === 'number' && number === number) {\n      console.log('getWidth is a number', number);\n      return number - 10;\n    } else {\n      console.log('getWidth NaN', number);\n      return 50;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      id: \"heading\",\n      display: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        sx: {\n          size: 'large'\n        },\n        color: \"primary.main\",\n        children: \"Cancer susceptibility gene visualizations using a Graph Database approach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      flexGrow: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        id: \"graphbox1\",\n        display: \"flex\",\n        flexGrow: \"1\",\n        sx: {\n          minWidth: '200px',\n          backgroundColor: 'primary.main',\n          color: 'white',\n          paddig: '16px',\n          '&:hover': {\n            backgroundColor: 'primary.light'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 4,\n          sx: {\n            color: 'white',\n            width: '100%',\n            backgroundColor: 'white',\n            margin: '2px',\n            padding: '2px'\n          },\n          children: \"aaaa asssss afsdfadsfas asdfas asfadsfas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        id: \"graphbox2\",\n        display: \"flex\",\n        flexGrow: \"1\",\n        sx: {\n          minWidth: '200px',\n          backgroundColor: 'primary.main',\n          color: 'white',\n          paddig: '16px',\n          '&:hover': {\n            backgroundColor: 'primary.light'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 4,\n          sx: {\n            color: 'white',\n            width: '100%',\n            backgroundColor: 'white',\n            margin: '2px',\n            padding: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        id: \"graphbox3\",\n        display: \"flex\",\n        flexGrow: \"1\",\n        sx: {\n          minWidth: '200px',\n          backgroundColor: 'primary.main',\n          color: 'white',\n          paddig: '16px',\n          '&:hover': {\n            backgroundColor: 'primary.light'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 4,\n          sx: {\n            color: 'white',\n            width: '100%',\n            backgroundColor: 'white',\n            margin: '2px',\n            padding: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomeGraph, \"LSEY06enSh/rh8ZRj+d3XXE86+o=\");\n\n_c = HomeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGraph\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Paper","Typography","HomeGraph","console","log","dim","setDim","width","height","box1Ref","window","addEventListener","handleResize","getWidth","number","Number","document","getElementById","offsetWidth","size","minWidth","backgroundColor","color","paddig","margin","padding"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/HomeGraph.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport  { Box, Grid, Paper, Typography } from '@mui/material'\nimport { BaseGraph } from './BaseGraph';\nimport { defaultGraphScheme } from '../tools/graphtools';\n\n\ntype Dimension = {\n    width: number\n    height: number\n}\n\nexport const HomeGraph = () => {\n    console.log('enter - HomeGraph')\n    const [dim, setDim] = useState<Dimension>({width:200, height:200})\n    const box1Ref = useRef<HTMLDivElement>(null)\n    \n    useEffect(()=>{\n        console.log('HomeGraph mounted')\n        window.addEventListener(\"resize\", handleResize )\n        setDim( {width: getWidth(), height: 200})\n    },[])\n\n    const handleResize = () => {\n        console.log('onResize')\n        setDim( ()=> ( \n            {width: getWidth(), height: 200}))\n    }\n\n    const getWidth = () => {\n        return 200\n        let number =  Number(document.getElementById('graph-box1')?.offsetWidth )\n        if ( typeof number === 'number' && number === number) {\n            console.log('getWidth is a number', number)\n            return number -10\n        } else {\n            console.log('getWidth NaN', number)\n            return 50\n        }\n    }\n\n\n    return (<>\n        <Box id='heading' display='flex'>\n            <Typography align='center' variant='h6' sx={{size:'large'}} color='primary.main'\n            >\n                Cancer susceptibility gene visualizations using a Graph Database approach\n            </Typography>\n        </Box>\n        <Box display='flex' \n             flexWrap='wrap'\n             flexGrow='0'\n        >\n            <Box id='graphbox1' display='flex' flexGrow='1'\n                sx={{\n                    minWidth: '200px',\n                    backgroundColor: 'primary.main',\n                    color: 'white',\n                    paddig: '16px',\n                    '&:hover': {\n                        backgroundColor: 'primary.light'\n                    }\n                }}\n                >\n\n                <Paper \n                    elevation={4}         \n                    sx={{ \n                            color: 'white',\n                            width: '100%',\n                            backgroundColor: 'white',\n                            margin: '2px',\n                            padding:'2px'}}>\n                    {/* <BaseGraph\n                        drawerOpen={false}\n                        width={getWidth()}\n                        height={200}\n                        name={'gene'}\n                        genes={['BRCA1','BRCA2']}\n                        organs={[]}\n                        syndromes={[]}\n                        diseases={[]}\n                        finalVerdict='Confimred'\n                        graphScheme={defaultGraphScheme}\n                    /> */}\n                    aaaa asssss afsdfadsfas asdfas asfadsfas\n                </Paper>\n            </Box>\n            <Box id='graphbox2' display='flex' flexGrow='1'\n                sx={{\n                    minWidth: '200px',\n                    backgroundColor: 'primary.main',\n                    color: 'white',\n                    paddig: '16px',\n                    '&:hover': {\n                        backgroundColor: 'primary.light'\n                    }\n                }}\n                >\n\n                <Paper \n                    elevation={4}         \n                    sx={{   color: 'white',\n                            width: '100%',\n                            backgroundColor: 'white',\n                            margin: '2px',\n                            padding:'5px'}}>\n                    {/* <BaseGraph \n                        drawerOpen={false}\n                        width={200}\n                        height={200}\n                        name={'organ'}\n                        genes={['BRCA1','BRCA2']}\n                        organs={[]}\n                        syndromes={[]}\n                        diseases={[]}\n                        finalVerdict='Confimred'\n                        graphScheme={defaultGraphScheme}\n                    /> */}\n                </Paper>\n            </Box>\n            <Box id='graphbox3' display='flex' flexGrow='1'\n                sx={{\n                    minWidth: '200px',\n                    backgroundColor: 'primary.main',\n                    color: 'white',\n                    paddig: '16px',\n                    '&:hover': {\n                        backgroundColor: 'primary.light'\n                    }\n                }}\n                >\n\n                <Paper \n                    elevation={4}         \n                    sx={{ \n                            color: 'white',\n                            width: '100%',\n                            backgroundColor: 'white',\n                            margin: '2px',\n                            padding:'5px'}}>\n                    {/* <BaseGraph \n                        drawerOpen={false}\n                        width={200}\n                        height={200}\n                        name={'syndrome-organ'}\n                        genes={['BRCA1','BRCA2']}\n                        organs={[]}\n                        syndromes={[]}\n                        diseases={[]}\n                        finalVerdict='Confimred'\n                        graphScheme={defaultGraphScheme}\n                    /> */}\n                </Paper>\n            </Box>\n        </Box>\n    </>)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}