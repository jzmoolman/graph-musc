{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/Filters.tsx\";\nimport React from 'react';\nimport { Box } from '@mui/material';\nimport { CustomSelect } from './CustomSelect';\nimport { CustomDropdown } from './CustomDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Filters = _ref => {\n  let {\n    name,\n    genes,\n    organs,\n    diseases,\n    syndromes,\n    finalVerdict,\n    onGeneChange,\n    onOrganChange,\n    onDiseaseChange,\n    onSyndromeChange,\n    onFinalVerdictChange\n  } = _ref;\n\n  const handleGeneChange = selected => {\n    if (onGeneChange) onGeneChange(selected);\n  };\n\n  const handleOrganChange = selected => {\n    if (onOrganChange) onOrganChange(selected);\n  };\n\n  const handleDiseaseChange = selected => {\n    if (onDiseaseChange) onDiseaseChange(selected);\n  };\n\n  const handleSyndromeChange = selected => {\n    if (onSyndromeChange) onSyndromeChange(selected);\n  };\n\n  const handleFinalVerdictChange = verdict => {\n    if (onFinalVerdictChange) onFinalVerdictChange(verdict);\n  };\n\n  const DisplayPanel = () => {\n    let __handleChange;\n\n    let __selected;\n\n    if (name === 'gene') {\n      __handleChange = handleGeneChange;\n      __selected = genes;\n    } else if (name == 'organ') {\n      __handleChange = handleOrganChange;\n      __selected = organs;\n    } else if (name == 'disease') {\n      __handleChange = handleDiseaseChange;\n      __selected = organs;\n    } else if (name == 'syndrome') {\n      __handleChange = handleDiseaseChange;\n      __selected = organs;\n    } else {\n      __handleChange = handleGeneChange;\n      __selected = genes;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CustomDropdown, {\n        name: name,\n        selected: genes,\n        onChange: __handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n        options: [//Do not know how to get the key value yet\n        {\n          key: '1',\n          value: 'Confirmed'\n        }, {\n          key: '9',\n          value: 'Maybe'\n        }] // {key:'0', value:  'Unknown'}]\n        ,\n        label: \"Final verdict\",\n        defaultSelected: finalVerdict,\n        onChange: handleFinalVerdictChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"filter-box\",\n    display: \"flex\",\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row-reverse\",\n    children: /*#__PURE__*/_jsxDEV(DisplayPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_c = Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","Box","CustomSelect","CustomDropdown","Filters","name","genes","organs","diseases","syndromes","finalVerdict","onGeneChange","onOrganChange","onDiseaseChange","onSyndromeChange","onFinalVerdictChange","handleGeneChange","selected","handleOrganChange","handleDiseaseChange","handleSyndromeChange","handleFinalVerdictChange","verdict","DisplayPanel","__handleChange","__selected","key","value"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/Filters.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport  { Box } from '@mui/material'\nimport { CustomSelect } from './CustomSelect'\nimport { CustomDropdown } from './CustomDropdown'\nimport { GraphName } from '../tools/graphtools'\n\ntype FiltersProps = {\n\n    name: GraphName\n    genes: string[]\n    organs: string[]\n    diseases: string[]\n    syndromes: string[]\n    finalVerdict: string\n    onGeneChange?: (selcetd: string[]) => void\n    onOrganChange?: (selcetd: string[]) => void\n    onDiseaseChange?: (selected: string[]) => void\n    onSyndromeChange?: (selected: string[]) => void\n    onFinalVerdictChange?: (verdicts: string) => void\n}\n\nexport const Filters = ({\n        name, \n        genes,\n        organs,\n        diseases, \n        syndromes, \n        finalVerdict,\n        onGeneChange,\n        onOrganChange,\n        onDiseaseChange,\n        onSyndromeChange,\n        onFinalVerdictChange\n} : FiltersProps ) => {\n\n    const handleGeneChange = (selected: string[]) => {\n        if ( onGeneChange)\n            onGeneChange(selected)\n    }\n\n    const handleOrganChange = (selected: string[]) => {\n        if (onOrganChange)\n            onOrganChange(selected)\n    }\n\n    const handleDiseaseChange = (selected: string[]) => {\n        if (onDiseaseChange)\n          onDiseaseChange(selected)\n    }\n   \n    const handleSyndromeChange = (selected: string[]) => {\n        if (onSyndromeChange)\n          onSyndromeChange(selected)\n    }\n\n    const handleFinalVerdictChange = (verdict: string) => {\n        if (onFinalVerdictChange)\n            onFinalVerdictChange(verdict)\n    }\n\n    const DisplayPanel = () => {\n        let __handleChange:  (data: string[])=>void\n        let __selected: string[]\n        if (name === 'gene' )  {\n            __handleChange = handleGeneChange\n            __selected = genes\n        } else if (name == 'organ') {\n            __handleChange = handleOrganChange\n            __selected = organs\n        } else if (name == 'disease') {\n            __handleChange =  handleDiseaseChange\n            __selected = organs\n        } else if ( name == 'syndrome') {\n            __handleChange =  handleDiseaseChange\n            __selected = organs\n        } else {\n\n            __handleChange = handleGeneChange\n            __selected = genes\n        }\n\n        return (\n            <>\n                <CustomDropdown \n                    name={name} \n                    selected={genes}\n                    onChange={__handleChange} />\n                <CustomSelect \n                        options={\n                            [\n                                //Do not know how to get the key value yet\n                                {key:'1', value: 'Confirmed'},\n                                {key:'9', value: 'Maybe'}]\n                                // {key:'0', value:  'Unknown'}]\n                        }\n                        label='Final verdict' \n                        defaultSelected={finalVerdict}\n                        onChange={handleFinalVerdictChange}\n                />\n\n            </>\n        )     \n    }\n\n\n    return (\n        <Box \n            id='filter-box'\n            display='flex'\n            flex={1}\n            flexWrap='wrap'\n            flexDirection='row-reverse'\n        >\n            <DisplayPanel />\n        </Box>\n    )\n\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAAUC,GAAV,QAAqB,eAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAkBA,OAAO,MAAMC,OAAO,GAAG,QAYD;EAAA,IAZE;IAChBC,IADgB;IAEhBC,KAFgB;IAGhBC,MAHgB;IAIhBC,QAJgB;IAKhBC,SALgB;IAMhBC,YANgB;IAOhBC,YAPgB;IAQhBC,aARgB;IAShBC,eATgB;IAUhBC,gBAVgB;IAWhBC;EAXgB,CAYF;;EAElB,MAAMC,gBAAgB,GAAIC,QAAD,IAAwB;IAC7C,IAAKN,YAAL,EACIA,YAAY,CAACM,QAAD,CAAZ;EACP,CAHD;;EAKA,MAAMC,iBAAiB,GAAID,QAAD,IAAwB;IAC9C,IAAIL,aAAJ,EACIA,aAAa,CAACK,QAAD,CAAb;EACP,CAHD;;EAKA,MAAME,mBAAmB,GAAIF,QAAD,IAAwB;IAChD,IAAIJ,eAAJ,EACEA,eAAe,CAACI,QAAD,CAAf;EACL,CAHD;;EAKA,MAAMG,oBAAoB,GAAIH,QAAD,IAAwB;IACjD,IAAIH,gBAAJ,EACEA,gBAAgB,CAACG,QAAD,CAAhB;EACL,CAHD;;EAKA,MAAMI,wBAAwB,GAAIC,OAAD,IAAqB;IAClD,IAAIP,oBAAJ,EACIA,oBAAoB,CAACO,OAAD,CAApB;EACP,CAHD;;EAKA,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAIC,cAAJ;;IACA,IAAIC,UAAJ;;IACA,IAAIpB,IAAI,KAAK,MAAb,EAAuB;MACnBmB,cAAc,GAAGR,gBAAjB;MACAS,UAAU,GAAGnB,KAAb;IACH,CAHD,MAGO,IAAID,IAAI,IAAI,OAAZ,EAAqB;MACxBmB,cAAc,GAAGN,iBAAjB;MACAO,UAAU,GAAGlB,MAAb;IACH,CAHM,MAGA,IAAIF,IAAI,IAAI,SAAZ,EAAuB;MAC1BmB,cAAc,GAAIL,mBAAlB;MACAM,UAAU,GAAGlB,MAAb;IACH,CAHM,MAGA,IAAKF,IAAI,IAAI,UAAb,EAAyB;MAC5BmB,cAAc,GAAIL,mBAAlB;MACAM,UAAU,GAAGlB,MAAb;IACH,CAHM,MAGA;MAEHiB,cAAc,GAAGR,gBAAjB;MACAS,UAAU,GAAGnB,KAAb;IACH;;IAED,oBACI;MAAA,wBACI,QAAC,cAAD;QACI,IAAI,EAAED,IADV;QAEI,QAAQ,EAAEC,KAFd;QAGI,QAAQ,EAAEkB;MAHd;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI,QAAC,YAAD;QACQ,OAAO,EACH,CACI;QACA;UAACE,GAAG,EAAC,GAAL;UAAUC,KAAK,EAAE;QAAjB,CAFJ,EAGI;UAACD,GAAG,EAAC,GAAL;UAAUC,KAAK,EAAE;QAAjB,CAHJ,CADG,CAKC;QANhB;QAQQ,KAAK,EAAC,eARd;QASQ,eAAe,EAAEjB,YATzB;QAUQ,QAAQ,EAAEW;MAVlB;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA,gBADJ;EAqBH,CA1CD;;EA6CA,oBACI,QAAC,GAAD;IACI,EAAE,EAAC,YADP;IAEI,OAAO,EAAC,MAFZ;IAGI,IAAI,EAAE,CAHV;IAII,QAAQ,EAAC,MAJb;IAKI,aAAa,EAAC,aALlB;IAAA,uBAOI,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA;EAPJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAhGM;KAAMjB,O"},"metadata":{},"sourceType":"module"}