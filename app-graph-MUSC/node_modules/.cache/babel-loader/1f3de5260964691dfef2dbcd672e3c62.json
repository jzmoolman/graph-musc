{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringify = void 0;\n/**\n * Custom version on JSON.stringify that can handle values that normally don't support serialization, such as BigInt.\n * @private\n * @param val A JavaScript value, usually an object or array, to be converted.\n * @returns A JSON string representing the given value.\n */\n\nfunction stringify(val) {\n  return JSON.stringify(val, function (_, value) {\n    return typeof value === 'bigint' ? value + \"n\" : value;\n  });\n}\n\nexports.stringify = stringify;","map":{"version":3,"names":["Object","defineProperty","exports","value","stringify","val","JSON","_"],"sources":["/Users/zack/src/gene3/node_modules/neo4j-driver-core/lib/json.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringify = void 0;\n/**\n * Custom version on JSON.stringify that can handle values that normally don't support serialization, such as BigInt.\n * @private\n * @param val A JavaScript value, usually an object or array, to be converted.\n * @returns A JSON string representing the given value.\n */\nfunction stringify(val) {\n    return JSON.stringify(val, function (_, value) {\n        return typeof value === 'bigint' ? value + \"n\" : value;\n    });\n}\nexports.stringify = stringify;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;EACpB,OAAOC,IAAI,CAACF,SAAL,CAAeC,GAAf,EAAoB,UAAUE,CAAV,EAAaJ,KAAb,EAAoB;IAC3C,OAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,GAAG,GAApC,GAA0CA,KAAjD;EACH,CAFM,CAAP;AAGH;;AACDD,OAAO,CAACE,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}