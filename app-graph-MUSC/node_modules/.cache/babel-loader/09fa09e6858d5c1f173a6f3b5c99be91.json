{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/GeneDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Neo4jContext } from 'use-neo4j';\nimport { loadGene } from '../tools/graphdata';\nimport { Dropdown } from './Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GeneDropdown = _ref => {\n  _s();\n\n  let {\n    selected,\n    onChange\n  } = _ref;\n  // console.log('enter = GeneDropdown')\n  // console.log('selected', selected)\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [genes, setGenes] = useState([]);\n\n  const handleData = data => {\n    setGenes(data);\n  };\n\n  useEffect(() => {\n    loadGene(driver, handleData);\n    console.log('loading genes - the new way');\n  }, []);\n\n  const handleChange = selection => {\n    if (onChange) {\n      onChange(selection);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    label: \"Genes\",\n    options: genes,\n    onChange: handleChange,\n    selected: selected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GeneDropdown, \"2y1R3hWRMnEwHtH0cgkKn+3q/Jk=\");\n\n_c = GeneDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneDropdown\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Neo4jContext","loadGene","Dropdown","GeneDropdown","selected","onChange","context","driver","genes","setGenes","handleData","data","console","log","handleChange","selection"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/GeneDropdown.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { Neo4jContext } from 'use-neo4j'\nimport { loadGene } from '../tools/graphdata'\nimport { Dropdown } from './Dropdown'\n\ntype GeneDropdownProps = {\n    selected: string[]\n    onChange?: (selection: string[]) => void \n}\n\nexport const GeneDropdown = ( {selected, onChange }: GeneDropdownProps) => {\n    // console.log('enter = GeneDropdown')\n    // console.log('selected', selected)\n    const context = useContext(Neo4jContext), driver = context.driver\n    const [genes, setGenes] = useState<string[]>([])\n\n    const handleData = (data: string[]) => {\n        setGenes(data)\n    }\n\n    useEffect(()=> {\n        loadGene(driver, handleData)\n        console.log('loading genes - the new way')\n    },[])\n\n    const handleChange = (selection: string[] ) =>  {\n        if (onChange) {\n           onChange(selection)\n        }\n    }\n\n    return (\n        <Dropdown label='Genes' options={genes} onChange={handleChange} selected={selected}/>\n    )\n}\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAOA,OAAO,MAAMC,YAAY,GAAG,QAA+C;EAAA;;EAAA,IAA7C;IAACC,QAAD;IAAWC;EAAX,CAA6C;EACvE;EACA;EACA,MAAMC,OAAO,GAAGT,UAAU,CAACG,YAAD,CAA1B;EAAA,MAA0CO,MAAM,GAAGD,OAAO,CAACC,MAA3D;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAW,EAAX,CAAlC;;EAEA,MAAMW,UAAU,GAAIC,IAAD,IAAoB;IACnCF,QAAQ,CAACE,IAAD,CAAR;EACH,CAFD;;EAIAb,SAAS,CAAC,MAAK;IACXG,QAAQ,CAACM,MAAD,EAASG,UAAT,CAAR;IACAE,OAAO,CAACC,GAAR,CAAY,6BAAZ;EACH,CAHQ,EAGP,EAHO,CAAT;;EAKA,MAAMC,YAAY,GAAIC,SAAD,IAA2B;IAC5C,IAAIV,QAAJ,EAAc;MACXA,QAAQ,CAACU,SAAD,CAAR;IACF;EACJ,CAJD;;EAMA,oBACI,QAAC,QAAD;IAAU,KAAK,EAAC,OAAhB;IAAwB,OAAO,EAAEP,KAAjC;IAAwC,QAAQ,EAAEM,YAAlD;IAAgE,QAAQ,EAAEV;EAA1E;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAxBM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}