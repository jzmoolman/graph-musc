{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene-graph-MUSC/src/components/BaseGrpah.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { Neo4jContext } from 'use-neo4j';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { paintNode } from '../tools/graphtools';\nimport { loadGeneData, loadOrganData, loadSyndromeGeneData, loadSyndromeOrganData } from '../tools/grapgdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 350;\nexport const BaseGraph = _ref => {\n  _s();\n\n  let {\n    drawerOpen,\n    name,\n    verified,\n    genes,\n    organs,\n    syndromes,\n    graphScheme\n  } = _ref;\n  console.log(`enter - ${name}Graph`);\n  const isMounted = useRef(false);\n  const [renderTick, setRenderTick] = useState(0);\n\n  const onResize = () => {\n    console.log('onResize');\n    console.log('renderTick', renderTick);\n    setRenderTick(renderTick => renderTick + 1);\n  };\n\n  useEffect(() => {\n    console.log('Graph mounted');\n    isMounted.current = true;\n    window.addEventListener(\"resize\", onResize);\n  }, []);\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  useEffect(() => {\n    console.log('Reload data');\n\n    const onData = data => {\n      console.log(data);\n      setData(data);\n    };\n\n    if (name === 'gene') {\n      loadGeneData(driver, verified, genes, organs, graphScheme, onData);\n    } else if (name === 'organ') loadOrganData(driver, verified, genes, organs, graphScheme, onData);else if (name === 'syndrome-gene') {\n      loadSyndromeGeneData(driver, verified, syndromes, genes, graphScheme, onData);\n    } else if (name === 'syndrome-organ') {\n      loadSyndromeOrganData(driver, verified, syndromes, organs, graphScheme, onData);\n    }\n  }, [name, verified, genes, organs, syndromes, graphScheme]);\n  const forceRef = useRef();\n  let Width = window.innerWidth - 18;\n\n  if (drawerOpen) {\n    Width = window.innerWidth - 18 - drawerWidth;\n  }\n\n  const Height = window.innerHeight - 85;\n\n  let handleEngineStop = () => {\n    if (forceRef.current) forceRef.current.zoomToFit(400);\n  };\n\n  if (!graphScheme.fitViewPort) {\n    if (forceRef.current) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n    ref: forceRef,\n    width: Width,\n    height: Height,\n    graphData: data,\n    backgroundColor: \"white\",\n    nodeId: \"name\",\n    nodeColor: \"nodeColor\",\n    nodeLabel: \"name\",\n    linkDirectionalArrowRelPos: 1,\n    linkDirectionalArrowLength: 2,\n    cooldownTicks: 100 // onEngineStop={ () => forceRef.current?.zoomToFit(100)} \n    ,\n    onEngineStop: handleEngineStop,\n    nodeVal: graphScheme.nodeVal,\n    nodeRelSize: graphScheme.nodeRelSize,\n    nodeCanvasObjectMode: () => 'after',\n    nodeCanvasObject: paintNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BaseGraph, \"2KpojkYrUCJbPv6ATGVhgxv/E7w=\");\n\n_c = BaseGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseGraph\");","map":{"version":3,"names":["useState","useContext","useEffect","useRef","Neo4jContext","ForceGraph2D","paintNode","loadGeneData","loadOrganData","loadSyndromeGeneData","loadSyndromeOrganData","drawerWidth","BaseGraph","drawerOpen","name","verified","genes","organs","syndromes","graphScheme","console","log","isMounted","renderTick","setRenderTick","onResize","current","window","addEventListener","context","driver","data","setData","nodes","links","onData","forceRef","Width","innerWidth","Height","innerHeight","handleEngineStop","zoomToFit","fitViewPort","nodeVal","nodeRelSize"],"sources":["/Users/zack/src/gene-graph-MUSC/src/components/BaseGrpah.tsx"],"sourcesContent":["\nimport { useState, useContext, useEffect, useRef, MutableRefObject } from 'react'\nimport { Driver }  from  'neo4j-driver'\nimport { Neo4jContext } from 'use-neo4j'\nimport ForceGraph2D, { ForceGraphMethods }  from 'react-force-graph-2d'\nimport { Force2DData, GraphScheme, paintNode } from '../tools/graphtools'\nimport { loadGeneData, loadOrganData, loadSyndromeGeneData,loadSyndromeOrganData } from '../tools/grapgdata'\n\nconst drawerWidth = 350;\n\ntype BaseGraphProps = {\n    drawerOpen: boolean\n    name: string\n    verified: boolean\n    genes: string[]\n    organs: string[]\n    syndromes: string[]\n    graphScheme: GraphScheme\n}\nexport const BaseGraph = ( {drawerOpen, name, verified, genes, organs,syndromes, graphScheme} : BaseGraphProps ) => {\n\n    console.log(`enter - ${name}Graph`)\n    \n    const isMounted = useRef(false)\n    const [renderTick, setRenderTick] = useState(0);\n\n    const onResize = () => {\n        console.log('onResize')\n        console.log('renderTick', renderTick )\n        setRenderTick(renderTick => renderTick + 1 )\n    }\n\n    useEffect(()=>{\n        console.log('Graph mounted')\n        isMounted.current = true\n        window.addEventListener(\"resize\", onResize )\n    },[])\n\n    const context = useContext(Neo4jContext), driver = context.driver\n    const [data, setData] =  useState<Force2DData>( {nodes: [], links: []} )\n\n    useEffect( () => {\n        console.log('Reload data')\n        const onData = (data: Force2DData) =>{\n            console.log(data)\n            setData(data)\n        }\n\n        if (name === 'gene') {\n          loadGeneData(driver, verified, genes, organs, graphScheme, onData)\n        } else if (name === 'organ')\n          loadOrganData(driver, verified, genes, organs, graphScheme, onData)\n        else if ( name === 'syndrome-gene') {\n          loadSyndromeGeneData(driver, verified,  syndromes, genes, graphScheme, onData)\n\n        } else if ( name === 'syndrome-organ') {\n          loadSyndromeOrganData(driver, verified,  syndromes, organs, graphScheme, onData)\n        }\n\n    },[ name, verified, genes, organs,syndromes, graphScheme] )\n    \n\n\n    const forceRef : MutableRefObject<ForceGraphMethods | undefined> = useRef()      \n\n    let Width = window.innerWidth -18\n    if (drawerOpen) {\n        Width = window.innerWidth -18 - drawerWidth\n    }\n    const Height = window.innerHeight -85\n    let handleEngineStop: ()=>void | undefined = () => {\n        if (forceRef.current)\n            (forceRef.current as ForceGraphMethods).zoomToFit(400) \n    }\n    \n    if (!graphScheme.fitViewPort) {\n        if (forceRef.current) {}\n    }\n\n    return ( \n        <ForceGraph2D \n            ref={forceRef}\n            width={Width}\n            height={Height}\n            graphData={data}\n            backgroundColor='white'\n            nodeId='name'  \n            nodeColor='nodeColor' \n            nodeLabel='name' \n            linkDirectionalArrowRelPos={1} \n            linkDirectionalArrowLength={2} \n            cooldownTicks={100}\n            // onEngineStop={ () => forceRef.current?.zoomToFit(100)} \n            onEngineStop={handleEngineStop} \n            nodeVal={graphScheme.nodeVal}\n            nodeRelSize={graphScheme.nodeRelSize}\n            nodeCanvasObjectMode={() => 'after'} \n            nodeCanvasObject={paintNode}\n            />\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}