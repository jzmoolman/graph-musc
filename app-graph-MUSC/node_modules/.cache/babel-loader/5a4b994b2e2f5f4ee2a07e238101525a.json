{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene3/src/views/GeneGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useRef } from 'react';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { Checkbox, Dropdown } from 'semantic-ui-react';\nimport { Neo4jContext } from 'use-neo4j';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GeneGraph = () => {\n  _s();\n\n  console.log('Enter - GeneGraph');\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [finalVerdict, setFinalVerdict] = useState(true);\n  const [filter, setFilter] = useState('');\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n\n  async function finalVerdictHandler(data) {\n    console.log('Enter - finalVerdictHandelder');\n    console.log(data.value);\n\n    if (!data) {\n      console.log('Data not correct type');\n      return;\n    }\n\n    const localFinalVerdict = data.checked ? data.checked : false;\n    console.log('data', data, localFinalVerdict);\n    loadGraph(filter, localFinalVerdict);\n    setFinalVerdict(localFinalVerdict);\n    console.log('Exit - finalVerdictHandelder');\n  }\n\n  async function dropdownHandler(data) {\n    console.log('Enter - dropDownHandler');\n    console.log(data.value);\n\n    if (!data) {\n      console.log('Data not correct type');\n      return;\n    }\n\n    let localFilter = '';\n    data.value.forEach(value => {\n      if (localFilter == '') localFilter = '[';\n      localFilter = localFilter + '\\'' + value + '\\',';\n    });\n\n    if (localFilter != '') {\n      localFilter = localFilter.slice(0, localFilter.length - 1);\n      localFilter = localFilter + ']';\n    }\n\n    console.log('localFilter =', localFilter, 'filter = ', filter);\n    loadGraph(localFilter, finalVerdict);\n    setFilter(localFilter);\n    console.log('Exit - dropDownHandler');\n  }\n\n  async function loadGraph(filter) {\n    let finalVerdict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    console.log('Enter - loadData');\n\n    if (driver == null) {\n      console.log('Driver not loaded');\n      return;\n    }\n\n    let queryG = 'MATCH (g:MGene) RETURN DISTINCT g.name as name';\n    let queryO = `MATCH (g:MGene)--(o:Organ) RETURN DISTINCT o.name as name`;\n    let queryR = 'MATCH (g:MGene)-[r]->(o:Organ) RETURN ID(g) as sid,ID(o) as tid, g.name as sname, o.name as tname';\n\n    if (finalVerdict) {\n      queryG = 'MATCH (g:MGene) WHERE g.FinalVerdict = 1 RETURN DISTINCT g.name as name';\n      queryO = `MATCH (g:MGene)--(o:Organ) WHERE g.FinalVerdict = 1 RETURN DISTINCT o.name as name`;\n      queryR = 'MATCH (g:MGene)-[r]->(o:Organ) WHERE g.FinalVerdict = 1 RETURN ID(g) as sid, ID(o) as tid, g.name as sname, o.name as tname';\n    }\n\n    if (filter !== '') {\n      queryG = `MATCH (g:MGene) WHERE g.name IN ${filter} RETURN DISTINCT g.name as name`;\n      queryO = `MATCH (g:MGene)--(o:Organ) WHERE g.name IN ${filter} RETURN DISTINCT o.name as name`;\n      queryR = `MATCH (g:MGene)-[r]->(o:Organ) WHERE g.name IN ${filter} RETURN ID(g) as sid,ID(o) as tid, g.name as sname, o.name as tname`;\n\n      if (finalVerdict) {\n        queryG = `MATCH (g:MGene) WHERE g.name IN ${filter} AND g.FinalVerdict = 1 RETURN DISTINCT g.name as name`;\n        queryO = `MATCH (g:MGene)--(o:Organ) WHERE g.name IN ${filter}  AND g.FinalVerdict = 1 RETURN DISTINCT o.name as name`;\n        queryR = `MATCH (g:MGene)-[r]->(o:Organ) WHERE g.name IN ${filter} AND g.FinalVerdict = 1 RETURN ID(g) as sid,ID(o) as tid, g.name as sname, o.name as tname`;\n      }\n    }\n\n    console.log(queryG);\n    console.log(queryO);\n    console.log(queryR);\n    let session = driver.session();\n    let res = await session.run(queryG);\n\n    try {\n      let nodes = res.records.map(row => {\n        return {\n          name: row.get('name'),\n          nodeColor: 'blue'\n        };\n      });\n      console.log('Data loaded - Gene');\n      res = await session.run(queryO);\n      nodes = Array.prototype.concat(nodes, res.records.map(row => {\n        return {\n          name: row.get('name'),\n          nodeColor: 'red'\n        };\n      }));\n      console.log('Data loaded - Organ');\n      res = await session.run(queryR);\n      let links = res.records.map(row => {\n        return {\n          source: row.get('sname'),\n          target: row.get('tname')\n        };\n      });\n      console.log('Data loaded - Relationship');\n      console.log('Data loaded');\n      session.close();\n      setData({\n        nodes,\n        links\n      });\n    } catch (e) {\n      throw e;\n    } finally {\n      await session.close();\n    }\n  }\n\n  const [genes, setGenes] = useState([]);\n  let count = 0;\n\n  const loadGenes = async () => {\n    console.log('Enter - loadGenes', count++);\n    if (driver == null) return;\n    let session = driver.session();\n    let res = await session.run(`MATCH (g:MGene) RETURN DISTINCT g.name as name ORDER BY name`);\n    let elems = [{\n      value: '',\n      text: ''\n    }];\n\n    if (res.records) {\n      elems = res.records.map(row => {\n        const tmp = {\n          value: row.get('name'),\n          text: row.get('name')\n        };\n        return tmp;\n      });\n    }\n\n    setGenes(elems);\n    console.log('Exit - loadGenes');\n  };\n\n  console.log(genes.length);\n\n  if (genes.length == 0) {\n    loadGenes();\n  }\n\n  const forceRef = useRef(); // const forceRef = useRef()      \n\n  console.log('Exit - GeneGraph');\n  const [initialCenter, setInitialCenter] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Select genes\",\n        options: genes,\n        multiple: true,\n        onChange: (e, data) => {\n          console.log(data);\n          dropdownHandler(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Select gender\",\n        options: [{\n          text: 'Both',\n          value: 'Both'\n        }, {\n          text: 'Male',\n          value: 'Male'\n        }, {\n          text: 'Female',\n          value: 'Female'\n        }],\n        selected: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        label: \"Verified\",\n        defaultChecked: true,\n        onChange: (e, data) => {\n          console.log(e);\n          finalVerdictHandler(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        border: \"1px solid gray\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n        width: window.innerWidth || 1000,\n        height: 800,\n        ref: forceRef,\n        cooldownTicks: 50,\n        onEngineStop: () => {\n          console.log('onEngineStop');\n\n          if (initialCenter) {\n            if (forceRef.current) forceRef.current.zoomToFit();\n          }\n\n          setInitialCenter(false);\n        },\n        graphData: data,\n        nodeId: \"name\",\n        backgroundColor: \"grey\",\n        linkDirectionalArrowRelPos: 1,\n        linkDirectionalArrowLength: 2,\n        nodeColor: \"nodeColor\",\n        nodeLabel: \"name\",\n        nodeCanvasObjectMode: () => 'after',\n        nodeCanvasObject: (node, ctx, globalScale) => {\n          const label = node.name;\n          const fontSize = 14 / globalScale * 1.2;\n          ctx.font = `${fontSize}px Sans-Serif`;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillStyle = 'white';\n\n          const _x = node.x ? node.x : 0;\n\n          const _y = node.y ? node.y : 0;\n\n          ctx.fillText(label, _x, _y);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GeneGraph, \"Yl6BuzWIJF9OaBoqjvG+INi8kso=\");\n\n_c = GeneGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneGraph\");","map":{"version":3,"names":["useContext","useState","useRef","ForceGraph2D","Checkbox","Dropdown","Neo4jContext","GeneGraph","console","log","context","driver","finalVerdict","setFinalVerdict","filter","setFilter","data","setData","nodes","links","finalVerdictHandler","value","localFinalVerdict","checked","loadGraph","dropdownHandler","localFilter","forEach","slice","length","queryG","queryO","queryR","session","res","run","records","map","row","name","get","nodeColor","Array","prototype","concat","source","target","close","e","genes","setGenes","count","loadGenes","elems","text","tmp","forceRef","initialCenter","setInitialCenter","marginTop","border","window","innerWidth","current","zoomToFit","node","ctx","globalScale","label","fontSize","font","textAlign","textBaseline","fillStyle","_x","x","_y","y","fillText"],"sources":["/Users/zack/src/gene3/src/views/GeneGraph.tsx"],"sourcesContent":["import { useContext, useState, useRef, MutableRefObject } from 'react'\n\nimport ForceGraph2D, { ForceGraphMethods }  from 'react-force-graph-2d'\nimport { Checkbox, CheckboxProps,Dropdown, DropdownProps } from 'semantic-ui-react'\nimport { Neo4jContext } from 'use-neo4j'\n\n\ntype DataType = {\n    nodes: []\n    linkgs: []\n}\n\nexport const GeneGraph = () => {\n\n    console.log('Enter - GeneGraph')\n  \n \n    const context = useContext(Neo4jContext), driver = context.driver\n\n    const [finalVerdict, setFinalVerdict] = useState(true)\n    const [filter, setFilter] = useState('')\n\n    type dataType = \n    {   nodes: {name:string, nodeColor:string}[] \n        links: {source: string, target: string}[]\n    }\n    const [data, setData] =  useState<dataType>( {nodes: [], links: []} )\n    \n    async function finalVerdictHandler(data: CheckboxProps) {\n        console.log('Enter - finalVerdictHandelder')\n        console.log(data.value)\n        if ( !data ) {\n            console.log('Data not correct type')\n            return \n        }\n\n        const localFinalVerdict : boolean  = data.checked ? data.checked : false\n        console.log('data', data, localFinalVerdict)\n        loadGraph(filter, localFinalVerdict)\n        setFinalVerdict(localFinalVerdict)\n        console.log('Exit - finalVerdictHandelder')        \n    }\n\n    async function dropdownHandler(data: DropdownProps) {\n        console.log('Enter - dropDownHandler')\n        console.log(data.value)\n        if ( !data ) {\n            console.log('Data not correct type')\n            return \n        }\n        let localFilter: string = '';\n        (data.value  as string[]).forEach(value => { \n            if (localFilter == '') localFilter = '['\n            localFilter = localFilter + '\\'' + value + '\\','\n        } )\n        if (localFilter != '') {\n            localFilter = localFilter.slice(0, localFilter.length - 1);\n            localFilter = localFilter + ']'\n        }\n        console.log('localFilter =', localFilter, 'filter = ', filter)   \n        loadGraph(localFilter,finalVerdict)\n        setFilter(localFilter)\n        console.log('Exit - dropDownHandler')        \n    }\n\n    async function loadGraph(filter: string, finalVerdict: boolean = true) {\n        console.log('Enter - loadData')\n        if (driver == null) {\n            console.log('Driver not loaded')\n            return \n        }\n\n        let queryG = 'MATCH (g:MGene) RETURN DISTINCT g.name as name'\n        let queryO = `MATCH (g:MGene)--(o:Organ) RETURN DISTINCT o.name as name`\n        let queryR = 'MATCH (g:MGene)-[r]->(o:Organ) RETURN ID(g) as sid,ID(o) as tid, g.name as sname, o.name as tname'\n\n        if (finalVerdict) {\n     \n            queryG = 'MATCH (g:MGene) WHERE g.FinalVerdict = 1 RETURN DISTINCT g.name as name'\n            queryO = `MATCH (g:MGene)--(o:Organ) WHERE g.FinalVerdict = 1 RETURN DISTINCT o.name as name`\n            queryR = 'MATCH (g:MGene)-[r]->(o:Organ) WHERE g.FinalVerdict = 1 RETURN ID(g) as sid, ID(o) as tid, g.name as sname, o.name as tname'\n\n        }\n\n        if ( filter !== '' ) {\n\n            queryG = `MATCH (g:MGene) WHERE g.name IN ${filter} RETURN DISTINCT g.name as name`\n            queryO = `MATCH (g:MGene)--(o:Organ) WHERE g.name IN ${filter} RETURN DISTINCT o.name as name`\n            queryR = `MATCH (g:MGene)-[r]->(o:Organ) WHERE g.name IN ${filter} RETURN ID(g) as sid,ID(o) as tid, g.name as sname, o.name as tname`\n\n            if (finalVerdict) {\n\n                queryG = `MATCH (g:MGene) WHERE g.name IN ${filter} AND g.FinalVerdict = 1 RETURN DISTINCT g.name as name`\n                queryO = `MATCH (g:MGene)--(o:Organ) WHERE g.name IN ${filter}  AND g.FinalVerdict = 1 RETURN DISTINCT o.name as name`\n                queryR = `MATCH (g:MGene)-[r]->(o:Organ) WHERE g.name IN ${filter} AND g.FinalVerdict = 1 RETURN ID(g) as sid,ID(o) as tid, g.name as sname, o.name as tname`\n\n            }\n            \n        }\n        console.log(queryG)\n        console.log(queryO)\n        console.log(queryR)\n        let session = driver.session()\n\n        let res = await session.run(queryG)\n        try {\n    \n            let nodes = res.records.map( row => {return { name: row.get('name'), nodeColor:'blue'} })\n            console.log('Data loaded - Gene')\n    \n            res = await session.run(queryO)\n            nodes = Array.prototype.concat(nodes, res.records.map( row => {return { name: row.get('name'), nodeColor:'red'} }))\n            console.log('Data loaded - Organ')\n\n            res = await session.run(queryR)\n            let links = res.records.map( row => {return { source: row.get('sname'), target: row.get('tname') } })\n            console.log('Data loaded - Relationship')\n            \n            console.log('Data loaded')\n            session.close();\n            setData({ nodes, links })\n        } catch (e) {\n            throw e\n        }\n        finally {\n            await session.close()\n        \n        }\n    }\n\n    type GeneOptionType = {\n        value: string\n        text: string\n    }\n    \n\n    const [genes, setGenes] = useState<GeneOptionType[]>([])\n\n    let count = 0\n    \n    const loadGenes = async () => {  \n        console.log('Enter - loadGenes', count++)\n        if (driver == null) return \n\n \n        let session = driver.session()\n\n        let res = await session.run(`MATCH (g:MGene) RETURN DISTINCT g.name as name ORDER BY name`)\n       \n\n        let elems = [{value: '',text:''}]\n        if (res.records) { \n            elems = res.records.map( row => {\n                const tmp = { \n                value: row.get('name') as string,\n                text: row.get('name') as string \n                }\n                \n            return tmp\n            })\n        }\n        \n        setGenes(elems)\n        console.log('Exit - loadGenes')\n    }\n\n    console.log(genes.length)\n    if (genes.length == 0 ) { \n        loadGenes() \n    }\n\n    \n    interface NodeObject {\n        name: string\n    }\n    \n    const forceRef : MutableRefObject<ForceGraphMethods | undefined> = useRef()      \n\n    // const forceRef = useRef()      \n\n    console.log('Exit - GeneGraph')\n    const [initialCenter, setInitialCenter] = useState(true);\n\n\n    return ( \n        <div>\n            <div>\n                <Dropdown placeholder='Select genes' options={genes} multiple={true} onChange={ (e,data)=>{ console.log(data); dropdownHandler(data) } }></Dropdown>\n                <Dropdown placeholder='Select gender' options={[{text:'Both',value:'Both'},{text:'Male',value:'Male'},{text:'Female',value:'Female'}]} \n                    selected='true'></Dropdown>\n                <span>  </span>\n                <Checkbox label='Verified' defaultChecked={true} onChange={(e,data)=> { console.log( e); finalVerdictHandler(data)} } />\n            </div>\n            \n            <div style={{ marginTop:\"20px\", border: \"1px solid gray\",}}>\n                <ForceGraph2D \n                    width={window.innerWidth || 1000}\n                    height={800}\n                    ref={forceRef}\n                    cooldownTicks={50}\n                    \n                    onEngineStop={ () => {\n                        console.log('onEngineStop')\n                        if (initialCenter) {\n                          if ( forceRef.current ) forceRef.current.zoomToFit()\n                        }\n                        setInitialCenter(false)\n                    }}\n\n                    graphData={data} \n                    nodeId='name'  \n                    backgroundColor='grey' \n                    linkDirectionalArrowRelPos={1} \n                    linkDirectionalArrowLength={2} \n                    nodeColor='nodeColor' \n                    nodeLabel='name' \n                    nodeCanvasObjectMode={() => 'after'} \n                    nodeCanvasObject={(node, ctx, globalScale) => {\n                        \n                        const label = (node as NodeObject).name\n                        const fontSize = 14 /globalScale * 1.2\n                    \n                        ctx.font = `${fontSize}px Sans-Serif`\n                        \n                        ctx.textAlign = 'center';\n                        ctx.textBaseline = 'middle'\n                        ctx.fillStyle = 'white'\n                        const _x = node.x ? node.x : 0\n                        const _y = node.y ? node.y : 0\n                        ctx.fillText(label, _x, _y  )\n                    }}\n                    />\n                \n            </div>       \n\n        </div>\n    \n    )\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}