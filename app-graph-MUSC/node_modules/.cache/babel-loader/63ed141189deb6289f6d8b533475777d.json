{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene3/src/components/Graph.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { InputLabel, MenuItem, OutlinedInput, FormControl } from '@mui/material';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst genes = ['ABC', 'EFG', 'pop', 'XYZ'];\nexport const Graph = () => {\n  _s();\n\n  console.log('YES');\n  const [geneName, setGeneName] = useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setGeneName( // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    sx: {\n      m: 1,\n      width: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"multiple-gene-label\",\n      children: \"Gene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"multiple-gene-label_\",\n      id: \"multiple-gene\",\n      multiple: true,\n      value: geneName,\n      onChange: handleChange,\n      input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        label: \"Gene\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 24\n      }, this),\n      MenuProps: MenuProps,\n      children: genes.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: name //  style={}\n        ,\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Graph, \"7wTf+cY7Wxpivb1+gpqUaYAPM1s=\");\n\n_c = Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","InputLabel","MenuItem","OutlinedInput","FormControl","Select","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","genes","Graph","console","log","geneName","setGeneName","handleChange","event","target","value","split","m","map","name"],"sources":["/Users/zack/src/gene3/src/components/Graph.tsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { Stack, InputLabel, MenuItem, OutlinedInput, FormControl } from '@mui/material'\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst genes = [\n    'ABC', \n    'EFG',\n    'pop', \n    'XYZ'\n]\n\nexport const Graph = () => {\n\n    console.log('YES')\n    const [geneName, setGeneName] = useState<string[]>([])\n\n    const handleChange = (event: SelectChangeEvent<typeof geneName>) => {\n        const {\n          target: { value },\n        } = event;\n        setGeneName(\n          // On autofill we get a stringified value.\n          typeof value === 'string' ? value.split(',') : value,\n        );\n      };\n\n    return (\n\n            <FormControl sx={{m:1, width: 300}}>\n                <InputLabel id='multiple-gene-label'>Gene</InputLabel>\n                <Select \n                labelId='multiple-gene-label_'\n                id='multiple-gene'\n                multiple\n                value={geneName}\n                onChange={handleChange}\n                input={<OutlinedInput label='Gene'/>}\n                MenuProps={MenuProps}\n                >\n                    {genes.map((name)=>(\n                        <MenuItem\n                        key={name}\n                        value={name}\n                        //  style={}\n                        >\n                            {name}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n    )\n\n\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,aAAtC,EAAqDC,WAArD,QAAwE,eAAxE;AACA,OAAOC,MAAP,MAA0C,sBAA1C;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE;IACVC,KAAK,EAAE;MACLC,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;MAELK,KAAK,EAAE;IAFF;EADG;AADI,CAAlB;AASA,MAAMC,KAAK,GAAG,CACV,KADU,EAEV,KAFU,EAGV,KAHU,EAIV,KAJU,CAAd;AAOA,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAEvBC,OAAO,CAACC,GAAR,CAAY,KAAZ;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAW,EAAX,CAAxC;;EAEA,MAAMmB,YAAY,GAAIC,KAAD,IAA+C;IAChE,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAF;IADJ,IAEFF,KAFJ;IAGAF,WAAW,EACT;IACA,OAAOI,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAA5B,GAA+CD,KAFtC,CAAX;EAID,CARH;;EAUA,oBAEQ,QAAC,WAAD;IAAa,EAAE,EAAE;MAACE,CAAC,EAAC,CAAH;MAAMZ,KAAK,EAAE;IAAb,CAAjB;IAAA,wBACI,QAAC,UAAD;MAAY,EAAE,EAAC,qBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MACA,OAAO,EAAC,sBADR;MAEA,EAAE,EAAC,eAFH;MAGA,QAAQ,MAHR;MAIA,KAAK,EAAEK,QAJP;MAKA,QAAQ,EAAEE,YALV;MAMA,KAAK,eAAE,QAAC,aAAD;QAAe,KAAK,EAAC;MAArB;QAAA;QAAA;QAAA;MAAA,QANP;MAOA,SAAS,EAAEX,SAPX;MAAA,UASKK,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACP,QAAC,QAAD;QAEA,KAAK,EAAEA,IAFP,CAGA;QAHA;QAAA,UAKKA;MALL,GACKA,IADL;QAAA;QAAA;QAAA;MAAA,QADH;IATL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFR;AA4BH,CA3CM;;GAAMZ,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}