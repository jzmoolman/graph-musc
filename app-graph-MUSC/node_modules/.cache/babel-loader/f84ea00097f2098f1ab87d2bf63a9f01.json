{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene3/src/components/GeneGrpah.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { Neo4jContext } from 'use-neo4j';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { paintNode } from '../tools/graphtools';\nimport { loadGeneData } from '../tools/grapgdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BaseGraph = _ref => {\n  _s();\n\n  let {\n    name,\n    verified,\n    genes,\n    organs,\n    graphScheme\n  } = _ref;\n  console.log(`enter - ${name}Graph`);\n  const isMounted = useRef(false);\n  const [renderTick, setRenderTick] = useState(0);\n\n  const onResize = () => {\n    console.log('onResize');\n    let tick = renderTick + 1;\n    console.log('renderTick', tick);\n    setRenderTick(tick);\n  };\n\n  useEffect(() => {\n    console.log('Graph mounted');\n    isMounted.current = true;\n    window.addEventListener(\"resize\", onResize);\n  }, []);\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  useEffect(() => {\n    console.log('Reload data');\n\n    const onData = data => {\n      console.log(data);\n      setData(data);\n    };\n\n    if (name === 'Gene') {\n      loadGeneData(driver, verified, genes, organs, graphScheme, onData);\n    } else if (name === 'Organ') loadOrganData(driver, verified, genes, organs, graphScheme, onData);else if (name === 'Syndrome') {\n      loadSyndromeData(driver, verified, genes, organs, graphScheme, onData);\n    }\n  }, [verified, genes, organs, graphScheme]);\n  const forceRef = useRef();\n  const Width = window.innerWidth - 18;\n  const Height = window.innerHeight - 85;\n  return /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n    ref: forceRef,\n    width: Width,\n    height: Height,\n    graphData: data,\n    backgroundColor: \"white\",\n    nodeId: \"name\",\n    nodeColor: \"nodeColor\",\n    nodeLabel: \"name\",\n    linkDirectionalArrowRelPos: 1,\n    linkDirectionalArrowLength: 2,\n    cooldownTicks: 100,\n    onEngineStop: () => {\n      var _forceRef$current;\n\n      return (_forceRef$current = forceRef.current) === null || _forceRef$current === void 0 ? void 0 : _forceRef$current.zoomToFit(100);\n    },\n    nodeVal: graphScheme.nodeVal,\n    nodeRelSize: graphScheme.nodeRelSize,\n    nodeCanvasObjectMode: () => 'after',\n    nodeCanvasObject: paintNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BaseGraph, \"2KpojkYrUCJbPv6ATGVhgxv/E7w=\");\n\n_c = BaseGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseGraph\");","map":{"version":3,"names":["useState","useContext","useEffect","useRef","Neo4jContext","ForceGraph2D","paintNode","loadGeneData","BaseGraph","name","verified","genes","organs","graphScheme","console","log","isMounted","renderTick","setRenderTick","onResize","tick","current","window","addEventListener","context","driver","data","setData","nodes","links","onData","loadOrganData","loadSyndromeData","forceRef","Width","innerWidth","Height","innerHeight","zoomToFit","nodeVal","nodeRelSize"],"sources":["/Users/zack/src/gene3/src/components/GeneGrpah.tsx"],"sourcesContent":["\nimport { useState, useContext, useEffect, useRef, MutableRefObject } from 'react'\nimport { Driver }  from  'neo4j-driver'\nimport { Neo4jContext } from 'use-neo4j'\nimport ForceGraph2D, { ForceGraphMethods }  from 'react-force-graph-2d'\nimport { Force2DData, GraphScheme, paintNode } from '../tools/graphtools'\nimport { loadGeneData } from '../tools/grapgdata'\n\n\ntype BaseGraphProps = {\n    name: string\n    verified: boolean\n    genes: string[]\n    organs: string[]\n    graphScheme: GraphScheme\n}\nexport const BaseGraph = ( {name, verified, genes, organs, graphScheme} : GeneGraphProps ) => {\n\n    console.log(`enter - ${name}Graph`)\n    \n    const isMounted = useRef(false)\n    const [renderTick, setRenderTick] = useState(0);\n\n    const onResize = () => {\n        console.log('onResize')\n        let tick = renderTick + 1\n        console.log('renderTick', tick )\n        setRenderTick(tick )\n    }\n\n    useEffect(()=>{\n        console.log('Graph mounted')\n        isMounted.current = true\n        window.addEventListener(\"resize\", onResize )\n    },[])\n\n    const context = useContext(Neo4jContext), driver = context.driver\n    const [data, setData] =  useState<Force2DData>( {nodes: [], links: []} )\n\n    useEffect( () => {\n        console.log('Reload data')\n        const onData = (data: Force2DData) =>{\n            console.log(data)\n            setData(data)\n        }\n\n        if (name === 'Gene') {\n          loadGeneData(driver, verified, genes, organs, graphScheme, onData)\n        } else if (name === 'Organ')\n          loadOrganData(driver, verified, genes, organs, graphScheme, onData)\n        else if ( name === 'Syndrome') {\n          loadSyndromeData(driver, verified, genes, organs, graphScheme, onData)\n        }\n\n    },[ verified, genes, organs, graphScheme] )\n    \n\n\n    const forceRef : MutableRefObject<ForceGraphMethods | undefined> = useRef()      \n\n    const Width = window.innerWidth -18\n    const Height = window.innerHeight -85\n\n    return ( \n        <ForceGraph2D \n            ref={forceRef}\n            \n            \n            width={Width}\n            height={Height}\n            graphData={data}\n            backgroundColor='white'\n            nodeId='name'  \n            nodeColor='nodeColor' \n            nodeLabel='name' \n            linkDirectionalArrowRelPos={1} \n            linkDirectionalArrowLength={2} \n            cooldownTicks={100}\n            onEngineStop={ () => forceRef.current?.zoomToFit(100)} \n            nodeVal={graphScheme.nodeVal}\n            nodeRelSize={graphScheme.nodeRelSize}\n            nodeCanvasObjectMode={() => 'after'} \n            nodeCanvasObject={paintNode}\n            />\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}