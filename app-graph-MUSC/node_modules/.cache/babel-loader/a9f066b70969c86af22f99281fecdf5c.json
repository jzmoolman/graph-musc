{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene3/src/components/Graph.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Stack } from '@mui/material';\nimport { Dropdown } from './Dropdown';\nimport { GeneDropdown } from './GeneDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst genes = ['BRCA1', 'BRCA2', 'GEMS', 'XYZ'];\nexport const Graph = () => {\n  _s();\n\n  const [genes, setGenes] = useState([]);\n\n  const handleGeneChange = selection => {\n    console.log('handleGeneChange', selection);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"        \", /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'primary.main',\n        color: 'white',\n        height: '200px',\n        width: '120px',\n        paddig: '16px',\n        '&:hover': {\n          backgroundColor: 'primary.light'\n        }\n      },\n      children: [\"TEST\", /*#__PURE__*/_jsxDEV(Dropdown, {\n        label: \"Genes\",\n        options: genes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row-reverse\",\n      my: 1,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '250px'\n        },\n        children: /*#__PURE__*/_jsxDEV(GeneDropdown, {\n          onChange: handleGeneChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexGrow: 1,\n          backgroundColor: 'secondary.main',\n          color: 'white',\n          paddig: '16px',\n          '&:hover': {\n            backgroundColor: 'secondary.light'\n          }\n        },\n        children: [\"GRAPH \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: genes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Graph, \"m3VGbD/RSXnB3AX44TWqpnOsgrA=\");\n\n_c = Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","Box","Stack","Dropdown","GeneDropdown","genes","Graph","setGenes","handleGeneChange","selection","console","log","backgroundColor","color","height","width","paddig","display","flexGrow"],"sources":["/Users/zack/src/gene3/src/components/Graph.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport  { Box, Stack } from '@mui/material'\nimport { Dropdown } from './Dropdown';\nimport { GeneDropdown } from './GeneDropdown';\n\n\nconst genes = [ 'BRCA1', \n    'BRCA2',\n    'GEMS', \n    'XYZ'\n]\n\nexport const Graph = () => {\n    const [genes, setGenes] = useState<string[]>([])\n\n    const handleGeneChange = (selection: string[]) => {\n        console.log('handleGeneChange', selection)\n    }\n\n    return (\n        <>        <Box \n            sx={{\n                backgroundColor: 'primary.main',\n                color: 'white',\n                height: '200px',\n                width: '120px',\n                paddig: '16px',\n                '&:hover': {\n                    backgroundColor: 'primary.light'\n                }\n            }}\n        >\n            TEST\n            <Dropdown label='Genes' options={genes} /> \n        </Box>\n        <Stack direction='row-reverse' my={1}>\n            <Box sx={{width: '250px'}}>\n              <GeneDropdown onChange={handleGeneChange}/>\n            </Box>            \n            <Box \n                sx={{\n                  display: 'flex',\n                  flexGrow: 1,\n                  backgroundColor: 'secondary.main',\n                  color: 'white',\n                  paddig: '16px',\n                  '&:hover': {\n                    backgroundColor: 'secondary.light'\n                  }\n                }}\n            >GRAPH <p>{genes}</p></Box>\n        </Stack>\n    </>\n\n    )\n\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAUC,GAAV,EAAeC,KAAf,QAA4B,eAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAGA,MAAMC,KAAK,GAAG,CAAE,OAAF,EACV,OADU,EAEV,MAFU,EAGV,KAHU,CAAd;AAMA,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBP,QAAQ,CAAW,EAAX,CAAlC;;EAEA,MAAMQ,gBAAgB,GAAIC,SAAD,IAAyB;IAC9CC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,SAAhC;EACH,CAFD;;EAIA,oBACI;IAAA,oCAAU,QAAC,GAAD;MACN,EAAE,EAAE;QACAG,eAAe,EAAE,cADjB;QAEAC,KAAK,EAAE,OAFP;QAGAC,MAAM,EAAE,OAHR;QAIAC,KAAK,EAAE,OAJP;QAKAC,MAAM,EAAE,MALR;QAMA,WAAW;UACPJ,eAAe,EAAE;QADV;MANX,CADE;MAAA,gCAaN,QAAC,QAAD;QAAU,KAAK,EAAC,OAAhB;QAAwB,OAAO,EAAEP;MAAjC;QAAA;QAAA;QAAA;MAAA,QAbM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAV,eAeA,QAAC,KAAD;MAAO,SAAS,EAAC,aAAjB;MAA+B,EAAE,EAAE,CAAnC;MAAA,wBACI,QAAC,GAAD;QAAK,EAAE,EAAE;UAACU,KAAK,EAAE;QAAR,CAAT;QAAA,uBACE,QAAC,YAAD;UAAc,QAAQ,EAAEP;QAAxB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADJ,eAII,QAAC,GAAD;QACI,EAAE,EAAE;UACFS,OAAO,EAAE,MADP;UAEFC,QAAQ,EAAE,CAFR;UAGFN,eAAe,EAAE,gBAHf;UAIFC,KAAK,EAAE,OAJL;UAKFG,MAAM,EAAE,MALN;UAMF,WAAW;YACTJ,eAAe,EAAE;UADR;QANT,CADR;QAAA,kCAWO;UAAA,UAAIP;QAAJ;UAAA;UAAA;UAAA;QAAA,QAXP;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAfA;EAAA,gBADJ;AAqCH,CA5CM;;GAAMC,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}