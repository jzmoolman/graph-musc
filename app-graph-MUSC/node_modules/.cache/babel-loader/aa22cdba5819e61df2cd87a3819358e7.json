{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/Graph.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, Divider, Paper, Drawer, Typography } from '@mui/material';\nimport { Configuration } from './Configuration';\nimport { defaultGraphScheme } from '../tools/graphtools';\nimport { BaseGraph } from './BaseGraph';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport { Filters } from './Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 350;\nconst Main = styled('main', {\n  shouldForwardProp: prop => prop !== 'open'\n})(_ref => {\n  let {\n    theme,\n    open\n  } = _ref;\n  return {\n    id: 'main-zzz',\n    flexGrow: 1,\n    height: '100%',\n    padding: theme.spacing(0),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    // marginRight: -drawerWidth,\n    marginRight: 0,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginRight: 0\n    })\n  };\n});\n_c = Main;\nconst DrawerHeader = styled('div')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    id: 'drawerHeader-zzz',\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    //   ...theme.mixins.toolbar,\n    justifyContent: 'flex-start'\n  };\n});\n_c2 = DrawerHeader;\nexport const Graph = _ref3 => {\n  _s();\n\n  let {\n    name,\n    open,\n    onChange\n  } = _ref3;\n  console.log('enter - Graph');\n  const [graphScheme, setGraphScheme] = useState(defaultGraphScheme);\n  const [genes, setGenes] = useState([]);\n  const [organs, setOrgans] = useState([]);\n  const [syndromes, setSyndromes] = useState([]);\n  const [diseases, setDiseases] = useState([]);\n  const [finalVerdict, setFinalVerdict] = useState('Confirmed');\n  const [dim, setDim] = useState({\n    width: 600,\n    height: 600\n  });\n  useEffect(() => {\n    console.log('Graph mounted');\n    window.addEventListener(\"resize\", handleResize);\n    setDim({\n      width: getWidth(),\n      height: getHeight()\n    });\n  }, []);\n\n  const handleResize = () => {\n    console.log('onResize');\n    setDim(() => ({\n      width: getWidth(),\n      height: getHeight()\n    }));\n  };\n\n  const getWidth = () => {\n    var _document$getElementB;\n\n    let number = Number((_document$getElementB = document.getElementById(`graph-box`)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.offsetWidth);\n    console.log('getWidht', number);\n\n    if (typeof number === 'number' && number === number) {\n      console.log('getWidth is a number', number);\n      return number - 12;\n    } else {\n      console.log('getWidth NaN', number);\n      return 400;\n    }\n  };\n\n  const getHeight = () => {\n    var _document$getElementB2;\n\n    let number = Number((_document$getElementB2 = document.getElementById(`graph-box`)) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.offsetHeight);\n    console.log('getHeight', number);\n\n    if (typeof number === 'number' && number === number) {\n      console.log('getHeight is a number', number);\n      return number - 12;\n    } else {\n      console.log('getHeight NaN', number);\n      return 400;\n    }\n  };\n\n  const handleDrawerClose = () => {\n    onChange(false);\n  };\n\n  const handleGeneChange = selected => {\n    setGenes(selected);\n  };\n\n  const handleOrganChange = selected => {\n    setOrgans(selected);\n  };\n\n  const handleDiseaseChange = selected => {\n    console.log('handleDiseaseChange', selected);\n    setDiseases(selected);\n  };\n\n  const handleSyndromeChange = selected => {\n    setSyndromes(selected);\n  };\n\n  const handleFinalVerdictChange = selected => {\n    console.log('handleFinalVerdictChange', graphScheme);\n    setFinalVerdict(selected);\n  };\n\n  const handleConfiguationChange = graphScheme => {\n    console.log('handleConfiguationChange', graphScheme);\n    setGraphScheme(graphScheme);\n  };\n\n  if (name === 'gene') {\n    if (organs.length !== 0) {\n      setOrgans([]);\n    }\n\n    if (syndromes.length !== 0) {\n      setGenes([]);\n    }\n\n    if (diseases.length !== 0) {\n      setGenes([]);\n    }\n  } else if (name === 'organ') {\n    if (genes.length !== 0) {\n      setGenes([]);\n    }\n\n    if (syndromes.length !== 0) {\n      setGenes([]);\n    }\n\n    if (diseases.length !== 0) {\n      setGenes([]);\n    }\n  } else if (name === 'disease') {\n    if (genes.length !== 0) {\n      setGenes([]);\n    }\n\n    if (organs.length !== 0) {\n      setOrgans([]);\n    }\n\n    if (syndromes.length !== 0) {\n      setGenes([]);\n    }\n  } else if (name === 'gene') {\n    if (organs.length !== 0) {\n      setOrgans([]);\n    }\n\n    if (syndromes.length !== 0) {\n      setGenes([]);\n    }\n\n    if (diseases.length !== 0) {\n      setGenes([]);\n    }\n  }\n\n  const DisplayPanel = () => {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: \"Configuration Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this); // if (name === 'gene' )  {\n    //     return (\n    //         <>\n    //             {/* <GeneDropdown  selected={genes}/>\n    //             <CustomSelect \n    //                     options={\n    //                         [\n    //                             //Do not know how to get the key value yet\n    //                             {key:'1', value: 'Confirmed'},\n    //                             {key:'9', value: 'Maybe'}]\n    //                             // {key:'0', value:  'Unknown'}]\n    //                     }\n    //                     label='Final verdict' \n    //                     defaultSelected={finalVerdict}\n    //                     onChange={handleFinalVerdictChange}\n    //             /> */}\n    //         </>\n    //     )     \n    // } else if (name === 'organ') {\n    //     return (\n    //         <>\n    //             <OrganDropdown onChange={handleOrganChange} selected={organs}/>\n    //             <CustomSelect \n    //                 options={\n    //                     [\n    //                         //Do not know how to get the key value yet\n    //                         {key:'1', value: 'Confirmed'},\n    //                         {key:'9', value: 'Maybe'}]\n    //                         // {key:'0', value:  'Unknown'}]\n    //                 }\n    //                 label='Final verdict' \n    //                 defaultSelected={finalVerdict}\n    //                 onChange={handleFinalVerdictChange}\n    //             />\n    //         </>\n    //     )\n    // } else if (name === 'disease-gene')  \n    //     return (\n    //         <>\n    //             <DiseaseDropdown onChange={handleDiseaseChange} selected={diseases}/>\n    //             <GeneDropdown onChange={handleGeneChange} selected={genes}/>\n    //             <CustomSelect \n    //                 options={\n    //                     [\n    //                         //Do not know how to get the key value yet\n    //                         {key:'1', value: 'Confirmed'},\n    //                         {key:'9', value: 'Maybe'}]\n    //                         // {key:'0', value:  'Unknown'}]\n    //                 }\n    //                 label='Final verdict' \n    //                 defaultSelected={finalVerdict}\n    //                 onChange={handleFinalVerdictChange}\n    //             />\n    //         </>\n    //     )\n    // else if (name === 'syndrome-gene') {\n    //     return (\n    //         <>\n    //             <SyndromeDropdown onChange={handleSyndromeChange} selected={syndromes}/>\n    //             <GeneDropdown onChange={handleGeneChange} selected={genes}/>\n    //             <CustomSelect \n    //                 options={\n    //                     [\n    //                         //Do not know how to get the key value yet\n    //                         {key:'1', value: 'Confirmed'},\n    //                         {key:'9', value: 'Maybe'}]\n    //                         // {key:'0', value:  'Unknown'}]\n    //                 }\n    //                 label='Final verdict' \n    //                 defaultSelected={finalVerdict}\n    //                 onChange={handleFinalVerdictChange}\n    //             />\n    //         </>\n    //     )\n    // } else if (name === 'syndrome-organ') { \n    //     return (\n    //         <>\n    //             <SyndromeDropdown onChange={handleSyndromeChange} selected={syndromes}/>\n    //             <OrganDropdown onChange={handleOrganChange} selected={organs}/>\n    //             <CustomSelect \n    //                 options={\n    //                     [\n    //                         //Do not know how to get the key value yet\n    //                         {key:'1', value: 'Confirmed'},\n    //                         {key:'9', value: 'Maybe'}]\n    //                         // {key:'0', value:  'Unknown'}]\n    //                 }\n    //                 label='Final verdict' \n    //                 defaultSelected={finalVerdict}\n    //                 onChange={handleFinalVerdictChange}\n    //             />\n    //         </>\n    //     )\n    // } else if (name === 'syndrome-gene-organ') {\n    //     return (\n    //         <>\n    //             <GeneDropdown onChange={handleGeneChange} selected={genes}/>\n    //             <OrganDropdown onChange={handleOrganChange} selected={organs}/>\n    //             <CustomSelect \n    //                 options={\n    //                     [\n    //                         //Do not know how to get the key value yet\n    //                         {key:'1', value: 'Confirmed'},\n    //                         {key:'9', value: 'Maybe'}]\n    //                         // {key:'0', value:  'Unknown'}]\n    //                 }\n    //                 label='Final verdict' \n    //                 defaultSelected={finalVerdict}\n    //                 onChange={handleFinalVerdictChange}\n    //             />\n    //         </>\n    //     )\n    // } else {\n    //     return (\n    //         <></>\n    //     )\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        name: name,\n        genes: genes,\n        organs: organs,\n        diseases: diseases,\n        finalVerdict: finalVerdict,\n        onGeneChange: handleGeneChange,\n        onOrganChange: handleOrganChange,\n        onDiseaseChange: handleDiseaseChange,\n        onSyndromeChange: handleSyndromeChange,\n        onFinalVerdictChange: handleFinalVerdictChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        id: \"graph-box\",\n        elevation: 4,\n        sx: {\n          display: 'flex',\n          margin: '2px',\n          width: '100%',\n          height: '100%',\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(BaseGraph, {\n          drawerOpen: open,\n          width: getWidth(),\n          height: getHeight(),\n          name: name,\n          genes: genes,\n          organs: organs,\n          syndromes: syndromes,\n          diseases: diseases,\n          finalVerdict: finalVerdict,\n          graphScheme: graphScheme,\n          hover: true,\n          enableZoom: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth\n        }\n      },\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: drawerWidth\n        },\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsxDEV(DisplayPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            marginLeft: '8px',\n            width: '95%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Configuration, {\n          graphScheme: graphScheme,\n          onChange: handleConfiguationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Graph, \"lLe2JIm0Jjusy9avoO4BLg730Pc=\");\n\n_c3 = Graph;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"DrawerHeader\");\n$RefreshReg$(_c3, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","styled","Box","Divider","Paper","Drawer","Typography","Configuration","defaultGraphScheme","BaseGraph","IconButton","ChevronLeftIcon","Filters","drawerWidth","Main","shouldForwardProp","prop","theme","open","id","flexGrow","height","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","easeOut","enteringScreen","DrawerHeader","display","alignItems","justifyContent","Graph","name","onChange","console","log","graphScheme","setGraphScheme","genes","setGenes","organs","setOrgans","syndromes","setSyndromes","diseases","setDiseases","finalVerdict","setFinalVerdict","dim","setDim","width","window","addEventListener","handleResize","getWidth","getHeight","number","Number","document","getElementById","offsetWidth","offsetHeight","handleDrawerClose","handleGeneChange","selected","handleOrganChange","handleDiseaseChange","handleSyndromeChange","handleFinalVerdictChange","handleConfiguationChange","length","DisplayPanel","textAlign","margin","color","flexShrink","marginLeft"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/Graph.tsx"],"sourcesContent":["import React, { useState, memo, useEffect } from 'react'\nimport { styled, useTheme } from '@mui/material/styles'\nimport  { Box, Divider, useColorScheme, Paper, Drawer, Typography } from '@mui/material'\nimport { GeneDropdown } from './GeneDropdown';\nimport { OrganDropdown } from './OrganDropdown';\nimport { SyndromeDropdown } from './SyndromeDropdown';\nimport { DiseaseDropdown } from './DiseaseDropdown';\nimport { Configuration } from './Configuration';\nimport { GraphScheme, defaultGraphScheme } from '../tools/graphtools';\nimport { BaseGraph } from './BaseGraph';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { CustomSelect } from './CustomSelect';\nimport { Filters } from './Filters';\n\nconst drawerWidth = 350;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })\n    <{\n        open?: boolean;\n    }>(({ theme, open }) => ({\n        id: 'main-zzz',\n        flexGrow: 1,\n        height: '100%',\n\n        padding: theme.spacing(0),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        // marginRight: -drawerWidth,\n        marginRight: 0,\n        ...(open && {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginRight: 0\n        })\n    }));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  id: 'drawerHeader-zzz',\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n//   ...theme.mixins.toolbar,\n  justifyContent: 'flex-start',\n}));\n\ntype GraphProps = {\n    name: string\n    open: boolean\n    onChange: (open: boolean) => void\n}\n\ntype Dimension = {\n    width: number\n    height: number\n}\n\n\nexport const Graph = ( { name, open , onChange} : GraphProps) => {\n    console.log('enter - Graph')\n\n    const [graphScheme, setGraphScheme] = useState(defaultGraphScheme)\n    const [genes, setGenes] = useState<string[]>([])\n    const [organs, setOrgans] = useState<string[]>([])\n    const [syndromes, setSyndromes] = useState<string[]>([])\n    const [diseases, setDiseases] = useState<string[]>([])\n    const [finalVerdict, setFinalVerdict] = useState<string>('Confirmed')\n    \n    const [dim, setDim] = useState<Dimension>( {width:600, height:600})\n    \n    useEffect(()=>{\n        console.log('Graph mounted')\n        window.addEventListener(\"resize\", handleResize )\n        setDim( {width: getWidth(), height: getHeight()},\n        )\n    },[])\n\n    const handleResize = () => {\n        console.log('onResize')\n        setDim( ()=> ( {width: getWidth(), height: getHeight()}))\n    }\n\n    const getWidth = () => {\n        let number = Number(document.getElementById(`graph-box`)?.offsetWidth )\n        console.log('getWidht', number)\n        if ( typeof number === 'number' && number === number) {\n            console.log('getWidth is a number', number)\n            return number-12\n        } else {\n            console.log('getWidth NaN', number)\n            return 400\n        }\n    }\n\n    const getHeight = () => {\n\n        let number = Number(document.getElementById(`graph-box`)?.offsetHeight )\n        console.log('getHeight', number)\n        if ( typeof number === 'number' && number === number) {\n            console.log('getHeight is a number', number)\n            return number-12\n        } else {\n            console.log('getHeight NaN', number)\n            return 400\n        }\n    }\n\n    const handleDrawerClose = () => {\n        onChange(false)\n    }\n\n    const handleGeneChange = (selected: string[]) => {\n        setGenes(selected)\n    }\n\n    const handleOrganChange = (selected: string[]) => {\n        setOrgans(selected)\n    }\n\n    const handleDiseaseChange = (selected: string[]) => {\n        console.log('handleDiseaseChange', selected)\n        setDiseases(selected)\n    }\n\n    const handleSyndromeChange = (selected: string[]) => {\n        setSyndromes(selected)\n    }\n\n    const handleFinalVerdictChange = (selected: string) => {\n        console.log('handleFinalVerdictChange', graphScheme)\n        setFinalVerdict(selected)\n    }\n\n    const handleConfiguationChange = (graphScheme:GraphScheme) => {\n        console.log('handleConfiguationChange', graphScheme)\n        setGraphScheme(graphScheme)\n    }\n\n    if (name === 'gene' )  {\n        if (organs.length !== 0 ) {\n            setOrgans([])\n        }\n        if (syndromes.length !== 0 ) {\n            setGenes([])\n        }\n        if (diseases.length !== 0 ) {\n            setGenes([])\n        }\n    } else if (name === 'organ' )  {\n        if (genes.length !== 0 ) {\n            setGenes([])\n        }\n        if (syndromes.length !== 0 ) {\n            setGenes([])\n        }\n        if (diseases.length !== 0 ) {\n            setGenes([])\n        }\n    } else if (name === 'disease' )  {\n        if (genes.length !== 0 ) {\n            setGenes([])\n        }\n        if (organs.length !== 0 ) {\n            setOrgans([])\n        }\n        if (syndromes.length !== 0 ) {\n            setGenes([])\n        }\n    } else if (name === 'gene' )  {\n        if (organs.length !== 0 ) {\n            setOrgans([])\n        }\n        if (syndromes.length !== 0 ) {\n            setGenes([])\n        }\n        if (diseases.length !== 0 ) {\n            setGenes([])\n        }\n    }\n\n    const DisplayPanel = () => {\n        return (\n            <Typography sx={{textAlign: 'center'}}>\n                Configuration Tool\n            </Typography>\n        )\n        // if (name === 'gene' )  {\n        //     return (\n        //         <>\n        //             {/* <GeneDropdown  selected={genes}/>\n        //             <CustomSelect \n        //                     options={\n        //                         [\n        //                             //Do not know how to get the key value yet\n        //                             {key:'1', value: 'Confirmed'},\n        //                             {key:'9', value: 'Maybe'}]\n        //                             // {key:'0', value:  'Unknown'}]\n        //                     }\n        //                     label='Final verdict' \n        //                     defaultSelected={finalVerdict}\n        //                     onChange={handleFinalVerdictChange}\n        //             /> */}\n\n        //         </>\n        //     )     \n        // } else if (name === 'organ') {\n        //     return (\n        //         <>\n        //             <OrganDropdown onChange={handleOrganChange} selected={organs}/>\n        //             <CustomSelect \n        //                 options={\n        //                     [\n        //                         //Do not know how to get the key value yet\n        //                         {key:'1', value: 'Confirmed'},\n        //                         {key:'9', value: 'Maybe'}]\n        //                         // {key:'0', value:  'Unknown'}]\n        //                 }\n        //                 label='Final verdict' \n        //                 defaultSelected={finalVerdict}\n        //                 onChange={handleFinalVerdictChange}\n        //             />\n        //         </>\n        //     )\n        // } else if (name === 'disease-gene')  \n        //     return (\n        //         <>\n        //             <DiseaseDropdown onChange={handleDiseaseChange} selected={diseases}/>\n        //             <GeneDropdown onChange={handleGeneChange} selected={genes}/>\n        //             <CustomSelect \n        //                 options={\n        //                     [\n        //                         //Do not know how to get the key value yet\n        //                         {key:'1', value: 'Confirmed'},\n        //                         {key:'9', value: 'Maybe'}]\n        //                         // {key:'0', value:  'Unknown'}]\n        //                 }\n        //                 label='Final verdict' \n        //                 defaultSelected={finalVerdict}\n        //                 onChange={handleFinalVerdictChange}\n        //             />\n        //         </>\n        //     )\n        // else if (name === 'syndrome-gene') {\n        //     return (\n        //         <>\n        //             <SyndromeDropdown onChange={handleSyndromeChange} selected={syndromes}/>\n        //             <GeneDropdown onChange={handleGeneChange} selected={genes}/>\n        //             <CustomSelect \n        //                 options={\n        //                     [\n        //                         //Do not know how to get the key value yet\n        //                         {key:'1', value: 'Confirmed'},\n        //                         {key:'9', value: 'Maybe'}]\n        //                         // {key:'0', value:  'Unknown'}]\n        //                 }\n        //                 label='Final verdict' \n        //                 defaultSelected={finalVerdict}\n        //                 onChange={handleFinalVerdictChange}\n        //             />\n        //         </>\n        //     )\n        // } else if (name === 'syndrome-organ') { \n        //     return (\n        //         <>\n        //             <SyndromeDropdown onChange={handleSyndromeChange} selected={syndromes}/>\n        //             <OrganDropdown onChange={handleOrganChange} selected={organs}/>\n        //             <CustomSelect \n        //                 options={\n        //                     [\n        //                         //Do not know how to get the key value yet\n        //                         {key:'1', value: 'Confirmed'},\n        //                         {key:'9', value: 'Maybe'}]\n        //                         // {key:'0', value:  'Unknown'}]\n        //                 }\n        //                 label='Final verdict' \n        //                 defaultSelected={finalVerdict}\n        //                 onChange={handleFinalVerdictChange}\n        //             />\n        //         </>\n        //     )\n        // } else if (name === 'syndrome-gene-organ') {\n        //     return (\n        //         <>\n        //             <GeneDropdown onChange={handleGeneChange} selected={genes}/>\n        //             <OrganDropdown onChange={handleOrganChange} selected={organs}/>\n        //             <CustomSelect \n        //                 options={\n        //                     [\n        //                         //Do not know how to get the key value yet\n        //                         {key:'1', value: 'Confirmed'},\n        //                         {key:'9', value: 'Maybe'}]\n        //                         // {key:'0', value:  'Unknown'}]\n        //                 }\n        //                 label='Final verdict' \n        //                 defaultSelected={finalVerdict}\n        //                 onChange={handleFinalVerdictChange}\n        //             />\n        //         </>\n        //     )\n        // } else {\n        //     return (\n        //         <></>\n        //     )\n        // }\n    }\n\n    return (\n        <>\n        <Main open={open}>        \n            <DrawerHeader />\n                <Filters \n                    name={name} \n                    genes={genes} \n                    organs={organs} \n                    diseases={diseases}\n                    finalVerdict={finalVerdict}\n                    onGeneChange={handleGeneChange}\n                    onOrganChange={handleOrganChange}\n                    onDiseaseChange={handleDiseaseChange}\n                    onSyndromeChange={handleSyndromeChange}\n                    onFinalVerdictChange={handleFinalVerdictChange}\n                />\n                <Paper \n                    id='graph-box'\n                    elevation={4}         \n                    sx={{ \n                        display: 'flex',\n                        margin: '2px',\n                        width:'100%',\n                        height: '100%',\n                        color: 'white',\n                    }}\n                >\n                    <BaseGraph \n                       drawerOpen={open}\n                        width={getWidth()}\n                        height={getHeight()}\n                        name={name}\n                        genes={genes}\n                        organs={organs}\n                        syndromes={syndromes}\n                        diseases={diseases}\n                        finalVerdict={finalVerdict}\n                        graphScheme={graphScheme}\n                        hover\n                        enableZoom={true}\n                    />\n                </Paper>\n        </Main>\n        <Drawer\n            sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            '& .MuiDrawer-paper': {\n                width: drawerWidth,\n            },\n            }}\n            variant=\"persistent\"\n            anchor=\"right\"\n            open={open}\n        >\n        <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n            </IconButton>\n        </DrawerHeader>\n        <Divider />\n            <Box \n                sx={{ width: drawerWidth, }}\n                role='presentation'\n            >\n                <DisplayPanel />\n                <Divider sx={{marginLeft:'8px', width:'95%'}} />\n                <Configuration graphScheme={graphScheme} onChange={handleConfiguationChange} /> \n            </Box>\n        </Drawer>\n    </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}