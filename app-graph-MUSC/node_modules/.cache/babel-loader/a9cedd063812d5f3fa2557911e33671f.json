{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\n\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\n\nvar StreamObserver =\n/** @class */\nfunction () {\n  function StreamObserver() {}\n\n  StreamObserver.prototype.onNext = function (rawRecord) {};\n\n  StreamObserver.prototype.onError = function (error) {};\n\n  StreamObserver.prototype.onCompleted = function (meta) {};\n\n  return StreamObserver;\n}();\n\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\n\nvar ResultStreamObserver =\n/** @class */\nfunction (_super) {\n  __extends(ResultStreamObserver, _super);\n  /**\n   *\n   * @param {Object} param\n   * @param {Object} param.server\n   * @param {boolean} param.reactive\n   * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n   * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n   * @param {number|Integer} param.fetchSize -\n   * @param {function(err: Error): Promise|void} param.beforeError -\n   * @param {function(err: Error): Promise|void} param.afterError -\n   * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n   * @param {function(keys: string[]): Promise|void} param.afterKeys -\n   * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n   * @param {function(metadata: Object): Promise|void} param.afterComplete -\n   */\n\n\n  function ResultStreamObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.reactive,\n        reactive = _c === void 0 ? false : _c,\n        moreFunction = _b.moreFunction,\n        discardFunction = _b.discardFunction,\n        _d = _b.fetchSize,\n        fetchSize = _d === void 0 ? FETCH_ALL : _d,\n        beforeError = _b.beforeError,\n        afterError = _b.afterError,\n        beforeKeys = _b.beforeKeys,\n        afterKeys = _b.afterKeys,\n        beforeComplete = _b.beforeComplete,\n        afterComplete = _b.afterComplete,\n        server = _b.server;\n\n    var _this = _super.call(this) || this;\n\n    _this._fieldKeys = null;\n    _this._fieldLookup = null;\n    _this._head = null;\n    _this._queuedRecords = [];\n    _this._tail = null;\n    _this._error = null;\n    _this._observers = [];\n    _this._meta = {};\n    _this._server = server;\n    _this._beforeError = beforeError;\n    _this._afterError = afterError;\n    _this._beforeKeys = beforeKeys;\n    _this._afterKeys = afterKeys;\n    _this._beforeComplete = beforeComplete;\n    _this._afterComplete = afterComplete;\n    _this._queryId = null;\n    _this._moreFunction = moreFunction;\n    _this._discardFunction = discardFunction;\n    _this._discard = false;\n    _this._fetchSize = fetchSize;\n\n    _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n\n    _this._setupAuoPull(fetchSize);\n\n    return _this;\n  }\n  /**\n   * Will be called on every record that comes in and transform a raw record\n   * to a Object. If user-provided observer is present, pass transformed record\n   * to it's onNext method, otherwise, push to record que.\n   * @param {Array} rawRecord - An array with the raw record\n   */\n\n\n  ResultStreamObserver.prototype.onNext = function (rawRecord) {\n    var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n\n    if (this._observers.some(function (o) {\n      return o.onNext;\n    })) {\n      this._observers.forEach(function (o) {\n        if (o.onNext) {\n          o.onNext(record);\n        }\n      });\n    } else {\n      this._queuedRecords.push(record);\n\n      if (this._queuedRecords.length > this._highRecordWatermark) {\n        this._autoPull = false;\n      }\n    }\n  };\n\n  ResultStreamObserver.prototype.onCompleted = function (meta) {\n    this._state.onSuccess(this, meta);\n  };\n  /**\n   * Will be called on errors.\n   * If user-provided observer is present, pass the error\n   * to it's onError method, otherwise set instance variable _error.\n   * @param {Object} error - An error object\n   */\n\n\n  ResultStreamObserver.prototype.onError = function (error) {\n    this._state.onError(this, error);\n  };\n  /**\n   * Cancel pending record stream\n   */\n\n\n  ResultStreamObserver.prototype.cancel = function () {\n    this._discard = true;\n  };\n  /**\n   * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n   * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n   *\n   * However, some operations can be represented as a single message which receives full metadata in a single response.\n   * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n   * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n   *\n   * This function prepares the observer to only handle a single response message.\n   */\n\n\n  ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n    this._head = [];\n    this._fieldKeys = [];\n\n    this._setState(_states.STREAMING);\n  };\n  /**\n   * Mark this observer as if it has completed with no metadata.\n   */\n\n\n  ResultStreamObserver.prototype.markCompleted = function () {\n    this._head = [];\n    this._fieldKeys = [];\n    this._tail = {};\n\n    this._setState(_states.SUCCEEDED);\n  };\n  /**\n   * Subscribe to events with provided observer.\n   * @param {Object} observer - Observer object\n   * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n   * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n   * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n   * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n   */\n\n\n  ResultStreamObserver.prototype.subscribe = function (observer) {\n    if (this._error) {\n      observer.onError(this._error);\n      return;\n    }\n\n    if (this._head && observer.onKeys) {\n      observer.onKeys(this._head);\n    }\n\n    if (this._queuedRecords.length > 0 && observer.onNext) {\n      for (var i = 0; i < this._queuedRecords.length; i++) {\n        observer.onNext(this._queuedRecords[i]);\n\n        if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n          this._autoPull = true;\n\n          if (this._state === _states.READY) {\n            this._handleStreaming();\n          }\n        }\n      }\n    }\n\n    if (this._tail && observer.onCompleted) {\n      observer.onCompleted(this._tail);\n    }\n\n    this._observers.push(observer);\n\n    if (this._state === _states.READY) {\n      this._handleStreaming();\n    }\n  };\n\n  ResultStreamObserver.prototype._handleHasMore = function (meta) {\n    // We've consumed current batch and server notified us that there're more\n    // records to stream. Let's invoke more or discard function based on whether\n    // the user wants to discard streaming or not\n    this._setState(_states.READY); // we've done streaming\n\n\n    this._handleStreaming();\n\n    delete meta.has_more;\n  };\n\n  ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n    var _this = this;\n\n    this._setState(_states.SUCCEEDED);\n\n    var completionMetadata = Object.assign(this._server ? {\n      server: this._server\n    } : {}, this._meta, meta);\n    var beforeHandlerResult = null;\n\n    if (this._beforeComplete) {\n      beforeHandlerResult = this._beforeComplete(completionMetadata);\n    }\n\n    var continuation = function () {\n      // End of stream\n      _this._tail = completionMetadata;\n\n      if (_this._observers.some(function (o) {\n        return o.onCompleted;\n      })) {\n        _this._observers.forEach(function (o) {\n          if (o.onCompleted) {\n            o.onCompleted(completionMetadata);\n          }\n        });\n      }\n\n      if (_this._afterComplete) {\n        _this._afterComplete(completionMetadata);\n      }\n    };\n\n    if (beforeHandlerResult) {\n      Promise.resolve(beforeHandlerResult).then(function () {\n        return continuation();\n      });\n    } else {\n      continuation();\n    }\n  };\n\n  ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n    var _this = this;\n\n    if (this._fieldKeys === null) {\n      // Stream header, build a name->index field lookup table\n      // to be used by records. This is an optimization to make it\n      // faster to look up fields in a record by name, rather than by index.\n      // Since the records we get back via Bolt are just arrays of values.\n      this._fieldKeys = [];\n      this._fieldLookup = {};\n\n      if (meta.fields && meta.fields.length > 0) {\n        this._fieldKeys = meta.fields;\n\n        for (var i = 0; i < meta.fields.length; i++) {\n          this._fieldLookup[meta.fields[i]] = i;\n        } // remove fields key from metadata object\n\n\n        delete meta.fields;\n      } // Extract server generated query id for use in requestMore and discard\n      // functions\n\n\n      if (meta.qid !== null && meta.qid !== undefined) {\n        this._queryId = meta.qid; // remove qid from metadata object\n\n        delete meta.qid;\n      }\n\n      this._storeMetadataForCompletion(meta);\n\n      var beforeHandlerResult = null;\n\n      if (this._beforeKeys) {\n        beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n      }\n\n      var continuation_1 = function () {\n        _this._head = _this._fieldKeys;\n\n        if (_this._observers.some(function (o) {\n          return o.onKeys;\n        })) {\n          _this._observers.forEach(function (o) {\n            if (o.onKeys) {\n              o.onKeys(_this._fieldKeys);\n            }\n          });\n        }\n\n        if (_this._afterKeys) {\n          _this._afterKeys(_this._fieldKeys);\n        }\n\n        afterSuccess();\n      };\n\n      if (beforeHandlerResult) {\n        Promise.resolve(beforeHandlerResult).then(function () {\n          return continuation_1();\n        });\n      } else {\n        continuation_1();\n      }\n    }\n  };\n\n  ResultStreamObserver.prototype._handleError = function (error) {\n    var _this = this;\n\n    this._setState(_states.FAILED);\n\n    this._error = error;\n    var beforeHandlerResult = null;\n\n    if (this._beforeError) {\n      beforeHandlerResult = this._beforeError(error);\n    }\n\n    var continuation = function () {\n      if (_this._observers.some(function (o) {\n        return o.onError;\n      })) {\n        _this._observers.forEach(function (o) {\n          if (o.onError) {\n            o.onError(error);\n          }\n        });\n      }\n\n      if (_this._afterError) {\n        _this._afterError(error);\n      }\n    };\n\n    if (beforeHandlerResult) {\n      Promise.resolve(beforeHandlerResult).then(function () {\n        return continuation();\n      });\n    } else {\n      continuation();\n    }\n  };\n\n  ResultStreamObserver.prototype._handleStreaming = function () {\n    if (this._head && this._observers.some(function (o) {\n      return o.onNext || o.onCompleted;\n    })) {\n      if (this._discard) {\n        this._discardFunction(this._queryId, this);\n\n        this._setState(_states.STREAMING);\n      } else if (this._autoPull) {\n        this._moreFunction(this._queryId, this._fetchSize, this);\n\n        this._setState(_states.STREAMING);\n      }\n    }\n  };\n\n  ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n    var keys = Object.keys(meta);\n    var index = keys.length;\n    var key = '';\n\n    while (index--) {\n      key = keys[index];\n      this._meta[key] = meta[key];\n    }\n  };\n\n  ResultStreamObserver.prototype._setState = function (state) {\n    this._state = state;\n  };\n\n  ResultStreamObserver.prototype._setupAuoPull = function (fetchSize) {\n    this._autoPull = true;\n\n    if (fetchSize === FETCH_ALL) {\n      this._lowRecordWatermark = Number.MAX_VALUE; // we shall always lower than this number to enable auto pull\n\n      this._highRecordWatermark = Number.MAX_VALUE; // we shall never reach this number to disable auto pull\n    } else {\n      this._lowRecordWatermark = 0.3 * fetchSize;\n      this._highRecordWatermark = 0.7 * fetchSize;\n    }\n  };\n\n  return ResultStreamObserver;\n}(StreamObserver);\n\nexports.ResultStreamObserver = ResultStreamObserver;\n\nvar LoginObserver =\n/** @class */\nfunction (_super) {\n  __extends(LoginObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onCompleted\n   */\n\n\n  function LoginObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        onError = _b.onError,\n        onCompleted = _b.onCompleted;\n\n    var _this = _super.call(this) || this;\n\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n\n  LoginObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n  };\n\n  LoginObserver.prototype.onError = function (error) {\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  LoginObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(metadata);\n    }\n  };\n\n  return LoginObserver;\n}(StreamObserver);\n\nexports.LoginObserver = LoginObserver;\n\nvar ResetObserver =\n/** @class */\nfunction (_super) {\n  __extends(ResetObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: String)} param.onProtocolError\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onComplete\n   */\n\n\n  function ResetObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        onProtocolError = _b.onProtocolError,\n        onError = _b.onError,\n        onComplete = _b.onComplete;\n\n    var _this = _super.call(this) || this;\n\n    _this._onProtocolError = onProtocolError;\n    _this._onError = onError;\n    _this._onComplete = onComplete;\n    return _this;\n  }\n\n  ResetObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n\n  ResetObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  ResetObserver.prototype.onCompleted = function (metadata) {\n    if (this._onComplete) {\n      this._onComplete(metadata);\n    }\n  };\n\n  return ResetObserver;\n}(StreamObserver);\n\nexports.ResetObserver = ResetObserver;\n\nvar FailedObserver =\n/** @class */\nfunction (_super) {\n  __extends(FailedObserver, _super);\n\n  function FailedObserver(_a) {\n    var error = _a.error,\n        onError = _a.onError;\n\n    var _this = _super.call(this, {\n      beforeError: onError\n    }) || this;\n\n    _this.onError(error);\n\n    return _this;\n  }\n\n  return FailedObserver;\n}(ResultStreamObserver);\n\nexports.FailedObserver = FailedObserver;\n\nvar CompletedObserver =\n/** @class */\nfunction (_super) {\n  __extends(CompletedObserver, _super);\n\n  function CompletedObserver() {\n    var _this = _super.call(this) || this;\n\n    _super.prototype.markCompleted.call(_this);\n\n    return _this;\n  }\n\n  return CompletedObserver;\n}(ResultStreamObserver);\n\nexports.CompletedObserver = CompletedObserver;\n\nvar ProcedureRouteObserver =\n/** @class */\nfunction (_super) {\n  __extends(ProcedureRouteObserver, _super);\n\n  function ProcedureRouteObserver(_a) {\n    var resultObserver = _a.resultObserver,\n        onProtocolError = _a.onProtocolError,\n        onError = _a.onError,\n        onCompleted = _a.onCompleted;\n\n    var _this = _super.call(this) || this;\n\n    _this._resultObserver = resultObserver;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    _this._records = [];\n    _this._onProtocolError = onProtocolError;\n    resultObserver.subscribe(_this);\n    return _this;\n  }\n\n  ProcedureRouteObserver.prototype.onNext = function (record) {\n    this._records.push(record);\n  };\n\n  ProcedureRouteObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  ProcedureRouteObserver.prototype.onCompleted = function () {\n    if (this._records !== null && this._records.length !== 1) {\n      this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' + this._records.length + ' records but expected only one.\\n' + neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n      return;\n    }\n\n    if (this._onCompleted) {\n      this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n    }\n  };\n\n  return ProcedureRouteObserver;\n}(StreamObserver);\n\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\n\nvar RouteObserver =\n/** @class */\nfunction (_super) {\n  __extends(RouteObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: String)} param.onProtocolError\n   * @param {function(err: Error)} param.onError\n   * @param {function(RawRoutingTable)} param.onCompleted\n   */\n\n\n  function RouteObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        onProtocolError = _b.onProtocolError,\n        onError = _b.onError,\n        onCompleted = _b.onCompleted;\n\n    var _this = _super.call(this) || this;\n\n    _this._onProtocolError = onProtocolError;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n\n  RouteObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n\n  RouteObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  RouteObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n    }\n  };\n\n  return RouteObserver;\n}(StreamObserver);\n\nexports.RouteObserver = RouteObserver;\nvar _states = {\n  READY_STREAMING: {\n    // async start state\n    onSuccess: function (streamObserver, meta) {\n      streamObserver._handleRunSuccess(meta, function () {\n        streamObserver._setState(_states.STREAMING);\n      } // after run succeeded, async directly move to streaming\n      // state\n      );\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'READY_STREAMING';\n    }\n  },\n  READY: {\n    // reactive start state\n    onSuccess: function (streamObserver, meta) {\n      streamObserver._handleRunSuccess(meta, function () {\n        return streamObserver._handleStreaming();\n      } // after run succeeded received, reactive shall start pulling\n      );\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'READY';\n    }\n  },\n  STREAMING: {\n    onSuccess: function (streamObserver, meta) {\n      if (meta.has_more) {\n        streamObserver._handleHasMore(meta);\n      } else {\n        streamObserver._handlePullSuccess(meta);\n      }\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'STREAMING';\n    }\n  },\n  FAILED: {\n    onError: function (error) {// more errors are ignored\n    },\n    name: function () {\n      return 'FAILED';\n    }\n  },\n  SUCCEEDED: {\n    name: function () {\n      return 'SUCCEEDED';\n    }\n  }\n};","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","ProcedureRouteObserver","RouteObserver","CompletedObserver","FailedObserver","ResetObserver","LoginObserver","ResultStreamObserver","StreamObserver","neo4j_driver_core_1","require","routing_table_raw_1","FETCH_ALL","internal","constants","PROTOCOL_ERROR","error","onNext","rawRecord","onError","onCompleted","meta","_super","_a","_b","_c","reactive","moreFunction","discardFunction","_d","fetchSize","beforeError","afterError","beforeKeys","afterKeys","beforeComplete","afterComplete","server","_this","_fieldKeys","_fieldLookup","_head","_queuedRecords","_tail","_error","_observers","_meta","_server","_beforeError","_afterError","_beforeKeys","_afterKeys","_beforeComplete","_afterComplete","_queryId","_moreFunction","_discardFunction","_discard","_fetchSize","_setState","_states","READY","READY_STREAMING","_setupAuoPull","record","Record","some","o","forEach","push","length","_highRecordWatermark","_autoPull","_state","onSuccess","cancel","prepareToHandleSingleResponse","STREAMING","markCompleted","SUCCEEDED","subscribe","observer","onKeys","i","_lowRecordWatermark","_handleStreaming","_handleHasMore","has_more","_handlePullSuccess","completionMetadata","assign","beforeHandlerResult","continuation","Promise","resolve","then","_handleRunSuccess","afterSuccess","fields","qid","undefined","_storeMetadataForCompletion","continuation_1","_handleError","FAILED","keys","index","key","state","Number","MAX_VALUE","_onError","_onCompleted","newError","json","stringify","metadata","onProtocolError","onComplete","_onProtocolError","_onComplete","code","message","resultObserver","_resultObserver","_records","default","ofRecord","ofMessageResponse","streamObserver","name"],"sources":["/Users/zack/src/gene-graph-MUSC/node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar StreamObserver = /** @class */ (function () {\n    function StreamObserver() {\n    }\n    StreamObserver.prototype.onNext = function (rawRecord) { };\n    StreamObserver.prototype.onError = function (error) { };\n    StreamObserver.prototype.onCompleted = function (meta) { };\n    return StreamObserver;\n}());\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\nvar ResultStreamObserver = /** @class */ (function (_super) {\n    __extends(ResultStreamObserver, _super);\n    /**\n     *\n     * @param {Object} param\n     * @param {Object} param.server\n     * @param {boolean} param.reactive\n     * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n     * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n     * @param {number|Integer} param.fetchSize -\n     * @param {function(err: Error): Promise|void} param.beforeError -\n     * @param {function(err: Error): Promise|void} param.afterError -\n     * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n     * @param {function(keys: string[]): Promise|void} param.afterKeys -\n     * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n     * @param {function(metadata: Object): Promise|void} param.afterComplete -\n     */\n    function ResultStreamObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.reactive, reactive = _c === void 0 ? false : _c, moreFunction = _b.moreFunction, discardFunction = _b.discardFunction, _d = _b.fetchSize, fetchSize = _d === void 0 ? FETCH_ALL : _d, beforeError = _b.beforeError, afterError = _b.afterError, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, server = _b.server;\n        var _this = _super.call(this) || this;\n        _this._fieldKeys = null;\n        _this._fieldLookup = null;\n        _this._head = null;\n        _this._queuedRecords = [];\n        _this._tail = null;\n        _this._error = null;\n        _this._observers = [];\n        _this._meta = {};\n        _this._server = server;\n        _this._beforeError = beforeError;\n        _this._afterError = afterError;\n        _this._beforeKeys = beforeKeys;\n        _this._afterKeys = afterKeys;\n        _this._beforeComplete = beforeComplete;\n        _this._afterComplete = afterComplete;\n        _this._queryId = null;\n        _this._moreFunction = moreFunction;\n        _this._discardFunction = discardFunction;\n        _this._discard = false;\n        _this._fetchSize = fetchSize;\n        _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n        _this._setupAuoPull(fetchSize);\n        return _this;\n    }\n    /**\n     * Will be called on every record that comes in and transform a raw record\n     * to a Object. If user-provided observer is present, pass transformed record\n     * to it's onNext method, otherwise, push to record que.\n     * @param {Array} rawRecord - An array with the raw record\n     */\n    ResultStreamObserver.prototype.onNext = function (rawRecord) {\n        var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n        if (this._observers.some(function (o) { return o.onNext; })) {\n            this._observers.forEach(function (o) {\n                if (o.onNext) {\n                    o.onNext(record);\n                }\n            });\n        }\n        else {\n            this._queuedRecords.push(record);\n            if (this._queuedRecords.length > this._highRecordWatermark) {\n                this._autoPull = false;\n            }\n        }\n    };\n    ResultStreamObserver.prototype.onCompleted = function (meta) {\n        this._state.onSuccess(this, meta);\n    };\n    /**\n     * Will be called on errors.\n     * If user-provided observer is present, pass the error\n     * to it's onError method, otherwise set instance variable _error.\n     * @param {Object} error - An error object\n     */\n    ResultStreamObserver.prototype.onError = function (error) {\n        this._state.onError(this, error);\n    };\n    /**\n     * Cancel pending record stream\n     */\n    ResultStreamObserver.prototype.cancel = function () {\n        this._discard = true;\n    };\n    /**\n     * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n     * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n     *\n     * However, some operations can be represented as a single message which receives full metadata in a single response.\n     * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n     * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n     *\n     * This function prepares the observer to only handle a single response message.\n     */\n    ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._setState(_states.STREAMING);\n    };\n    /**\n     * Mark this observer as if it has completed with no metadata.\n     */\n    ResultStreamObserver.prototype.markCompleted = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._tail = {};\n        this._setState(_states.SUCCEEDED);\n    };\n    /**\n     * Subscribe to events with provided observer.\n     * @param {Object} observer - Observer object\n     * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n     * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n     * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n     * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n     */\n    ResultStreamObserver.prototype.subscribe = function (observer) {\n        if (this._error) {\n            observer.onError(this._error);\n            return;\n        }\n        if (this._head && observer.onKeys) {\n            observer.onKeys(this._head);\n        }\n        if (this._queuedRecords.length > 0 && observer.onNext) {\n            for (var i = 0; i < this._queuedRecords.length; i++) {\n                observer.onNext(this._queuedRecords[i]);\n                if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n                    this._autoPull = true;\n                    if (this._state === _states.READY) {\n                        this._handleStreaming();\n                    }\n                }\n            }\n        }\n        if (this._tail && observer.onCompleted) {\n            observer.onCompleted(this._tail);\n        }\n        this._observers.push(observer);\n        if (this._state === _states.READY) {\n            this._handleStreaming();\n        }\n    };\n    ResultStreamObserver.prototype._handleHasMore = function (meta) {\n        // We've consumed current batch and server notified us that there're more\n        // records to stream. Let's invoke more or discard function based on whether\n        // the user wants to discard streaming or not\n        this._setState(_states.READY); // we've done streaming\n        this._handleStreaming();\n        delete meta.has_more;\n    };\n    ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n        var _this = this;\n        this._setState(_states.SUCCEEDED);\n        var completionMetadata = Object.assign(this._server ? { server: this._server } : {}, this._meta, meta);\n        var beforeHandlerResult = null;\n        if (this._beforeComplete) {\n            beforeHandlerResult = this._beforeComplete(completionMetadata);\n        }\n        var continuation = function () {\n            // End of stream\n            _this._tail = completionMetadata;\n            if (_this._observers.some(function (o) { return o.onCompleted; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onCompleted) {\n                        o.onCompleted(completionMetadata);\n                    }\n                });\n            }\n            if (_this._afterComplete) {\n                _this._afterComplete(completionMetadata);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n        var _this = this;\n        if (this._fieldKeys === null) {\n            // Stream header, build a name->index field lookup table\n            // to be used by records. This is an optimization to make it\n            // faster to look up fields in a record by name, rather than by index.\n            // Since the records we get back via Bolt are just arrays of values.\n            this._fieldKeys = [];\n            this._fieldLookup = {};\n            if (meta.fields && meta.fields.length > 0) {\n                this._fieldKeys = meta.fields;\n                for (var i = 0; i < meta.fields.length; i++) {\n                    this._fieldLookup[meta.fields[i]] = i;\n                }\n                // remove fields key from metadata object\n                delete meta.fields;\n            }\n            // Extract server generated query id for use in requestMore and discard\n            // functions\n            if (meta.qid !== null && meta.qid !== undefined) {\n                this._queryId = meta.qid;\n                // remove qid from metadata object\n                delete meta.qid;\n            }\n            this._storeMetadataForCompletion(meta);\n            var beforeHandlerResult = null;\n            if (this._beforeKeys) {\n                beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n            }\n            var continuation_1 = function () {\n                _this._head = _this._fieldKeys;\n                if (_this._observers.some(function (o) { return o.onKeys; })) {\n                    _this._observers.forEach(function (o) {\n                        if (o.onKeys) {\n                            o.onKeys(_this._fieldKeys);\n                        }\n                    });\n                }\n                if (_this._afterKeys) {\n                    _this._afterKeys(_this._fieldKeys);\n                }\n                afterSuccess();\n            };\n            if (beforeHandlerResult) {\n                Promise.resolve(beforeHandlerResult).then(function () { return continuation_1(); });\n            }\n            else {\n                continuation_1();\n            }\n        }\n    };\n    ResultStreamObserver.prototype._handleError = function (error) {\n        var _this = this;\n        this._setState(_states.FAILED);\n        this._error = error;\n        var beforeHandlerResult = null;\n        if (this._beforeError) {\n            beforeHandlerResult = this._beforeError(error);\n        }\n        var continuation = function () {\n            if (_this._observers.some(function (o) { return o.onError; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onError) {\n                        o.onError(error);\n                    }\n                });\n            }\n            if (_this._afterError) {\n                _this._afterError(error);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleStreaming = function () {\n        if (this._head && this._observers.some(function (o) { return o.onNext || o.onCompleted; })) {\n            if (this._discard) {\n                this._discardFunction(this._queryId, this);\n                this._setState(_states.STREAMING);\n            }\n            else if (this._autoPull) {\n                this._moreFunction(this._queryId, this._fetchSize, this);\n                this._setState(_states.STREAMING);\n            }\n        }\n    };\n    ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n        var keys = Object.keys(meta);\n        var index = keys.length;\n        var key = '';\n        while (index--) {\n            key = keys[index];\n            this._meta[key] = meta[key];\n        }\n    };\n    ResultStreamObserver.prototype._setState = function (state) {\n        this._state = state;\n    };\n    ResultStreamObserver.prototype._setupAuoPull = function (fetchSize) {\n        this._autoPull = true;\n        if (fetchSize === FETCH_ALL) {\n            this._lowRecordWatermark = Number.MAX_VALUE; // we shall always lower than this number to enable auto pull\n            this._highRecordWatermark = Number.MAX_VALUE; // we shall never reach this number to disable auto pull\n        }\n        else {\n            this._lowRecordWatermark = 0.3 * fetchSize;\n            this._highRecordWatermark = 0.7 * fetchSize;\n        }\n    };\n    return ResultStreamObserver;\n}(StreamObserver));\nexports.ResultStreamObserver = ResultStreamObserver;\nvar LoginObserver = /** @class */ (function (_super) {\n    __extends(LoginObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function LoginObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    LoginObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n    };\n    LoginObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    LoginObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return LoginObserver;\n}(StreamObserver));\nexports.LoginObserver = LoginObserver;\nvar ResetObserver = /** @class */ (function (_super) {\n    __extends(ResetObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onComplete\n     */\n    function ResetObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onComplete = _b.onComplete;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onComplete = onComplete;\n        return _this;\n    }\n    ResetObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    ResetObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ResetObserver.prototype.onCompleted = function (metadata) {\n        if (this._onComplete) {\n            this._onComplete(metadata);\n        }\n    };\n    return ResetObserver;\n}(StreamObserver));\nexports.ResetObserver = ResetObserver;\nvar FailedObserver = /** @class */ (function (_super) {\n    __extends(FailedObserver, _super);\n    function FailedObserver(_a) {\n        var error = _a.error, onError = _a.onError;\n        var _this = _super.call(this, { beforeError: onError }) || this;\n        _this.onError(error);\n        return _this;\n    }\n    return FailedObserver;\n}(ResultStreamObserver));\nexports.FailedObserver = FailedObserver;\nvar CompletedObserver = /** @class */ (function (_super) {\n    __extends(CompletedObserver, _super);\n    function CompletedObserver() {\n        var _this = _super.call(this) || this;\n        _super.prototype.markCompleted.call(_this);\n        return _this;\n    }\n    return CompletedObserver;\n}(ResultStreamObserver));\nexports.CompletedObserver = CompletedObserver;\nvar ProcedureRouteObserver = /** @class */ (function (_super) {\n    __extends(ProcedureRouteObserver, _super);\n    function ProcedureRouteObserver(_a) {\n        var resultObserver = _a.resultObserver, onProtocolError = _a.onProtocolError, onError = _a.onError, onCompleted = _a.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._resultObserver = resultObserver;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        _this._records = [];\n        _this._onProtocolError = onProtocolError;\n        resultObserver.subscribe(_this);\n        return _this;\n    }\n    ProcedureRouteObserver.prototype.onNext = function (record) {\n        this._records.push(record);\n    };\n    ProcedureRouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ProcedureRouteObserver.prototype.onCompleted = function () {\n        if (this._records !== null && this._records.length !== 1) {\n            this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' +\n                this._records.length +\n                ' records but expected only one.\\n' +\n                neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n            return;\n        }\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n        }\n    };\n    return ProcedureRouteObserver;\n}(StreamObserver));\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\nvar RouteObserver = /** @class */ (function (_super) {\n    __extends(RouteObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(RawRoutingTable)} param.onCompleted\n     */\n    function RouteObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    RouteObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    RouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    RouteObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n        }\n    };\n    return RouteObserver;\n}(StreamObserver));\nexports.RouteObserver = RouteObserver;\nvar _states = {\n    READY_STREAMING: {\n        // async start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () {\n                streamObserver._setState(_states.STREAMING);\n            } // after run succeeded, async directly move to streaming\n            // state\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY_STREAMING';\n        }\n    },\n    READY: {\n        // reactive start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () { return streamObserver._handleStreaming(); } // after run succeeded received, reactive shall start pulling\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY';\n        }\n    },\n    STREAMING: {\n        onSuccess: function (streamObserver, meta) {\n            if (meta.has_more) {\n                streamObserver._handleHasMore(meta);\n            }\n            else {\n                streamObserver._handlePullSuccess(meta);\n            }\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'STREAMING';\n        }\n    },\n    FAILED: {\n        onError: function (error) {\n            // more errors are ignored\n        },\n        name: function () {\n            return 'FAILED';\n        }\n    },\n    SUCCEEDED: {\n        name: function () {\n            return 'SUCCEEDED';\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}