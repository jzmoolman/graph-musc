{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar channel_buf_1 = __importDefault(require(\"../channel-buf\"));\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar _a = neo4j_driver_core_1.internal.util,\n    ENCRYPTION_OFF = _a.ENCRYPTION_OFF,\n    ENCRYPTION_ON = _a.ENCRYPTION_ON; // Just to be sure that these values are with us even after WebSocket is injected\n// for tests.\n\nvar WS_CONNECTING = 0;\nvar WS_OPEN = 1;\nvar WS_CLOSING = 2;\nvar WS_CLOSED = 3;\n/**\n * Create a new WebSocketChannel to be used in web browsers.\n * @access private\n */\n\nvar WebSocketChannel =\n/** @class */\nfunction () {\n  /**\n   * Create new instance\n   * @param {ChannelConfig} config - configuration for this channel.\n   * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\n   */\n  function WebSocketChannel(config, protocolSupplier, socketFactory) {\n    if (protocolSupplier === void 0) {\n      protocolSupplier = detectWebPageProtocol;\n    }\n\n    if (socketFactory === void 0) {\n      socketFactory = function (url) {\n        return new WebSocket(url);\n      };\n    }\n\n    this._open = true;\n    this._pending = [];\n    this._error = null;\n    this._handleConnectionError = this._handleConnectionError.bind(this);\n    this._config = config;\n\n    var _a = determineWebSocketScheme(config, protocolSupplier),\n        scheme = _a.scheme,\n        error = _a.error;\n\n    if (error) {\n      this._error = error;\n      return;\n    }\n\n    this._ws = createWebSocket(scheme, config.address, socketFactory);\n    this._ws.binaryType = 'arraybuffer';\n    var self = this; // All connection errors are not sent to the error handler\n    // we must also check for dirty close calls\n\n    this._ws.onclose = function (e) {\n      if (e && !e.wasClean) {\n        self._handleConnectionError();\n      }\n\n      self._open = false;\n    };\n\n    this._ws.onopen = function () {\n      // Connected! Cancel the connection timeout\n      self._clearConnectionTimeout(); // Drain all pending messages\n\n\n      var pending = self._pending;\n      self._pending = null;\n\n      for (var i = 0; i < pending.length; i++) {\n        self.write(pending[i]);\n      }\n    };\n\n    this._ws.onmessage = function (event) {\n      if (self.onmessage) {\n        var b = new channel_buf_1.default(event.data);\n        self.onmessage(b);\n      }\n    };\n\n    this._ws.onerror = this._handleConnectionError;\n    this._connectionTimeoutFired = false;\n    this._connectionTimeoutId = this._setupConnectionTimeout();\n  }\n\n  WebSocketChannel.prototype._handleConnectionError = function () {\n    if (this._connectionTimeoutFired) {\n      // timeout fired - not connected within configured time\n      this._error = (0, neo4j_driver_core_1.newError)(\"Failed to establish connection in \" + this._config.connectionTimeout + \"ms\", this._config.connectionErrorCode);\n\n      if (this.onerror) {\n        this.onerror(this._error);\n      }\n\n      return;\n    } // onerror triggers on websocket close as well.. don't get me started.\n\n\n    if (this._open) {\n      // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\n      this._error = (0, neo4j_driver_core_1.newError)('WebSocket connection failure. Due to security ' + 'constraints in your web browser, the reason for the failure is not available ' + 'to this Neo4j Driver. Please use your browsers development console to determine ' + 'the root cause of the failure. Common reasons include the database being ' + 'unavailable, using the wrong connection URL or temporary network problems. ' + 'If you have enabled encryption, ensure your browser is configured to trust the ' + 'certificate Neo4j is configured to use. WebSocket `readyState` is: ' + this._ws.readyState, this._config.connectionErrorCode);\n\n      if (this.onerror) {\n        this.onerror(this._error);\n      }\n    }\n  };\n  /**\n   * Write the passed in buffer to connection\n   * @param {ChannelBuffer} buffer - Buffer to write\n   */\n\n\n  WebSocketChannel.prototype.write = function (buffer) {\n    // If there is a pending queue, push this on that queue. This means\n    // we are not yet connected, so we queue things locally.\n    if (this._pending !== null) {\n      this._pending.push(buffer);\n    } else if (buffer instanceof channel_buf_1.default) {\n      try {\n        this._ws.send(buffer._buffer);\n      } catch (error) {\n        if (this._ws.readyState !== WS_OPEN) {\n          // Websocket has been closed\n          this._handleConnectionError();\n        } else {\n          // Some other error occured\n          throw error;\n        }\n      }\n    } else {\n      throw (0, neo4j_driver_core_1.newError)(\"Don't know how to send buffer: \" + buffer);\n    }\n  };\n  /**\n   * Close the connection\n   * @returns {Promise} A promise that will be resolved after channel is closed\n   */\n\n\n  WebSocketChannel.prototype.close = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\n        _this._open = false;\n\n        _this._clearConnectionTimeout();\n\n        _this._ws.onclose = function () {\n          return resolve();\n        };\n\n        _this._ws.close();\n      } else {\n        resolve();\n      }\n    });\n  };\n  /**\n   * Setup the receive timeout for the channel.\n   *\n   * Not supported for the browser channel.\n   *\n   * @param {number} receiveTimeout The amount of time the channel will keep without receive any data before timeout (ms)\n   * @returns {void}\n   */\n\n\n  WebSocketChannel.prototype.setupReceiveTimeout = function (receiveTimeout) {};\n  /**\n   * Stops the receive timeout for the channel.\n   */\n\n\n  WebSocketChannel.prototype.stopReceiveTimeout = function () {};\n  /**\n   * Start the receive timeout for the channel.\n   */\n\n\n  WebSocketChannel.prototype.startReceiveTimeout = function () {};\n  /**\n   * Set connection timeout on the given WebSocket, if configured.\n   * @return {number} the timeout id or null.\n   * @private\n   */\n\n\n  WebSocketChannel.prototype._setupConnectionTimeout = function () {\n    var _this = this;\n\n    var timeout = this._config.connectionTimeout;\n\n    if (timeout) {\n      var webSocket_1 = this._ws;\n      return setTimeout(function () {\n        if (webSocket_1.readyState !== WS_OPEN) {\n          _this._connectionTimeoutFired = true;\n          webSocket_1.close();\n        }\n      }, timeout);\n    }\n\n    return null;\n  };\n  /**\n   * Remove active connection timeout, if any.\n   * @private\n   */\n\n\n  WebSocketChannel.prototype._clearConnectionTimeout = function () {\n    var timeoutId = this._connectionTimeoutId;\n\n    if (timeoutId || timeoutId === 0) {\n      this._connectionTimeoutFired = false;\n      this._connectionTimeoutId = null;\n      clearTimeout(timeoutId);\n    }\n  };\n\n  return WebSocketChannel;\n}();\n\nexports.default = WebSocketChannel;\n\nfunction createWebSocket(scheme, address, socketFactory) {\n  var url = scheme + '://' + address.asHostPort();\n\n  try {\n    return socketFactory(url);\n  } catch (error) {\n    if (isIPv6AddressIssueOnWindows(error, address)) {\n      // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\n      // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\n      // and Windows requires IPv6 to be changes in the following way:\n      //   1) replace all ':' with '-'\n      //   2) replace '%' with 's' for link-local address\n      //   3) append '.ipv6-literal.net' suffix\n      // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\n      // For more details see:\n      //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\n      //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\n      // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\n      // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\n      var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\n      return socketFactory(windowsFriendlyUrl);\n    } else {\n      throw error;\n    }\n  }\n}\n\nfunction isIPv6AddressIssueOnWindows(error, address) {\n  return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\n}\n\nfunction isIPv6Address(hostAndPort) {\n  return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\n}\n\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\n  // replace all ':' with '-'\n  var hostWithoutColons = address.host().replace(new RegExp(':', 'g'), '-'); // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\n\n  var hostWithoutPercent = hostWithoutColons.replace('%', 's'); // append magic '.ipv6-literal.net' suffix\n\n  var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\n  return scheme + \"://\" + ipv6Host + \":\" + address.port();\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\n */\n\n\nfunction determineWebSocketScheme(config, protocolSupplier) {\n  var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\n  var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\n  var trust = config.trust;\n  var secureProtocol = isProtocolSecure(protocolSupplier);\n  verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\n\n  if (encryptionOff) {\n    // encryption explicitly turned off in the config\n    return {\n      scheme: 'ws',\n      error: null\n    };\n  }\n\n  if (secureProtocol) {\n    // driver is used in a secure https web page, use 'wss'\n    return {\n      scheme: 'wss',\n      error: null\n    };\n  }\n\n  if (encryptionOn) {\n    // encryption explicitly requested in the config\n    if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\n      // trust strategy not specified or the only supported strategy is specified\n      return {\n        scheme: 'wss',\n        error: null\n      };\n    } else {\n      var error = (0, neo4j_driver_core_1.newError)('The browser version of this driver only supports one trust ' + \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" + trust + ' is not supported. Please ' + 'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' + '`encrypted:\"' + ENCRYPTION_OFF + '\"` in the driver configuration.');\n      return {\n        scheme: null,\n        error: error\n      };\n    }\n  } // default to unencrypted web socket\n\n\n  return {\n    scheme: 'ws',\n    error: null\n  };\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\n */\n\n\nfunction isEncryptionExplicitlyTurnedOn(config) {\n  return config.encrypted === true || config.encrypted === ENCRYPTION_ON;\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\n */\n\n\nfunction isEncryptionExplicitlyTurnedOff(config) {\n  return config.encrypted === false || config.encrypted === ENCRYPTION_OFF;\n}\n/**\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\n */\n\n\nfunction isProtocolSecure(protocolSupplier) {\n  var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\n  return protocol && protocol.toLowerCase().indexOf('https') >= 0;\n}\n\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\n  if (secureProtocol === null) {// do nothing sice the protocol could not be identified\n  } else if (encryptionOn && !secureProtocol) {\n    // encryption explicitly turned on for a driver used on a HTTP web page\n    console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to not use encryption.');\n  } else if (encryptionOff && secureProtocol) {\n    // encryption explicitly turned off for a driver used on a HTTPS web page\n    console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to use encryption.');\n  }\n}\n\nfunction detectWebPageProtocol() {\n  return typeof window !== 'undefined' && window.location ? window.location.protocol : null;\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","channel_buf_1","require","neo4j_driver_core_1","_a","internal","util","ENCRYPTION_OFF","ENCRYPTION_ON","WS_CONNECTING","WS_OPEN","WS_CLOSING","WS_CLOSED","WebSocketChannel","config","protocolSupplier","socketFactory","detectWebPageProtocol","url","WebSocket","_open","_pending","_error","_handleConnectionError","bind","_config","determineWebSocketScheme","scheme","error","_ws","createWebSocket","address","binaryType","self","onclose","e","wasClean","onopen","_clearConnectionTimeout","pending","i","length","write","onmessage","event","b","default","data","onerror","_connectionTimeoutFired","_connectionTimeoutId","_setupConnectionTimeout","prototype","newError","connectionTimeout","connectionErrorCode","readyState","buffer","push","send","_buffer","close","_this","Promise","resolve","reject","setupReceiveTimeout","receiveTimeout","stopReceiveTimeout","startReceiveTimeout","timeout","webSocket_1","setTimeout","timeoutId","clearTimeout","asHostPort","isIPv6AddressIssueOnWindows","windowsFriendlyUrl","asWindowsFriendlyIPv6Address","name","isIPv6Address","hostAndPort","charAt","indexOf","hostWithoutColons","host","replace","RegExp","hostWithoutPercent","ipv6Host","port","encryptionOn","isEncryptionExplicitlyTurnedOn","encryptionOff","isEncryptionExplicitlyTurnedOff","trust","secureProtocol","isProtocolSecure","verifyEncryptionSettings","encrypted","protocol","toLowerCase","console","warn","window","location"],"sources":["/Users/zack/src/gene-graph-MUSC/node_modules/neo4j-driver-bolt-connection/lib/channel/browser/browser-channel.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_buf_1 = __importDefault(require(\"../channel-buf\"));\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_OFF = _a.ENCRYPTION_OFF, ENCRYPTION_ON = _a.ENCRYPTION_ON;\n// Just to be sure that these values are with us even after WebSocket is injected\n// for tests.\nvar WS_CONNECTING = 0;\nvar WS_OPEN = 1;\nvar WS_CLOSING = 2;\nvar WS_CLOSED = 3;\n/**\n * Create a new WebSocketChannel to be used in web browsers.\n * @access private\n */\nvar WebSocketChannel = /** @class */ (function () {\n    /**\n     * Create new instance\n     * @param {ChannelConfig} config - configuration for this channel.\n     * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\n     */\n    function WebSocketChannel(config, protocolSupplier, socketFactory) {\n        if (protocolSupplier === void 0) { protocolSupplier = detectWebPageProtocol; }\n        if (socketFactory === void 0) { socketFactory = function (url) { return new WebSocket(url); }; }\n        this._open = true;\n        this._pending = [];\n        this._error = null;\n        this._handleConnectionError = this._handleConnectionError.bind(this);\n        this._config = config;\n        var _a = determineWebSocketScheme(config, protocolSupplier), scheme = _a.scheme, error = _a.error;\n        if (error) {\n            this._error = error;\n            return;\n        }\n        this._ws = createWebSocket(scheme, config.address, socketFactory);\n        this._ws.binaryType = 'arraybuffer';\n        var self = this;\n        // All connection errors are not sent to the error handler\n        // we must also check for dirty close calls\n        this._ws.onclose = function (e) {\n            if (e && !e.wasClean) {\n                self._handleConnectionError();\n            }\n            self._open = false;\n        };\n        this._ws.onopen = function () {\n            // Connected! Cancel the connection timeout\n            self._clearConnectionTimeout();\n            // Drain all pending messages\n            var pending = self._pending;\n            self._pending = null;\n            for (var i = 0; i < pending.length; i++) {\n                self.write(pending[i]);\n            }\n        };\n        this._ws.onmessage = function (event) {\n            if (self.onmessage) {\n                var b = new channel_buf_1.default(event.data);\n                self.onmessage(b);\n            }\n        };\n        this._ws.onerror = this._handleConnectionError;\n        this._connectionTimeoutFired = false;\n        this._connectionTimeoutId = this._setupConnectionTimeout();\n    }\n    WebSocketChannel.prototype._handleConnectionError = function () {\n        if (this._connectionTimeoutFired) {\n            // timeout fired - not connected within configured time\n            this._error = (0, neo4j_driver_core_1.newError)(\"Failed to establish connection in \" + this._config.connectionTimeout + \"ms\", this._config.connectionErrorCode);\n            if (this.onerror) {\n                this.onerror(this._error);\n            }\n            return;\n        }\n        // onerror triggers on websocket close as well.. don't get me started.\n        if (this._open) {\n            // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\n            this._error = (0, neo4j_driver_core_1.newError)('WebSocket connection failure. Due to security ' +\n                'constraints in your web browser, the reason for the failure is not available ' +\n                'to this Neo4j Driver. Please use your browsers development console to determine ' +\n                'the root cause of the failure. Common reasons include the database being ' +\n                'unavailable, using the wrong connection URL or temporary network problems. ' +\n                'If you have enabled encryption, ensure your browser is configured to trust the ' +\n                'certificate Neo4j is configured to use. WebSocket `readyState` is: ' +\n                this._ws.readyState, this._config.connectionErrorCode);\n            if (this.onerror) {\n                this.onerror(this._error);\n            }\n        }\n    };\n    /**\n     * Write the passed in buffer to connection\n     * @param {ChannelBuffer} buffer - Buffer to write\n     */\n    WebSocketChannel.prototype.write = function (buffer) {\n        // If there is a pending queue, push this on that queue. This means\n        // we are not yet connected, so we queue things locally.\n        if (this._pending !== null) {\n            this._pending.push(buffer);\n        }\n        else if (buffer instanceof channel_buf_1.default) {\n            try {\n                this._ws.send(buffer._buffer);\n            }\n            catch (error) {\n                if (this._ws.readyState !== WS_OPEN) {\n                    // Websocket has been closed\n                    this._handleConnectionError();\n                }\n                else {\n                    // Some other error occured\n                    throw error;\n                }\n            }\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)(\"Don't know how to send buffer: \" + buffer);\n        }\n    };\n    /**\n     * Close the connection\n     * @returns {Promise} A promise that will be resolved after channel is closed\n     */\n    WebSocketChannel.prototype.close = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\n                _this._open = false;\n                _this._clearConnectionTimeout();\n                _this._ws.onclose = function () { return resolve(); };\n                _this._ws.close();\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * Setup the receive timeout for the channel.\n     *\n     * Not supported for the browser channel.\n     *\n     * @param {number} receiveTimeout The amount of time the channel will keep without receive any data before timeout (ms)\n     * @returns {void}\n     */\n    WebSocketChannel.prototype.setupReceiveTimeout = function (receiveTimeout) { };\n    /**\n     * Stops the receive timeout for the channel.\n     */\n    WebSocketChannel.prototype.stopReceiveTimeout = function () {\n    };\n    /**\n     * Start the receive timeout for the channel.\n     */\n    WebSocketChannel.prototype.startReceiveTimeout = function () {\n    };\n    /**\n     * Set connection timeout on the given WebSocket, if configured.\n     * @return {number} the timeout id or null.\n     * @private\n     */\n    WebSocketChannel.prototype._setupConnectionTimeout = function () {\n        var _this = this;\n        var timeout = this._config.connectionTimeout;\n        if (timeout) {\n            var webSocket_1 = this._ws;\n            return setTimeout(function () {\n                if (webSocket_1.readyState !== WS_OPEN) {\n                    _this._connectionTimeoutFired = true;\n                    webSocket_1.close();\n                }\n            }, timeout);\n        }\n        return null;\n    };\n    /**\n     * Remove active connection timeout, if any.\n     * @private\n     */\n    WebSocketChannel.prototype._clearConnectionTimeout = function () {\n        var timeoutId = this._connectionTimeoutId;\n        if (timeoutId || timeoutId === 0) {\n            this._connectionTimeoutFired = false;\n            this._connectionTimeoutId = null;\n            clearTimeout(timeoutId);\n        }\n    };\n    return WebSocketChannel;\n}());\nexports.default = WebSocketChannel;\nfunction createWebSocket(scheme, address, socketFactory) {\n    var url = scheme + '://' + address.asHostPort();\n    try {\n        return socketFactory(url);\n    }\n    catch (error) {\n        if (isIPv6AddressIssueOnWindows(error, address)) {\n            // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\n            // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\n            // and Windows requires IPv6 to be changes in the following way:\n            //   1) replace all ':' with '-'\n            //   2) replace '%' with 's' for link-local address\n            //   3) append '.ipv6-literal.net' suffix\n            // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\n            // For more details see:\n            //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\n            //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\n            // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\n            // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\n            var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\n            return socketFactory(windowsFriendlyUrl);\n        }\n        else {\n            throw error;\n        }\n    }\n}\nfunction isIPv6AddressIssueOnWindows(error, address) {\n    return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\n}\nfunction isIPv6Address(hostAndPort) {\n    return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\n}\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\n    // replace all ':' with '-'\n    var hostWithoutColons = address.host().replace(new RegExp(':', 'g'), '-');\n    // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\n    var hostWithoutPercent = hostWithoutColons.replace('%', 's');\n    // append magic '.ipv6-literal.net' suffix\n    var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\n    return scheme + \"://\" + ipv6Host + \":\" + address.port();\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\n */\nfunction determineWebSocketScheme(config, protocolSupplier) {\n    var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\n    var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\n    var trust = config.trust;\n    var secureProtocol = isProtocolSecure(protocolSupplier);\n    verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\n    if (encryptionOff) {\n        // encryption explicitly turned off in the config\n        return { scheme: 'ws', error: null };\n    }\n    if (secureProtocol) {\n        // driver is used in a secure https web page, use 'wss'\n        return { scheme: 'wss', error: null };\n    }\n    if (encryptionOn) {\n        // encryption explicitly requested in the config\n        if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\n            // trust strategy not specified or the only supported strategy is specified\n            return { scheme: 'wss', error: null };\n        }\n        else {\n            var error = (0, neo4j_driver_core_1.newError)('The browser version of this driver only supports one trust ' +\n                \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" +\n                trust +\n                ' is not supported. Please ' +\n                'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' +\n                '`encrypted:\"' +\n                ENCRYPTION_OFF +\n                '\"` in the driver configuration.');\n            return { scheme: null, error: error };\n        }\n    }\n    // default to unencrypted web socket\n    return { scheme: 'ws', error: null };\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\n */\nfunction isEncryptionExplicitlyTurnedOn(config) {\n    return config.encrypted === true || config.encrypted === ENCRYPTION_ON;\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\n */\nfunction isEncryptionExplicitlyTurnedOff(config) {\n    return config.encrypted === false || config.encrypted === ENCRYPTION_OFF;\n}\n/**\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\n */\nfunction isProtocolSecure(protocolSupplier) {\n    var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\n    return protocol && protocol.toLowerCase().indexOf('https') >= 0;\n}\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\n    if (secureProtocol === null) {\n        // do nothing sice the protocol could not be identified\n    }\n    else if (encryptionOn && !secureProtocol) {\n        // encryption explicitly turned on for a driver used on a HTTP web page\n        console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' +\n            'WebSockets might not work in a mixed content environment. ' +\n            'Please consider configuring driver to not use encryption.');\n    }\n    else if (encryptionOff && secureProtocol) {\n        // encryption explicitly turned off for a driver used on a HTTPS web page\n        console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' +\n            'WebSockets might not work in a mixed content environment. ' +\n            'Please consider configuring driver to use encryption.');\n    }\n}\nfunction detectWebPageProtocol() {\n    return typeof window !== 'undefined' && window.location\n        ? window.location.protocol\n        : null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}