{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar round_robin_array_index_1 = __importDefault(require(\"./round-robin-array-index\"));\n\nvar load_balancing_strategy_1 = __importDefault(require(\"./load-balancing-strategy\"));\n\nvar LeastConnectedLoadBalancingStrategy =\n/** @class */\nfunction (_super) {\n  __extends(LeastConnectedLoadBalancingStrategy, _super);\n  /**\n   * @constructor\n   * @param {Pool} connectionPool the connection pool of this driver.\n   */\n\n\n  function LeastConnectedLoadBalancingStrategy(connectionPool) {\n    var _this = _super.call(this) || this;\n\n    _this._readersIndex = new round_robin_array_index_1.default();\n    _this._writersIndex = new round_robin_array_index_1.default();\n    _this._connectionPool = connectionPool;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  LeastConnectedLoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\n    return this._select(knownReaders, this._readersIndex);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LeastConnectedLoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\n    return this._select(knownWriters, this._writersIndex);\n  };\n\n  LeastConnectedLoadBalancingStrategy.prototype._select = function (addresses, roundRobinIndex) {\n    var length = addresses.length;\n\n    if (length === 0) {\n      return null;\n    } // choose start index for iteration in round-robin fashion\n\n\n    var startIndex = roundRobinIndex.next(length);\n    var index = startIndex;\n    var leastConnectedAddress = null;\n    var leastActiveConnections = Number.MAX_SAFE_INTEGER; // iterate over the array to find least connected address\n\n    do {\n      var address = addresses[index];\n\n      var activeConnections = this._connectionPool.activeResourceCount(address);\n\n      if (activeConnections < leastActiveConnections) {\n        leastConnectedAddress = address;\n        leastActiveConnections = activeConnections;\n      } // loop over to the start of the array when end is reached\n\n\n      if (index === length - 1) {\n        index = 0;\n      } else {\n        index++;\n      }\n    } while (index !== startIndex);\n\n    return leastConnectedAddress;\n  };\n\n  return LeastConnectedLoadBalancingStrategy;\n}(load_balancing_strategy_1.default);\n\nexports.default = LeastConnectedLoadBalancingStrategy;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","round_robin_array_index_1","require","load_balancing_strategy_1","LeastConnectedLoadBalancingStrategy","_super","connectionPool","_this","_readersIndex","default","_writersIndex","_connectionPool","selectReader","knownReaders","_select","selectWriter","knownWriters","addresses","roundRobinIndex","length","startIndex","next","index","leastConnectedAddress","leastActiveConnections","Number","MAX_SAFE_INTEGER","address","activeConnections","activeResourceCount"],"sources":["/Users/zack/src/gene3/node_modules/neo4j-driver-bolt-connection/lib/load-balancing/least-connected-load-balancing-strategy.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar round_robin_array_index_1 = __importDefault(require(\"./round-robin-array-index\"));\nvar load_balancing_strategy_1 = __importDefault(require(\"./load-balancing-strategy\"));\nvar LeastConnectedLoadBalancingStrategy = /** @class */ (function (_super) {\n    __extends(LeastConnectedLoadBalancingStrategy, _super);\n    /**\n     * @constructor\n     * @param {Pool} connectionPool the connection pool of this driver.\n     */\n    function LeastConnectedLoadBalancingStrategy(connectionPool) {\n        var _this = _super.call(this) || this;\n        _this._readersIndex = new round_robin_array_index_1.default();\n        _this._writersIndex = new round_robin_array_index_1.default();\n        _this._connectionPool = connectionPool;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    LeastConnectedLoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\n        return this._select(knownReaders, this._readersIndex);\n    };\n    /**\n     * @inheritDoc\n     */\n    LeastConnectedLoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\n        return this._select(knownWriters, this._writersIndex);\n    };\n    LeastConnectedLoadBalancingStrategy.prototype._select = function (addresses, roundRobinIndex) {\n        var length = addresses.length;\n        if (length === 0) {\n            return null;\n        }\n        // choose start index for iteration in round-robin fashion\n        var startIndex = roundRobinIndex.next(length);\n        var index = startIndex;\n        var leastConnectedAddress = null;\n        var leastActiveConnections = Number.MAX_SAFE_INTEGER;\n        // iterate over the array to find least connected address\n        do {\n            var address = addresses[index];\n            var activeConnections = this._connectionPool.activeResourceCount(address);\n            if (activeConnections < leastActiveConnections) {\n                leastConnectedAddress = address;\n                leastActiveConnections = activeConnections;\n            }\n            // loop over to the start of the array when end is reached\n            if (index === length - 1) {\n                index = 0;\n            }\n            else {\n                index++;\n            }\n        } while (index !== startIndex);\n        return leastConnectedAddress;\n    };\n    return LeastConnectedLoadBalancingStrategy;\n}(load_balancing_strategy_1.default));\nexports.default = LeastConnectedLoadBalancingStrategy;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}