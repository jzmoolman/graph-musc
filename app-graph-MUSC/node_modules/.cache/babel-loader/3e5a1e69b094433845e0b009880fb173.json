{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _neo4jDriverCore = require(\"neo4j-driver-core\");\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar States = {\n  READY: 0,\n  STREAMING: 1,\n  COMPLETED: 2\n};\n/**\n * The reactive result interface.\n */\n\nvar RxResult = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @protected\n   * @param {Observable<Result>} result - An observable of single Result instance to relay requests.\n   */\n  function RxResult(result) {\n    (0, _classCallCheck2[\"default\"])(this, RxResult);\n    var replayedResult = result.pipe((0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._result = replayedResult;\n    this._keys = replayedResult.pipe((0, _operators.flatMap)(function (r) {\n      return (0, _rxjs.from)(r.keys());\n    }), (0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._records = new _rxjs.Subject();\n    this._summary = new _rxjs.ReplaySubject();\n    this._state = States.READY;\n  }\n  /**\n   * Returns an observable that exposes a single item containing field names\n   * returned by the executing query.\n   *\n   * Errors raised by actual query execution can surface on the returned\n   * observable stream.\n   *\n   * @public\n   * @returns {Observable<string[]>} - An observable stream (with exactly one element) of field names.\n   */\n\n\n  (0, _createClass2[\"default\"])(RxResult, [{\n    key: \"keys\",\n    value: function keys() {\n      return this._keys;\n    }\n    /**\n     * Returns an observable that exposes each record returned by the executing query.\n     *\n     * Errors raised during the streaming phase can surface on the returned observable stream.\n     *\n     * @public\n     * @returns {Observable<Record>} - An observable stream of records.\n     */\n\n  }, {\n    key: \"records\",\n    value: function records() {\n      var _this = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (recordsObserver) {\n          return _this._startStreaming({\n            result: result,\n            recordsObserver: recordsObserver\n          });\n        });\n      }));\n    }\n    /**\n     * Returns an observable that exposes a single item of {@link ResultSummary} that is generated by\n     * the server after the streaming of the executing query is completed.\n     *\n     * *Subscribing to this stream before subscribing to records() stream causes the results to be discarded on the server.*\n     *\n     * @public\n     * @returns {Observable<ResultSummary>} - An observable stream (with exactly one element) of result summary.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume() {\n      var _this2 = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (summaryObserver) {\n          return _this2._startStreaming({\n            result: result,\n            summaryObserver: summaryObserver\n          });\n        });\n      }));\n    }\n  }, {\n    key: \"_startStreaming\",\n    value: function _startStreaming() {\n      var _this3 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          result = _ref.result,\n          _ref$recordsObserver = _ref.recordsObserver,\n          recordsObserver = _ref$recordsObserver === void 0 ? null : _ref$recordsObserver,\n          _ref$summaryObserver = _ref.summaryObserver,\n          summaryObserver = _ref$summaryObserver === void 0 ? null : _ref$summaryObserver;\n\n      var subscriptions = [];\n\n      if (summaryObserver) {\n        subscriptions.push(this._summary.subscribe(summaryObserver));\n      }\n\n      if (this._state < States.STREAMING) {\n        this._state = States.STREAMING;\n\n        if (recordsObserver) {\n          subscriptions.push(this._records.subscribe(recordsObserver));\n        }\n\n        subscriptions.push({\n          unsubscribe: function unsubscribe() {\n            if (result._cancel) {\n              result._cancel();\n            }\n          }\n        });\n\n        if (this._records.observers.length === 0) {\n          result._cancel();\n        }\n\n        result.subscribe({\n          onNext: function onNext(record) {\n            _this3._records.next(record);\n          },\n          onCompleted: function onCompleted(summary) {\n            _this3._records.complete();\n\n            _this3._summary.next(summary);\n\n            _this3._summary.complete();\n\n            _this3._state = States.COMPLETED;\n          },\n          onError: function onError(err) {\n            _this3._records.error(err);\n\n            _this3._summary.error(err);\n\n            _this3._state = States.COMPLETED;\n          }\n        });\n      } else if (recordsObserver) {\n        recordsObserver.error((0, _neo4jDriverCore.newError)('Streaming has already started/consumed with a previous records or summary subscription.'));\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n      };\n    }\n  }]);\n  return RxResult;\n}();\n\nexports[\"default\"] = RxResult;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_neo4jDriverCore","_rxjs","_operators","States","READY","STREAMING","COMPLETED","RxResult","result","replayedResult","pipe","publishReplay","refCount","_result","_keys","flatMap","r","from","keys","_records","Subject","_summary","ReplaySubject","_state","key","records","_this","Observable","recordsObserver","_startStreaming","consume","_this2","summaryObserver","_this3","_ref","arguments","length","undefined","_ref$recordsObserver","_ref$summaryObserver","subscriptions","push","subscribe","unsubscribe","_cancel","observers","onNext","record","next","onCompleted","summary","complete","onError","err","error","newError","forEach","s"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/node_modules/neo4j-driver/lib/result-rx.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _neo4jDriverCore = require(\"neo4j-driver-core\");\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar States = {\n  READY: 0,\n  STREAMING: 1,\n  COMPLETED: 2\n};\n/**\n * The reactive result interface.\n */\n\nvar RxResult = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @protected\n   * @param {Observable<Result>} result - An observable of single Result instance to relay requests.\n   */\n  function RxResult(result) {\n    (0, _classCallCheck2[\"default\"])(this, RxResult);\n    var replayedResult = result.pipe((0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._result = replayedResult;\n    this._keys = replayedResult.pipe((0, _operators.flatMap)(function (r) {\n      return (0, _rxjs.from)(r.keys());\n    }), (0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._records = new _rxjs.Subject();\n    this._summary = new _rxjs.ReplaySubject();\n    this._state = States.READY;\n  }\n  /**\n   * Returns an observable that exposes a single item containing field names\n   * returned by the executing query.\n   *\n   * Errors raised by actual query execution can surface on the returned\n   * observable stream.\n   *\n   * @public\n   * @returns {Observable<string[]>} - An observable stream (with exactly one element) of field names.\n   */\n\n\n  (0, _createClass2[\"default\"])(RxResult, [{\n    key: \"keys\",\n    value: function keys() {\n      return this._keys;\n    }\n    /**\n     * Returns an observable that exposes each record returned by the executing query.\n     *\n     * Errors raised during the streaming phase can surface on the returned observable stream.\n     *\n     * @public\n     * @returns {Observable<Record>} - An observable stream of records.\n     */\n\n  }, {\n    key: \"records\",\n    value: function records() {\n      var _this = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (recordsObserver) {\n          return _this._startStreaming({\n            result: result,\n            recordsObserver: recordsObserver\n          });\n        });\n      }));\n    }\n    /**\n     * Returns an observable that exposes a single item of {@link ResultSummary} that is generated by\n     * the server after the streaming of the executing query is completed.\n     *\n     * *Subscribing to this stream before subscribing to records() stream causes the results to be discarded on the server.*\n     *\n     * @public\n     * @returns {Observable<ResultSummary>} - An observable stream (with exactly one element) of result summary.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume() {\n      var _this2 = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (summaryObserver) {\n          return _this2._startStreaming({\n            result: result,\n            summaryObserver: summaryObserver\n          });\n        });\n      }));\n    }\n  }, {\n    key: \"_startStreaming\",\n    value: function _startStreaming() {\n      var _this3 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          result = _ref.result,\n          _ref$recordsObserver = _ref.recordsObserver,\n          recordsObserver = _ref$recordsObserver === void 0 ? null : _ref$recordsObserver,\n          _ref$summaryObserver = _ref.summaryObserver,\n          summaryObserver = _ref$summaryObserver === void 0 ? null : _ref$summaryObserver;\n\n      var subscriptions = [];\n\n      if (summaryObserver) {\n        subscriptions.push(this._summary.subscribe(summaryObserver));\n      }\n\n      if (this._state < States.STREAMING) {\n        this._state = States.STREAMING;\n\n        if (recordsObserver) {\n          subscriptions.push(this._records.subscribe(recordsObserver));\n        }\n\n        subscriptions.push({\n          unsubscribe: function unsubscribe() {\n            if (result._cancel) {\n              result._cancel();\n            }\n          }\n        });\n\n        if (this._records.observers.length === 0) {\n          result._cancel();\n        }\n\n        result.subscribe({\n          onNext: function onNext(record) {\n            _this3._records.next(record);\n          },\n          onCompleted: function onCompleted(summary) {\n            _this3._records.complete();\n\n            _this3._summary.next(summary);\n\n            _this3._summary.complete();\n\n            _this3._state = States.COMPLETED;\n          },\n          onError: function onError(err) {\n            _this3._records.error(err);\n\n            _this3._summary.error(err);\n\n            _this3._state = States.COMPLETED;\n          }\n        });\n      } else if (recordsObserver) {\n        recordsObserver.error((0, _neo4jDriverCore.newError)('Streaming has already started/consumed with a previous records or summary subscription.'));\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n      };\n    }\n  }]);\n  return RxResult;\n}();\n\nexports[\"default\"] = RxResult;"],"mappings":"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"},"metadata":{},"sourceType":"script"}