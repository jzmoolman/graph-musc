{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene-graph-MUSC/src/components/BaseGrpah.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { Neo4jContext } from 'use-neo4j';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { paintNode } from '../tools/graphtools';\nimport { loadGeneData, loadOrganData, loadSyndromeGeneData, loadSyndromeOrganData, loadSyndromeGeneOrganData } from '../tools/grapgdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 350;\nexport const BaseGraph = _ref => {\n  _s();\n\n  let {\n    drawerOpen,\n    name,\n    verified,\n    genes,\n    organs,\n    syndromes,\n    graphScheme\n  } = _ref;\n  console.log(`enter - ${name}Graph`);\n  const isMounted = useRef(false);\n  const [renderTick, setRenderTick] = useState(0);\n  const [nodeeHover, setNodeHover] = useState(null);\n  const [nodePosition, setNodePosition] = useState({});\n\n  const handleResize = () => {\n    console.log('onResize');\n    console.log('renderTick', renderTick);\n    setRenderTick(renderTick => renderTick + 1);\n  };\n\n  const handleMouseMove = e => {\n    let position = {\n      x: 0,\n      y: 0\n    };\n    console.log(e);\n    position.x = e === null || e === void 0 ? void 0 : e.pageX;\n    position.y = e === null || e === void 0 ? void 0 : e.pageY;\n    setNodePosition(position);\n  };\n\n  const handleNodeHover = (node, previousNode) => {\n    console.log('node', node);\n    console.log('previousNode', previousNode);\n\n    if (node) {\n      setNodeHover(node);\n    } else {\n      setNodeHover(null);\n    }\n  };\n\n  const handleNodeClick = (node, event) => {\n    console.log('node', node);\n    console.log('evet', event);\n  };\n\n  useEffect(() => {\n    console.log('Graph mounted');\n    isMounted.current = true;\n    window.addEventListener(\"resize\", handleResize);\n  }, []);\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  useEffect(() => {\n    console.log('Reload data');\n\n    const onData = data => {\n      console.log(data);\n      setData(data);\n    };\n\n    console.log('name', name);\n\n    if (name === 'gene') {\n      loadGeneData(driver, verified, genes, organs, graphScheme, onData);\n    } else if (name === 'organ') loadOrganData(driver, verified, genes, organs, graphScheme, onData);else if (name === 'syndrome-gene') {\n      loadSyndromeGeneData(driver, verified, syndromes, genes, graphScheme, onData);\n    } else if (name === 'syndrome-organ') {\n      loadSyndromeOrganData(driver, verified, syndromes, organs, graphScheme, onData);\n    } else if (name === 'syndrome-gene-organ') {\n      loadSyndromeGeneOrganData(driver, verified, syndromes, genes, organs, graphScheme, onData);\n    }\n  }, [name, verified, genes, organs, syndromes, graphScheme]);\n  const forceRef = useRef();\n  let Width = window.innerWidth - 18;\n\n  if (drawerOpen) {\n    Width = window.innerWidth - 18 - drawerWidth;\n  }\n\n  const Height = window.innerHeight - 85;\n\n  let handleEngineStop = () => {\n    if (forceRef.current) forceRef.current.zoomToFit(400);\n  };\n\n  if (!graphScheme.fitViewPort) {\n    if (forceRef.current) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: handleMouseMove,\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      ref: forceRef,\n      width: Width,\n      height: Height,\n      graphData: data,\n      backgroundColor: \"white\",\n      nodeId: \"name\",\n      nodeColor: \"nodeColor\",\n      nodeLabel: \"name\",\n      linkDirectionalArrowRelPos: 1,\n      linkDirectionalArrowLength: 2,\n      cooldownTicks: 100 // onEngineStop={ () => forceRef.current?.zoomToFit(100)} \n      ,\n      onEngineStop: handleEngineStop,\n      nodeVal: graphScheme.nodeVal,\n      nodeRelSize: graphScheme.nodeRelSize,\n      nodeCanvasObjectMode: () => 'after',\n      nodeCanvasObject: paintNode,\n      onNodeHover: handleNodeHover,\n      onNodeClick: handleNodeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BaseGraph, \"VlZzUKaCxRPEr/ncKfrOIs5+RPQ=\");\n\n_c = BaseGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseGraph\");","map":{"version":3,"names":["useState","useContext","useEffect","useRef","Neo4jContext","ForceGraph2D","paintNode","loadGeneData","loadOrganData","loadSyndromeGeneData","loadSyndromeOrganData","loadSyndromeGeneOrganData","drawerWidth","BaseGraph","drawerOpen","name","verified","genes","organs","syndromes","graphScheme","console","log","isMounted","renderTick","setRenderTick","nodeeHover","setNodeHover","nodePosition","setNodePosition","handleResize","handleMouseMove","e","position","x","y","pageX","pageY","handleNodeHover","node","previousNode","handleNodeClick","event","current","window","addEventListener","context","driver","data","setData","nodes","links","onData","forceRef","Width","innerWidth","Height","innerHeight","handleEngineStop","zoomToFit","fitViewPort","nodeVal","nodeRelSize"],"sources":["/Users/zack/src/gene-graph-MUSC/src/components/BaseGrpah.tsx"],"sourcesContent":["\nimport { useState, useContext, useEffect, useRef, MutableRefObject } from 'react'\nimport { Driver }  from  'neo4j-driver'\nimport { Neo4jContext } from 'use-neo4j'\nimport ForceGraph2D, { ForceGraphMethods, NodeObject }  from 'react-force-graph-2d'\nimport { Force2DData, GraphScheme, paintNode } from '../tools/graphtools'\nimport { \n    loadGeneData,\n    loadOrganData,\n    loadSyndromeGeneData,\n    loadSyndromeOrganData,\n    loadSyndromeGeneOrganData\n } from '../tools/grapgdata'\nimport { positions } from '@mui/system'\nimport { Box } from '@mui/material'\n\nconst drawerWidth = 350;\n\ntype BaseGraphProps = {\n    drawerOpen: boolean\n    name: string\n    verified: boolean\n    genes: string[]\n    organs: string[]\n    syndromes: string[]\n    graphScheme: GraphScheme\n}\nexport const BaseGraph = ( {drawerOpen, name, verified, genes, organs,syndromes, graphScheme} : BaseGraphProps ) => {\n\n    console.log(`enter - ${name}Graph`)\n    \n    const isMounted = useRef(false)\n    const [renderTick, setRenderTick] = useState(0);\n    const [nodeeHover, setNodeHover] = useState<NodeObject|null>(null)\n    const [nodePosition, setNodePosition] = useState({})\n\n    const handleResize = () => {\n        console.log('onResize')\n        console.log('renderTick', renderTick )\n        setRenderTick(renderTick => renderTick + 1 )\n    }\n\n    const handleMouseMove: React.MouseEventHandler<HTMLDivElement> = (e)  => {\n        let position: {x: number, y: number} = {x:0, y:0}\n        console.log(e)\n        position.x = e?.pageX\n        position.y = e?.pageY\n        setNodePosition(position)\n    }\n\n    const handleNodeHover = (node: NodeObject | null, previousNode: NodeObject | null ) => {\n        console.log('node', node)\n        console.log('previousNode', previousNode)\n        if ( node ) {\n            setNodeHover(node)\n        }  else {\n            setNodeHover(null)\n        }  \n    }\n\n    const handleNodeClick = (node: NodeObject, event: MouseEvent  ) => {\n        console.log('node', node)\n        console.log('evet', event)\n    }\n    useEffect(()=>{\n        console.log('Graph mounted')\n        isMounted.current = true\n        window.addEventListener(\"resize\", handleResize )\n    },[])\n\n    const context = useContext(Neo4jContext), driver = context.driver\n    const [data, setData] =  useState<Force2DData>( {nodes: [], links: []} )\n\n    useEffect( () => {\n        console.log('Reload data')\n        const onData = (data: Force2DData) =>{\n            console.log(data)\n            setData(data)\n        }\n        console.log('name',name)\n\n        if (name === 'gene') {\n          loadGeneData(driver, verified, genes, organs, graphScheme, onData)\n        } else if (name === 'organ')\n          loadOrganData(driver, verified, genes, organs, graphScheme, onData)\n        else if ( name === 'syndrome-gene') {\n          loadSyndromeGeneData(driver, verified,  syndromes, genes, graphScheme, onData)\n        } else if ( name === 'syndrome-organ') {\n          loadSyndromeOrganData(driver, verified,  syndromes, organs, graphScheme, onData)\n        } else if ( name === 'syndrome-gene-organ') {\n          loadSyndromeGeneOrganData(driver, verified,  syndromes, genes, organs, graphScheme, onData)\n        }\n\n    },[ name, verified, genes, organs,syndromes, graphScheme] )\n    \n    const forceRef : MutableRefObject<ForceGraphMethods | undefined> = useRef()      \n\n    let Width = window.innerWidth -18\n    if (drawerOpen) {\n        Width = window.innerWidth -18 - drawerWidth\n    }\n    const Height = window.innerHeight -85\n    let handleEngineStop: ()=>void | undefined = () => {\n        if (forceRef.current)\n            (forceRef.current as ForceGraphMethods).zoomToFit(400) \n    }\n    \n    if (!graphScheme.fitViewPort) {\n        if (forceRef.current) {}\n    }\n\n    return (\n        <div onMouseMove={handleMouseMove}>\n            <ForceGraph2D \n                ref={forceRef}\n                width={Width}\n                height={Height}\n                graphData={data}\n                backgroundColor='white'\n                nodeId='name'  \n                nodeColor='nodeColor' \n                nodeLabel='name' \n                linkDirectionalArrowRelPos={1} \n                linkDirectionalArrowLength={2} \n                cooldownTicks={100}\n                // onEngineStop={ () => forceRef.current?.zoomToFit(100)} \n                onEngineStop={handleEngineStop} \n                nodeVal={graphScheme.nodeVal}\n                nodeRelSize={graphScheme.nodeRelSize}\n                nodeCanvasObjectMode={() => 'after'} \n                nodeCanvasObject={paintNode}\n                onNodeHover={handleNodeHover}\n                onNodeClick={handleNodeClick}\n            />\n            \n        </div>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}