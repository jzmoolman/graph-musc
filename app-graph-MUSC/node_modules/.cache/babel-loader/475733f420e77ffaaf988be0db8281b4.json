{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene3/src/components/GeneGrpah.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { Neo4jContext } from 'use-neo4j';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { paintNode } from '../tools/graphtools';\nimport { loadGeneData } from '../tools/grapgdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GeneGraph = _ref => {\n  _s();\n\n  let {\n    verified,\n    genes,\n    organs,\n    graphScheme\n  } = _ref;\n  console.log('enter - geneGraph');\n  const isMounted = useRef(false);\n  const [renderTick, setRenderTick] = useState(0);\n\n  const onResize = () => {\n    console.log('onResize');\n    let tick = renderTick + 1;\n    console.log('renderTick - Organ-Gene', tick);\n    setRenderTick(tick);\n  };\n\n  useEffect(() => {\n    console.log('Graph mounted');\n    isMounted.current = true;\n    window.addEventListener(\"resize\", onResize);\n  }, []);\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  useEffect(() => {\n    console.log('Reload data');\n\n    const onData = data => {\n      console.log(data);\n      setData(data);\n    };\n\n    loadGeneData(driver, verified, organs, graphScheme, onData);\n  }, [verified, genes, organs, graphScheme]);\n  const forceRef = useRef();\n  const Width = window.innerWidth - 10;\n  const Height = window.innerHeight - 90;\n  return /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n    ref: forceRef,\n    width: Width,\n    height: Height,\n    graphData: data,\n    backgroundColor: \"white\",\n    nodeId: \"name\",\n    nodeColor: \"nodeColor\",\n    nodeLabel: \"name\",\n    linkDirectionalArrowRelPos: 1,\n    linkDirectionalArrowLength: 2,\n    cooldownTicks: 100,\n    onEngineStop: () => {\n      var _forceRef$current;\n\n      return (_forceRef$current = forceRef.current) === null || _forceRef$current === void 0 ? void 0 : _forceRef$current.zoomToFit(400);\n    },\n    nodeVal: graphScheme.nodeVal,\n    nodeRelSize: graphScheme.nodeRelSize,\n    nodeCanvasObjectMode: () => 'after',\n    nodeCanvasObject: paintNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GeneGraph, \"2KpojkYrUCJbPv6ATGVhgxv/E7w=\");\n\n_c = GeneGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneGraph\");","map":{"version":3,"names":["useState","useContext","useEffect","useRef","Neo4jContext","ForceGraph2D","paintNode","loadGeneData","GeneGraph","verified","genes","organs","graphScheme","console","log","isMounted","renderTick","setRenderTick","onResize","tick","current","window","addEventListener","context","driver","data","setData","nodes","links","onData","forceRef","Width","innerWidth","Height","innerHeight","zoomToFit","nodeVal","nodeRelSize"],"sources":["/Users/zack/src/gene3/src/components/GeneGrpah.tsx"],"sourcesContent":["\nimport { useState, useContext, useEffect, useRef, MutableRefObject } from 'react'\nimport { Driver }  from  'neo4j-driver'\nimport { Neo4jContext } from 'use-neo4j'\nimport ForceGraph2D, { ForceGraphMethods }  from 'react-force-graph-2d'\nimport { Force2DData, GraphScheme, paintNode } from '../tools/graphtools'\nimport { loadGeneData } from '../tools/grapgdata'\n\n\ntype GeneGraphProps = {\n    verified: boolean\n    genes: string[]\n    organs: string[]\n    graphScheme: GraphScheme\n}\nexport const GeneGraph = ( {verified, genes, organs, graphScheme} : GeneGraphProps ) => {\n\n    console.log('enter - geneGraph')\n    \n    const isMounted = useRef(false)\n    const [renderTick, setRenderTick] = useState(0);\n\n    const onResize = () => {\n        console.log('onResize')\n        let tick = renderTick + 1\n        console.log('renderTick - Organ-Gene', tick )\n        setRenderTick(tick )\n    }\n\n    useEffect(()=>{\n        console.log('Graph mounted')\n        isMounted.current = true\n        window.addEventListener(\"resize\", onResize )\n    },[])\n\n    const context = useContext(Neo4jContext), driver = context.driver\n    const [data, setData] =  useState<Force2DData>( {nodes: [], links: []} )\n\n    useEffect( () => {\n        console.log('Reload data')\n        const onData = (data: Force2DData) =>{\n            console.log(data)\n            setData(data)\n        }\n        loadGeneData(driver, verified, organs, graphScheme, onData)\n\n    },[ verified, genes, organs, graphScheme] )\n    \n\n\n    const forceRef : MutableRefObject<ForceGraphMethods | undefined> = useRef()      \n\n    const Width = window.innerWidth -10\n    const Height = window.innerHeight -90\n\n    return ( \n        <ForceGraph2D \n            ref={forceRef}\n            width={Width}\n            height={Height}\n            graphData={data}\n            backgroundColor='white'\n            nodeId='name'  \n            nodeColor='nodeColor' \n            nodeLabel='name' \n            linkDirectionalArrowRelPos={1} \n            linkDirectionalArrowLength={2} \n            cooldownTicks={100}\n            onEngineStop={ () => forceRef.current?.zoomToFit(400)} \n            nodeVal={graphScheme.nodeVal}\n            nodeRelSize={graphScheme.nodeRelSize}\n            nodeCanvasObjectMode={() => 'after'} \n            nodeCanvasObject={paintNode}\n            />\n    )\n}\n\n"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,MAA1C,QAA0E,OAA1E;AAEA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,YAAP,MAAiD,sBAAjD;AACA,SAAmCC,SAAnC,QAAoD,qBAApD;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AASA,OAAO,MAAMC,SAAS,GAAG,QAA+D;EAAA;;EAAA,IAA7D;IAACC,QAAD;IAAWC,KAAX;IAAkBC,MAAlB;IAA0BC;EAA1B,CAA6D;EAEpFC,OAAO,CAACC,GAAR,CAAY,mBAAZ;EAEA,MAAMC,SAAS,GAAGZ,MAAM,CAAC,KAAD,CAAxB;EACA,MAAM,CAACa,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,CAAD,CAA5C;;EAEA,MAAMkB,QAAQ,GAAG,MAAM;IACnBL,OAAO,CAACC,GAAR,CAAY,UAAZ;IACA,IAAIK,IAAI,GAAGH,UAAU,GAAG,CAAxB;IACAH,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCK,IAAvC;IACAF,aAAa,CAACE,IAAD,CAAb;EACH,CALD;;EAOAjB,SAAS,CAAC,MAAI;IACVW,OAAO,CAACC,GAAR,CAAY,eAAZ;IACAC,SAAS,CAACK,OAAV,GAAoB,IAApB;IACAC,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCJ,QAAlC;EACH,CAJQ,EAIP,EAJO,CAAT;EAMA,MAAMK,OAAO,GAAGtB,UAAU,CAACG,YAAD,CAA1B;EAAA,MAA0CoB,MAAM,GAAGD,OAAO,CAACC,MAA3D;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAmB1B,QAAQ,CAAe;IAAC2B,KAAK,EAAE,EAAR;IAAYC,KAAK,EAAE;EAAnB,CAAf,CAAjC;EAEA1B,SAAS,CAAE,MAAM;IACbW,OAAO,CAACC,GAAR,CAAY,aAAZ;;IACA,MAAMe,MAAM,GAAIJ,IAAD,IAAsB;MACjCZ,OAAO,CAACC,GAAR,CAAYW,IAAZ;MACAC,OAAO,CAACD,IAAD,CAAP;IACH,CAHD;;IAIAlB,YAAY,CAACiB,MAAD,EAASf,QAAT,EAAmBE,MAAnB,EAA2BC,WAA3B,EAAwCiB,MAAxC,CAAZ;EAEH,CARQ,EAQP,CAAEpB,QAAF,EAAYC,KAAZ,EAAmBC,MAAnB,EAA2BC,WAA3B,CARO,CAAT;EAYA,MAAMkB,QAA0D,GAAG3B,MAAM,EAAzE;EAEA,MAAM4B,KAAK,GAAGV,MAAM,CAACW,UAAP,GAAmB,EAAjC;EACA,MAAMC,MAAM,GAAGZ,MAAM,CAACa,WAAP,GAAoB,EAAnC;EAEA,oBACI,QAAC,YAAD;IACI,GAAG,EAAEJ,QADT;IAEI,KAAK,EAAEC,KAFX;IAGI,MAAM,EAAEE,MAHZ;IAII,SAAS,EAAER,IAJf;IAKI,eAAe,EAAC,OALpB;IAMI,MAAM,EAAC,MANX;IAOI,SAAS,EAAC,WAPd;IAQI,SAAS,EAAC,MARd;IASI,0BAA0B,EAAE,CAThC;IAUI,0BAA0B,EAAE,CAVhC;IAWI,aAAa,EAAE,GAXnB;IAYI,YAAY,EAAG;MAAA;;MAAA,4BAAMK,QAAQ,CAACV,OAAf,sDAAM,kBAAkBe,SAAlB,CAA4B,GAA5B,CAAN;IAAA,CAZnB;IAaI,OAAO,EAAEvB,WAAW,CAACwB,OAbzB;IAcI,WAAW,EAAExB,WAAW,CAACyB,WAd7B;IAeI,oBAAoB,EAAE,MAAM,OAfhC;IAgBI,gBAAgB,EAAE/B;EAhBtB;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CA5DM;;GAAME,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}