{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/gene3/src/components/GeneGrpah.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { Neo4jContext } from 'use-neo4j';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { paintNode } from '../tools/graphtools';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selectedOrgansToStr = organs => {\n  let localFilter = '';\n  organs.forEach(value => {\n    if (localFilter === '') localFilter = '[';\n    localFilter = localFilter + '\\'' + value + '\\',';\n  });\n\n  if (localFilter !== '') {\n    localFilter = localFilter.slice(0, localFilter.length - 1);\n    localFilter = localFilter + ']';\n  }\n\n  return localFilter;\n};\n\nconst loadData = async (driver, organs, verified, onData) => {\n  console.log('enter - loadData');\n\n  if (driver == null) {\n    console.log('Driver not loaded');\n    return;\n  }\n\n  const OrganStr = selectedOrgansToStr(organs);\n  console.log('selectedGenderStr', OrganStr);\n  let whereCLAUSE = '';\n\n  if (OrganStr !== '' && verified) {\n    whereCLAUSE = 'WHERE o.name IN ' + OrganStr + ' AND g.FinalVerdict = 1';\n  } else if (OrganStr !== '' && !verified) {\n    whereCLAUSE = 'WHERE g.name IN ' + OrganStr;\n  } else if (OrganStr === '' && verified) {\n    whereCLAUSE = ' WHERE g.FinalVerdict = 1';\n  } else {\n    whereCLAUSE = '';\n  }\n\n  const qGene = `MATCH (g:MGene)--(o:Organ) ${whereCLAUSE} RETURN DISTINCT g.name as name`;\n  const qOrgan = `MATCH (g:MGene)--(o:Organ) ${whereCLAUSE} RETURN DISTINCT o.name as name`;\n  const qRelation = `MATCH (g:MGene)-[r]->(o:Organ) ${whereCLAUSE} RETURN ID(g) as sid,ID(o) as tid, g.name as sname, o.name as tname`;\n  console.log('gGene', qGene);\n  let session = driver.session();\n  let res = await session.run(qGene);\n\n  try {\n    let nodes = res.records.map(row => {\n      return {\n        name: row.get('name'),\n        nodeColor: 'blue',\n        fontColor: 'white'\n      };\n    });\n    console.log('Data loaded - Organ');\n    res = await session.run(qOrgan);\n    nodes = Array.prototype.concat(nodes, res.records.map(row => {\n      return {\n        name: row.get('name'),\n        nodeColor: 'red',\n        fontColor: 'black'\n      };\n    }));\n    console.log('Data loaded - Organ');\n    res = await session.run(qRelation);\n    let links = res.records.map(row => {\n      return {\n        source: row.get('sname'),\n        target: row.get('tname')\n      };\n    });\n    console.log('Data loaded - Relationship');\n    console.log('Data loaded');\n    session.close();\n    onData({\n      nodes,\n      links\n    });\n  } catch (e) {\n    throw e;\n  } finally {\n    await session.close();\n  }\n};\n\nexport const GeneGraph = _ref => {\n  _s();\n\n  let {\n    verified,\n    genes,\n    organs\n  } = _ref;\n  console.log('enter - OrganOrganGraph');\n  console.log('verified', verified);\n  const isMounted = useRef(false);\n  const [renderTick, setRenderTick] = useState(0);\n\n  const onResize = () => {\n    console.log('onResize');\n    let tick = renderTick + 1;\n    console.log('renderTick - Organ-Gene', tick);\n    setRenderTick(tick);\n  };\n\n  useEffect(() => {\n    console.log('Graph mounted');\n    isMounted.current = true;\n    window.addEventListener(\"resize\", onResize);\n  }, []);\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  useEffect(() => {\n    console.log('Reload data');\n\n    const onData = data => {\n      console.log(data);\n      setData(data);\n    };\n\n    loadData(driver, organs, verified, onData);\n  }, [organs, verified]);\n  const forceRef = useRef();\n  const minWidth = window.innerWidth - 38 - 300;\n  const minHeight = window.innerHeight - 60;\n  return /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n    ref: forceRef,\n    width: minWidth,\n    height: minHeight,\n    graphData: data,\n    backgroundColor: \"white\",\n    nodeId: \"name\",\n    nodeColor: \"nodeColor\",\n    nodeLabel: \"name\",\n    linkDirectionalArrowRelPos: 1,\n    linkDirectionalArrowLength: 2,\n    cooldownTicks: 100,\n    onEngineStop: () => {\n      var _forceRef$current;\n\n      return (_forceRef$current = forceRef.current) === null || _forceRef$current === void 0 ? void 0 : _forceRef$current.zoomToFit(400);\n    },\n    nodeVal: 2,\n    nodeRelSize: 4,\n    nodeCanvasObjectMode: () => 'after',\n    nodeCanvasObject: paintNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GeneGraph, \"2KpojkYrUCJbPv6ATGVhgxv/E7w=\");\n\n_c = GeneGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneGraph\");","map":{"version":3,"names":["useState","useContext","useEffect","useRef","Neo4jContext","ForceGraph2D","paintNode","selectedOrgansToStr","organs","localFilter","forEach","value","slice","length","loadData","driver","verified","onData","console","log","OrganStr","whereCLAUSE","qGene","qOrgan","qRelation","session","res","run","nodes","records","map","row","name","get","nodeColor","fontColor","Array","prototype","concat","links","source","target","close","e","GeneGraph","genes","isMounted","renderTick","setRenderTick","onResize","tick","current","window","addEventListener","context","data","setData","forceRef","minWidth","innerWidth","minHeight","innerHeight","zoomToFit"],"sources":["/Users/zack/src/gene3/src/components/GeneGrpah.tsx"],"sourcesContent":["\nimport { useState, useContext, useEffect, useRef, MutableRefObject } from 'react'\nimport { Driver }  from  'neo4j-driver'\nimport { Neo4jContext } from 'use-neo4j'\nimport ForceGraph2D, { ForceGraphMethods }  from 'react-force-graph-2d'\nimport { GraphScheme, paintNode } from '../tools/graphtools'\n\nconst selectedOrgansToStr = (organs: string[]) => {\n    let localFilter = '';\n    organs.forEach(value => { \n        if (localFilter === '') localFilter = '['\n            localFilter = localFilter + '\\'' + value + '\\','\n        } )\n        if (localFilter !== '') {\n            localFilter = localFilter.slice(0, localFilter.length - 1);\n            localFilter = localFilter + ']'\n        }\n    return localFilter\n}\n\ntype dataType = \n{   nodes: {name: string, nodeColor: string}[] \n    links: {source: string, target: string}[]\n}\n\nconst  loadData = async (driver: Driver | undefined, organs: string[], verified: boolean,\n        onData:(data: dataType)=> void) => {\n    console.log('enter - loadData')\n    if (driver == null) {\n        console.log('Driver not loaded')\n        return \n    }\n\n    const OrganStr = selectedOrgansToStr(organs)\n    console.log('selectedGenderStr', OrganStr)\n    let whereCLAUSE = ''\n    if ( OrganStr !== '' && verified ) {\n        whereCLAUSE =  'WHERE o.name IN ' + OrganStr + ' AND g.FinalVerdict = 1'\n    } else if ( OrganStr !== '' && !verified ) {\n        whereCLAUSE =  'WHERE g.name IN ' + OrganStr\n    } else if ( OrganStr === '' && verified ) {\n        whereCLAUSE = ' WHERE g.FinalVerdict = 1'\n    } else {\n        whereCLAUSE = ''\n    }\n\n    const qGene = `MATCH (g:MGene)--(o:Organ) ${whereCLAUSE} RETURN DISTINCT g.name as name`\n    const qOrgan = `MATCH (g:MGene)--(o:Organ) ${whereCLAUSE} RETURN DISTINCT o.name as name`\n    const qRelation = `MATCH (g:MGene)-[r]->(o:Organ) ${whereCLAUSE} RETURN ID(g) as sid,ID(o) as tid, g.name as sname, o.name as tname`\n\n    console.log('gGene', qGene)\n\n    let session = driver.session()\n\n    let res = await session.run(qGene)\n    try {\n\n        let nodes = res.records.map( row => { \n            return { name: row.get('name') as string, nodeColor:'blue', fontColor:'white' } \n         })\n        console.log('Data loaded - Organ')\n\n        res = await session.run(qOrgan)\n        nodes = Array.prototype.concat(nodes, res.records.map( row => {return { name: row.get('name') as string, nodeColor:'red', fontColor:'black'} }))\n        console.log('Data loaded - Organ')\n\n        res = await session.run(qRelation)\n        let links = res.records.map( row => {return { source: row.get('sname'), target: row.get('tname') } })\n        console.log('Data loaded - Relationship')\n        \n        console.log('Data loaded')\n        session.close();\n        onData({ nodes, links })\n    } catch (e) {\n        throw e\n    }\n    finally {\n        await session.close()\n    \n    }\n}\n\ntype GeneGraphProps = {\n    verified: boolean\n    genes: string[]\n    organs: string[]\n    graphScheme: GraphScheme\n}\nexport const GeneGraph = ( {verified, genes, organs} : GeneGraphProps ) => {\n\n    console.log('enter - OrganOrganGraph')\n    console.log('verified', verified)\n    \n    const isMounted = useRef(false)\n    const [renderTick, setRenderTick] = useState(0);\n\n    const onResize = () => {\n        console.log('onResize')\n        let tick = renderTick + 1\n        console.log('renderTick - Organ-Gene', tick )\n        setRenderTick(tick )\n    }\n\n    useEffect(()=>{\n        console.log('Graph mounted')\n        isMounted.current = true\n        window.addEventListener(\"resize\", onResize )\n    },[])\n\n    const context = useContext(Neo4jContext), driver = context.driver\n    const [data, setData] =  useState<dataType>( {nodes: [], links: []} )\n\n    useEffect( () => {\n        console.log('Reload data')\n        const onData = (data: dataType) =>{\n            console.log(data)\n            setData(data)\n            \n        }\n        loadData(driver, organs, verified,  onData)\n\n    },[organs, verified] )\n\n\n\n    const forceRef : MutableRefObject<ForceGraphMethods | undefined> = useRef()      \n\n    const minWidth = window.innerWidth -38 -300\n    const minHeight = window.innerHeight -60\n\n    return ( \n        <ForceGraph2D \n            ref={forceRef}\n            width={minWidth}\n            height={minHeight}\n            graphData={data}\n            backgroundColor='white'\n            nodeId='name'  \n            nodeColor='nodeColor' \n            nodeLabel='name' \n            linkDirectionalArrowRelPos={1} \n            linkDirectionalArrowLength={2} \n            cooldownTicks={100}\n            onEngineStop={ () => forceRef.current?.zoomToFit(400)} \n            nodeVal={2}\n            nodeRelSize={4}\n            nodeCanvasObjectMode={() => 'after'} \n            nodeCanvasObject={paintNode}\n            />\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}