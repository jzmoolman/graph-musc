{"ast":null,"code":"var _jsxFileName = \"/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/BaseGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { Neo4jContext } from 'use-neo4j';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { paintNode } from '../tools/graphtools';\nimport { loadGeneData, loadOrganData, loadDiseaseGeneData, loadSyndromeGeneData, loadSyndromeOrganData, loadSyndromeGeneOrganData } from '../tools/graphdata';\nimport { Box, Card, CardContent, CardHeader } from '@mui/material';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 350;\nexport const BaseGraph = _ref => {\n  _s();\n\n  let {\n    drawerOpen,\n    width = 200,\n    height = 300,\n    name,\n    genes,\n    organs,\n    syndromes,\n    diseases,\n    finalVerdict,\n    graphScheme,\n    hover,\n    onClick\n  } = _ref;\n  console.log(`enter - ${name}Graph`);\n  const [nodeHover, setNodeHover] = useState(null);\n  const [nodePosition, setNodePosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  const handleMouseMove = e => {\n    let position = {\n      x: 0,\n      y: 0\n    };\n    position.x = e === null || e === void 0 ? void 0 : e.pageX;\n    position.y = e === null || e === void 0 ? void 0 : e.pageY;\n    setNodePosition(position);\n  };\n\n  const handleNodeHover = (node, previousNode) => {\n    console.log('handleNodeHove', node);\n\n    if (hover && node) {\n      setNodeHover(node);\n    } else {\n      setNodeHover(null);\n    }\n  };\n\n  const handleClick = event => {\n    console.log('onClick');\n    if (onClick) onClick();\n  };\n\n  const handleNodeClick = (node, event) => {\n    console.log('node', node);\n    console.log('evet', event);\n  };\n\n  const renderHover = () => {\n    //Check if nodeHover is set, if then render card\n    if (nodeHover) {\n      console.log('renderHover', nodeHover);\n      console.log('renderHover', nodePosition);\n      return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Box, {\n        className: \"nodeCard\",\n        sx: {\n          position: \"absolute\",\n          margin: \"2px 0px 2px 0px\",\n          left: 40,\n          top: 100,\n          width: 250,\n          height: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            minWidth: 275\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: nodeHover.name,\n            subheader: nodeHover.nodeType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: \"Detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), document.body);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const context = useContext(Neo4jContext),\n        driver = context.driver;\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  useEffect(() => {\n    console.log('loading data ...');\n\n    const onData = data => {\n      console.log(data);\n      setData(data);\n    };\n\n    console.log('Graph name', name);\n\n    if (name === 'gene') {\n      loadGeneData(driver, genes, organs, finalVerdict, graphScheme, onData);\n    } else if (name === 'organ') loadOrganData(driver, genes, organs, finalVerdict, graphScheme, onData);else if (name === 'syndrome-gene') {\n      loadSyndromeGeneData(driver, syndromes, genes, finalVerdict, graphScheme, onData);\n    } else if (name === 'syndrome-organ') {\n      loadSyndromeOrganData(driver, syndromes, organs, finalVerdict, graphScheme, onData);\n    } else if (name === 'syndrome-gene-organ') {\n      loadSyndromeGeneOrganData(driver, syndromes, genes, organs, finalVerdict, graphScheme, onData);\n    } else if (name === 'disease-gene') {\n      loadDiseaseGeneData(driver, diseases, genes, finalVerdict, graphScheme, onData);\n    }\n  }, [name, genes, organs, diseases, syndromes, finalVerdict, graphScheme]);\n  const forceRef = useRef();\n\n  if (drawerOpen) {\n    width = width - drawerWidth;\n  }\n\n  let handleEngineStop = () => {\n    if (forceRef.current) forceRef.current.zoomToFit(400);\n  };\n\n  if (!graphScheme.fitViewPort) {\n    if (forceRef.current) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: '2px'\n    },\n    onClick: handleClick,\n    onMouseMove: handleMouseMove,\n    children: [renderHover(), /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      ref: forceRef,\n      width: width,\n      height: height,\n      graphData: data // backgroundColor='grey'\n      ,\n      nodeId: \"name\",\n      nodeColor: \"nodeColor\",\n      nodeLabel: \"name\",\n      linkDirectionalArrowRelPos: 1,\n      linkDirectionalArrowLength: 2,\n      cooldownTicks: 100,\n      onEngineStop: handleEngineStop,\n      nodeVal: graphScheme.nodeVal,\n      nodeRelSize: graphScheme.nodeRelSize,\n      nodeCanvasObjectMode: () => 'after',\n      nodeCanvasObject: paintNode,\n      onNodeHover: handleNodeHover,\n      onNodeClick: handleNodeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BaseGraph, \"ac6ezYbCxl6XxR9O3OktqIFCKsc=\");\n\n_c = BaseGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseGraph\");","map":{"version":3,"names":["useState","useContext","useEffect","useRef","Neo4jContext","ForceGraph2D","paintNode","loadGeneData","loadOrganData","loadDiseaseGeneData","loadSyndromeGeneData","loadSyndromeOrganData","loadSyndromeGeneOrganData","Box","Card","CardContent","CardHeader","ReactDOM","drawerWidth","BaseGraph","drawerOpen","width","height","name","genes","organs","syndromes","diseases","finalVerdict","graphScheme","hover","onClick","console","log","nodeHover","setNodeHover","nodePosition","setNodePosition","x","y","handleMouseMove","e","position","pageX","pageY","handleNodeHover","node","previousNode","handleClick","event","handleNodeClick","renderHover","createPortal","margin","left","top","minWidth","nodeType","document","body","context","driver","data","setData","nodes","links","onData","forceRef","handleEngineStop","current","zoomToFit","fitViewPort","padding","nodeVal","nodeRelSize"],"sources":["/Users/zack/src/_-MUSC/gene-graph-MUSC/src/components/BaseGraph.tsx"],"sourcesContent":["\nimport { useState, useContext, useEffect, useRef, MutableRefObject } from 'react'\nimport { Neo4jContext } from 'use-neo4j'\nimport ForceGraph2D, { ForceGraphMethods, NodeObject }  from 'react-force-graph-2d'\nimport { CustomNodeObject, Force2DData, GraphScheme, paintNode } from '../tools/graphtools'\nimport { \n    loadGeneData,\n    loadOrganData,\n    loadDiseaseGeneData,\n    loadSyndromeGeneData,\n    loadSyndromeOrganData,\n    loadSyndromeGeneOrganData\n } from '../tools/graphdata'\nimport { Box, Card, CardContent, CardHeader } from '@mui/material'\nimport ReactDOM from 'react-dom'\n\nconst drawerWidth = 350;\n\ntype BaseGraphProps = {\n    drawerOpen: boolean\n    width: number\n    height: number\n    name: string\n    genes: string[]\n    organs: string[]\n    syndromes: string[]\n    diseases: string[]\n    finalVerdict: string\n    graphScheme: GraphScheme\n    hover?: boolean\n    onClick?: () => void\n}\nexport const BaseGraph = ( { drawerOpen, width=200, height=300, name,  genes, organs, \n        syndromes, diseases, finalVerdict, graphScheme, hover, onClick} : BaseGraphProps ) => {\n\n    console.log(`enter - ${name}Graph`)\n    \n    const [nodeHover, setNodeHover] = useState<NodeObject|null>(null)\n    const [nodePosition, setNodePosition] = useState<{x:number, y:number}>({x:0 , y:0})\n\n\n    const handleMouseMove: React.MouseEventHandler<HTMLDivElement> = (e)  => {\n        let position: {x: number, y: number} = {x:0, y:0}\n        position.x = e?.pageX\n        position.y = e?.pageY\n        setNodePosition(position)\n    }\n\n    const handleNodeHover = (node: NodeObject | null, previousNode: NodeObject | null ) => {\n        console.log('handleNodeHove', node)\n        if ( hover && node ) {\n            setNodeHover(node)\n        }  else {\n            setNodeHover(null)\n        }  \n    }\n\n    const handleClick:React.MouseEventHandler<HTMLDivElement> = (event) => {\n        console.log('onClick')\n        if (onClick)\n            onClick()\n\n    }\n\n    const handleNodeClick = (node: NodeObject, event: MouseEvent  ) => {\n        console.log('node', node)\n        console.log('evet', event)\n    }\n\n    const renderHover = () => {\n        //Check if nodeHover is set, if then render card\n        if ( nodeHover ) {\n            console.log('renderHover', nodeHover)\n            console.log('renderHover', nodePosition)\n            return (ReactDOM.createPortal(\n                <Box\n                    className=\"nodeCard\"\n                    sx={{\n                        position: \"absolute\",\n                        margin: \"2px 0px 2px 0px\",\n                        left: 40,\n                        top: 100,\n                        width: 250,\n                        height: 300\n                    }}\n                >\n                    <Card sx={{ minWidth:275 }}>\n                        <CardHeader \n                            title={(nodeHover as CustomNodeObject).name}\n                            subheader={(nodeHover as CustomNodeObject).nodeType}\n\n                        />\n                        <CardContent>\n                            Detail\n                        </CardContent>\n                    </Card>\n                </Box>,\n                document.body\n            ))\n        } \n        return (<></>)\n\n    }\n\n    const context = useContext(Neo4jContext), driver = context.driver\n    const [data, setData] =  useState<Force2DData>( {nodes: [], links: []} )\n\n    useEffect( () => {\n        console.log('loading data ...')\n        const onData = (data: Force2DData) =>{\n            console.log(data)\n            setData(data)\n        }\n        console.log('Graph name',name)\n\n        if (name === 'gene') {\n          loadGeneData(driver, genes, organs,finalVerdict, graphScheme, onData)\n        } else if (name === 'organ')\n          loadOrganData(driver, genes, organs, finalVerdict, graphScheme, onData)\n        else if ( name === 'syndrome-gene') {\n          loadSyndromeGeneData(driver, syndromes, genes, finalVerdict, graphScheme, onData)\n        } else if ( name === 'syndrome-organ') {\n          loadSyndromeOrganData(driver, syndromes, organs, finalVerdict, graphScheme, onData)\n        } else if ( name === 'syndrome-gene-organ') {\n          loadSyndromeGeneOrganData(driver, syndromes, genes, organs,finalVerdict, graphScheme, onData)\n        } else if ( name ==='disease-gene') {\n          loadDiseaseGeneData(driver, diseases, genes, finalVerdict, graphScheme, onData)\n        }\n         \n\n    },[ name, genes, organs, diseases, syndromes, finalVerdict, graphScheme] )\n    \n    const forceRef : MutableRefObject<ForceGraphMethods | undefined> = useRef()      \n\n    if (drawerOpen) {\n        width = width - drawerWidth\n    }\n\n    let handleEngineStop: ()=>void | undefined = () => {\n        if (forceRef.current)\n            (forceRef.current as ForceGraphMethods).zoomToFit(400) \n    }\n    \n    if (!graphScheme.fitViewPort) {\n        if (forceRef.current) {}\n    }\n\n\n    return (\n        <Box sx={{padding:'2px'}} \n            onClick={handleClick}\n            onMouseMove={handleMouseMove}\n        >\n            {renderHover()}\n            <ForceGraph2D \n                \n                ref={forceRef}\n                width={width}\n                height={height}\n                graphData={data}\n                // backgroundColor='grey'\n                nodeId='name'  \n                nodeColor='nodeColor' \n                nodeLabel='name' \n                linkDirectionalArrowRelPos={1} \n                linkDirectionalArrowLength={2} \n                cooldownTicks={100}\n                onEngineStop={handleEngineStop} \n                nodeVal={graphScheme.nodeVal}\n                nodeRelSize={graphScheme.nodeRelSize}\n                nodeCanvasObjectMode={() => 'after'} \n                nodeCanvasObject={paintNode}\n                onNodeHover={handleNodeHover}\n                onNodeClick={handleNodeClick}\n            />\n            \n        </Box>\n    )\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}