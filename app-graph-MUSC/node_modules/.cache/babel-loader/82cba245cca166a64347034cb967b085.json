{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A facility to select most appropriate reader or writer among the given addresses for request processing.\n */\n\nvar LoadBalancingStrategy =\n/** @class */\nfunction () {\n  function LoadBalancingStrategy() {}\n  /**\n   * Select next most appropriate reader from the list of given readers.\n   * @param {string[]} knownReaders an array of currently known readers to select from.\n   * @return {string} most appropriate reader or `null` if given array is empty.\n   */\n\n\n  LoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\n    throw new Error('Abstract function');\n  };\n  /**\n   * Select next most appropriate writer from the list of given writers.\n   * @param {string[]} knownWriters an array of currently known writers to select from.\n   * @return {string} most appropriate writer or `null` if given array is empty.\n   */\n\n\n  LoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\n    throw new Error('Abstract function');\n  };\n\n  return LoadBalancingStrategy;\n}();\n\nexports.default = LoadBalancingStrategy;","map":{"version":3,"names":["Object","defineProperty","exports","value","LoadBalancingStrategy","prototype","selectReader","knownReaders","Error","selectWriter","knownWriters","default"],"sources":["/Users/zack/src/gene-graph-MUSC/node_modules/neo4j-driver-bolt-connection/lib/load-balancing/load-balancing-strategy.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A facility to select most appropriate reader or writer among the given addresses for request processing.\n */\nvar LoadBalancingStrategy = /** @class */ (function () {\n    function LoadBalancingStrategy() {\n    }\n    /**\n     * Select next most appropriate reader from the list of given readers.\n     * @param {string[]} knownReaders an array of currently known readers to select from.\n     * @return {string} most appropriate reader or `null` if given array is empty.\n     */\n    LoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\n        throw new Error('Abstract function');\n    };\n    /**\n     * Select next most appropriate writer from the list of given writers.\n     * @param {string[]} knownWriters an array of currently known writers to select from.\n     * @return {string} most appropriate writer or `null` if given array is empty.\n     */\n    LoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\n        throw new Error('Abstract function');\n    };\n    return LoadBalancingStrategy;\n}());\nexports.default = LoadBalancingStrategy;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB;AAAG;AAAe,YAAY;EACnD,SAASA,qBAAT,GAAiC,CAChC;EACD;AACJ;AACA;AACA;AACA;;;EACIA,qBAAqB,CAACC,SAAtB,CAAgCC,YAAhC,GAA+C,UAAUC,YAAV,EAAwB;IACnE,MAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;;;EACIJ,qBAAqB,CAACC,SAAtB,CAAgCI,YAAhC,GAA+C,UAAUC,YAAV,EAAwB;IACnE,MAAM,IAAIF,KAAJ,CAAU,mBAAV,CAAN;EACH,CAFD;;EAGA,OAAOJ,qBAAP;AACH,CApB0C,EAA3C;;AAqBAF,OAAO,CAACS,OAAR,GAAkBP,qBAAlB"},"metadata":{},"sourceType":"script"}